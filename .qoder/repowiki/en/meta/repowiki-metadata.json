{"knowledge_relations":[{"id":72,"source_id":"88eb773d-cf93-497f-99d1-38806717f0de","target_id":"fc7c2373-c340-4572-b926-5ecfcf1bdb85","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 88eb773d-cf93-497f-99d1-38806717f0de -\u003e fc7c2373-c340-4572-b926-5ecfcf1bdb85","gmt_create":"2025-09-25T00:24:23.524047+02:00","gmt_modified":"2025-09-25T00:24:23.524047+02:00"},{"id":73,"source_id":"88eb773d-cf93-497f-99d1-38806717f0de","target_id":"323473ec-5361-48ab-aae2-27e07d569e96","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 88eb773d-cf93-497f-99d1-38806717f0de -\u003e 323473ec-5361-48ab-aae2-27e07d569e96","gmt_create":"2025-09-25T00:24:23.525098+02:00","gmt_modified":"2025-09-25T00:24:23.525098+02:00"},{"id":74,"source_id":"88eb773d-cf93-497f-99d1-38806717f0de","target_id":"957006ae-5bb5-4dcd-9fcb-6d3f3f1dd22c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 88eb773d-cf93-497f-99d1-38806717f0de -\u003e 957006ae-5bb5-4dcd-9fcb-6d3f3f1dd22c","gmt_create":"2025-09-25T00:24:23.525738+02:00","gmt_modified":"2025-09-25T00:24:23.525738+02:00"},{"id":75,"source_id":"d94213e2-fafb-4867-96cf-e4f5022057db","target_id":"5434facb-6f22-4480-86d3-1a4dd56c1b74","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d94213e2-fafb-4867-96cf-e4f5022057db -\u003e 5434facb-6f22-4480-86d3-1a4dd56c1b74","gmt_create":"2025-09-25T00:24:23.526343+02:00","gmt_modified":"2025-09-25T00:24:23.526343+02:00"},{"id":76,"source_id":"d94213e2-fafb-4867-96cf-e4f5022057db","target_id":"3595efba-f187-47f9-b480-37389742f16c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d94213e2-fafb-4867-96cf-e4f5022057db -\u003e 3595efba-f187-47f9-b480-37389742f16c","gmt_create":"2025-09-25T00:24:23.527046+02:00","gmt_modified":"2025-09-25T00:24:23.527046+02:00"},{"id":77,"source_id":"d94213e2-fafb-4867-96cf-e4f5022057db","target_id":"c004c7f2-a4d7-4723-94eb-73629736a9e0","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d94213e2-fafb-4867-96cf-e4f5022057db -\u003e c004c7f2-a4d7-4723-94eb-73629736a9e0","gmt_create":"2025-09-25T00:24:23.528019+02:00","gmt_modified":"2025-09-25T00:24:23.528019+02:00"},{"id":78,"source_id":"aeb084c5-e20e-43cf-ac11-f94dadd6ad48","target_id":"5643b7e4-1efc-4df5-94c3-621b4581a146","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: aeb084c5-e20e-43cf-ac11-f94dadd6ad48 -\u003e 5643b7e4-1efc-4df5-94c3-621b4581a146","gmt_create":"2025-09-25T00:24:23.528583+02:00","gmt_modified":"2025-09-25T00:24:23.528583+02:00"},{"id":79,"source_id":"aeb084c5-e20e-43cf-ac11-f94dadd6ad48","target_id":"fb1ef920-2fe6-4da8-afe2-d06fdc1d8003","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: aeb084c5-e20e-43cf-ac11-f94dadd6ad48 -\u003e fb1ef920-2fe6-4da8-afe2-d06fdc1d8003","gmt_create":"2025-09-25T00:24:23.530655+02:00","gmt_modified":"2025-09-25T00:24:23.530655+02:00"},{"id":80,"source_id":"aeb084c5-e20e-43cf-ac11-f94dadd6ad48","target_id":"d0dd7046-f814-4b9e-9d91-bb7c7a97603e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: aeb084c5-e20e-43cf-ac11-f94dadd6ad48 -\u003e d0dd7046-f814-4b9e-9d91-bb7c7a97603e","gmt_create":"2025-09-25T00:24:23.531133+02:00","gmt_modified":"2025-09-25T00:24:23.531133+02:00"},{"id":81,"source_id":"aeb084c5-e20e-43cf-ac11-f94dadd6ad48","target_id":"f0a05da3-bdc6-4d6a-97c3-c1d2eafc1e15","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: aeb084c5-e20e-43cf-ac11-f94dadd6ad48 -\u003e f0a05da3-bdc6-4d6a-97c3-c1d2eafc1e15","gmt_create":"2025-09-25T00:24:23.534966+02:00","gmt_modified":"2025-09-25T00:24:23.534966+02:00"},{"id":82,"source_id":"aeb084c5-e20e-43cf-ac11-f94dadd6ad48","target_id":"b7c33d00-b858-4ab7-a003-03d019725d03","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: aeb084c5-e20e-43cf-ac11-f94dadd6ad48 -\u003e b7c33d00-b858-4ab7-a003-03d019725d03","gmt_create":"2025-09-25T00:24:23.541908+02:00","gmt_modified":"2025-09-25T00:24:23.541908+02:00"},{"id":83,"source_id":"aeb084c5-e20e-43cf-ac11-f94dadd6ad48","target_id":"30153a15-128e-47eb-9242-a11b4a0bff60","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: aeb084c5-e20e-43cf-ac11-f94dadd6ad48 -\u003e 30153a15-128e-47eb-9242-a11b4a0bff60","gmt_create":"2025-09-25T00:24:23.546514+02:00","gmt_modified":"2025-09-25T00:24:23.546514+02:00"},{"id":84,"source_id":"cd8b0d1c-cca7-4a37-ae72-144bfb69a852","target_id":"c8771381-ac36-49c4-8892-b069a3da61e1","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: cd8b0d1c-cca7-4a37-ae72-144bfb69a852 -\u003e c8771381-ac36-49c4-8892-b069a3da61e1","gmt_create":"2025-09-25T00:24:23.548446+02:00","gmt_modified":"2025-09-25T00:24:23.548446+02:00"},{"id":85,"source_id":"cd8b0d1c-cca7-4a37-ae72-144bfb69a852","target_id":"77d61c06-dd21-48d5-9924-e133bff5946b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: cd8b0d1c-cca7-4a37-ae72-144bfb69a852 -\u003e 77d61c06-dd21-48d5-9924-e133bff5946b","gmt_create":"2025-09-25T00:24:23.549595+02:00","gmt_modified":"2025-09-25T00:24:23.549595+02:00"},{"id":86,"source_id":"cd8b0d1c-cca7-4a37-ae72-144bfb69a852","target_id":"4dedab63-db69-48ff-bbcc-6e4035d33900","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: cd8b0d1c-cca7-4a37-ae72-144bfb69a852 -\u003e 4dedab63-db69-48ff-bbcc-6e4035d33900","gmt_create":"2025-09-25T00:24:23.554573+02:00","gmt_modified":"2025-09-25T00:24:23.554573+02:00"},{"id":87,"source_id":"cd8b0d1c-cca7-4a37-ae72-144bfb69a852","target_id":"5f7f2388-f450-496d-988f-b322f1bd2cbb","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: cd8b0d1c-cca7-4a37-ae72-144bfb69a852 -\u003e 5f7f2388-f450-496d-988f-b322f1bd2cbb","gmt_create":"2025-09-25T00:24:23.567248+02:00","gmt_modified":"2025-09-25T00:24:23.567248+02:00"},{"id":88,"source_id":"cd8b0d1c-cca7-4a37-ae72-144bfb69a852","target_id":"1cb5d1b0-9541-4592-93e7-79e44e557875","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: cd8b0d1c-cca7-4a37-ae72-144bfb69a852 -\u003e 1cb5d1b0-9541-4592-93e7-79e44e557875","gmt_create":"2025-09-25T00:24:23.568197+02:00","gmt_modified":"2025-09-25T00:24:23.568197+02:00"},{"id":89,"source_id":"74c5a544-7c60-4842-ac69-1ed72495b584","target_id":"c32cb05c-4921-4bfc-b474-948d5a740719","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 74c5a544-7c60-4842-ac69-1ed72495b584 -\u003e c32cb05c-4921-4bfc-b474-948d5a740719","gmt_create":"2025-09-25T00:24:23.572152+02:00","gmt_modified":"2025-09-25T00:24:23.572152+02:00"},{"id":90,"source_id":"74c5a544-7c60-4842-ac69-1ed72495b584","target_id":"f9fa69c8-e8ce-4599-b844-266f75ea4711","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 74c5a544-7c60-4842-ac69-1ed72495b584 -\u003e f9fa69c8-e8ce-4599-b844-266f75ea4711","gmt_create":"2025-09-25T00:24:23.578787+02:00","gmt_modified":"2025-09-25T00:24:23.578787+02:00"},{"id":91,"source_id":"74c5a544-7c60-4842-ac69-1ed72495b584","target_id":"bc10bdd3-1cce-4959-a2b5-d2e4307e0038","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 74c5a544-7c60-4842-ac69-1ed72495b584 -\u003e bc10bdd3-1cce-4959-a2b5-d2e4307e0038","gmt_create":"2025-09-25T00:24:23.582863+02:00","gmt_modified":"2025-09-25T00:24:23.582863+02:00"},{"id":92,"source_id":"85076032-012f-422d-a936-87fd1157bfd7","target_id":"bffaea12-ca88-46a5-8fb7-cab91a9f0117","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 85076032-012f-422d-a936-87fd1157bfd7 -\u003e bffaea12-ca88-46a5-8fb7-cab91a9f0117","gmt_create":"2025-09-25T00:24:23.588645+02:00","gmt_modified":"2025-09-25T00:24:23.588645+02:00"},{"id":93,"source_id":"85076032-012f-422d-a936-87fd1157bfd7","target_id":"4d591d2c-1459-4ab3-a469-b83303daa1d2","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 85076032-012f-422d-a936-87fd1157bfd7 -\u003e 4d591d2c-1459-4ab3-a469-b83303daa1d2","gmt_create":"2025-09-25T00:24:23.593106+02:00","gmt_modified":"2025-09-25T00:24:23.593106+02:00"},{"id":94,"source_id":"85076032-012f-422d-a936-87fd1157bfd7","target_id":"f3518117-b15c-448c-8aad-58fc063bcf44","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 85076032-012f-422d-a936-87fd1157bfd7 -\u003e f3518117-b15c-448c-8aad-58fc063bcf44","gmt_create":"2025-09-25T00:24:23.596246+02:00","gmt_modified":"2025-09-25T00:24:23.596246+02:00"},{"id":95,"source_id":"85076032-012f-422d-a936-87fd1157bfd7","target_id":"2fc6d334-df92-4342-876f-2f91a281d629","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 85076032-012f-422d-a936-87fd1157bfd7 -\u003e 2fc6d334-df92-4342-876f-2f91a281d629","gmt_create":"2025-09-25T00:24:23.597221+02:00","gmt_modified":"2025-09-25T00:24:23.597221+02:00"},{"id":96,"source_id":"8fa24a4c-3cf2-4dcc-ae4b-8db0df66ae2f","target_id":"7c6d529d-6bec-4498-bcea-b3dd7d9d017e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 8fa24a4c-3cf2-4dcc-ae4b-8db0df66ae2f -\u003e 7c6d529d-6bec-4498-bcea-b3dd7d9d017e","gmt_create":"2025-09-25T00:24:23.601073+02:00","gmt_modified":"2025-09-25T00:24:23.601073+02:00"},{"id":97,"source_id":"8fa24a4c-3cf2-4dcc-ae4b-8db0df66ae2f","target_id":"f8af43c0-7c5f-4de8-ab69-a20e9575c647","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 8fa24a4c-3cf2-4dcc-ae4b-8db0df66ae2f -\u003e f8af43c0-7c5f-4de8-ab69-a20e9575c647","gmt_create":"2025-09-25T00:24:23.604729+02:00","gmt_modified":"2025-09-25T00:24:23.604729+02:00"},{"id":98,"source_id":"8fa24a4c-3cf2-4dcc-ae4b-8db0df66ae2f","target_id":"01262f80-b084-4cef-8d84-d6497a6ae235","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 8fa24a4c-3cf2-4dcc-ae4b-8db0df66ae2f -\u003e 01262f80-b084-4cef-8d84-d6497a6ae235","gmt_create":"2025-09-25T00:24:23.607253+02:00","gmt_modified":"2025-09-25T00:24:23.607254+02:00"},{"id":99,"source_id":"8fa24a4c-3cf2-4dcc-ae4b-8db0df66ae2f","target_id":"a2c344bd-41dd-4205-a3ee-70c443330d29","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 8fa24a4c-3cf2-4dcc-ae4b-8db0df66ae2f -\u003e a2c344bd-41dd-4205-a3ee-70c443330d29","gmt_create":"2025-09-25T00:24:23.607888+02:00","gmt_modified":"2025-09-25T00:24:23.607888+02:00"},{"id":100,"source_id":"751982e6-48bf-4b23-aec8-cce22efa0d5f","target_id":"9b44961c-ec8a-49ce-9b4a-f3aef9a8e2b5","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 751982e6-48bf-4b23-aec8-cce22efa0d5f -\u003e 9b44961c-ec8a-49ce-9b4a-f3aef9a8e2b5","gmt_create":"2025-09-25T00:24:23.608268+02:00","gmt_modified":"2025-09-25T00:24:23.608269+02:00"},{"id":101,"source_id":"751982e6-48bf-4b23-aec8-cce22efa0d5f","target_id":"93ec3bd1-f899-4f5c-8fab-32eb69cc0bf5","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 751982e6-48bf-4b23-aec8-cce22efa0d5f -\u003e 93ec3bd1-f899-4f5c-8fab-32eb69cc0bf5","gmt_create":"2025-09-25T00:24:23.608649+02:00","gmt_modified":"2025-09-25T00:24:23.608649+02:00"},{"id":102,"source_id":"751982e6-48bf-4b23-aec8-cce22efa0d5f","target_id":"d1837874-60ab-4eda-9e28-11bce4506cbd","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 751982e6-48bf-4b23-aec8-cce22efa0d5f -\u003e d1837874-60ab-4eda-9e28-11bce4506cbd","gmt_create":"2025-09-25T00:24:23.60904+02:00","gmt_modified":"2025-09-25T00:24:23.60904+02:00"},{"id":103,"source_id":"751982e6-48bf-4b23-aec8-cce22efa0d5f","target_id":"542490f5-add0-403d-9fb4-e7ed0ba9d3c9","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 751982e6-48bf-4b23-aec8-cce22efa0d5f -\u003e 542490f5-add0-403d-9fb4-e7ed0ba9d3c9","gmt_create":"2025-09-25T00:24:23.609396+02:00","gmt_modified":"2025-09-25T00:24:23.609396+02:00"},{"id":104,"source_id":"cce4a769-b3aa-4505-a0f1-db37c63db18d","target_id":"168920fb-3aa4-408b-bf01-9b09b5cd7000","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: cce4a769-b3aa-4505-a0f1-db37c63db18d -\u003e 168920fb-3aa4-408b-bf01-9b09b5cd7000","gmt_create":"2025-09-25T00:24:23.609774+02:00","gmt_modified":"2025-09-25T00:24:23.609774+02:00"},{"id":105,"source_id":"cce4a769-b3aa-4505-a0f1-db37c63db18d","target_id":"072853ad-b34b-40c6-b22c-7414549feb3b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: cce4a769-b3aa-4505-a0f1-db37c63db18d -\u003e 072853ad-b34b-40c6-b22c-7414549feb3b","gmt_create":"2025-09-25T00:24:23.610106+02:00","gmt_modified":"2025-09-25T00:24:23.610106+02:00"},{"id":106,"source_id":"cce4a769-b3aa-4505-a0f1-db37c63db18d","target_id":"368ad313-ee65-479c-8906-92399cdda758","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: cce4a769-b3aa-4505-a0f1-db37c63db18d -\u003e 368ad313-ee65-479c-8906-92399cdda758","gmt_create":"2025-09-25T00:24:23.61046+02:00","gmt_modified":"2025-09-25T00:24:23.61046+02:00"},{"id":107,"source_id":"cce4a769-b3aa-4505-a0f1-db37c63db18d","target_id":"c29a6f18-0954-48e9-9a2c-e6cfb4d4c0a8","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: cce4a769-b3aa-4505-a0f1-db37c63db18d -\u003e c29a6f18-0954-48e9-9a2c-e6cfb4d4c0a8","gmt_create":"2025-09-25T00:24:23.610801+02:00","gmt_modified":"2025-09-25T00:24:23.610801+02:00"},{"id":108,"source_id":"cce4a769-b3aa-4505-a0f1-db37c63db18d","target_id":"363bfc48-1eba-4de7-8c6e-14594c292d55","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: cce4a769-b3aa-4505-a0f1-db37c63db18d -\u003e 363bfc48-1eba-4de7-8c6e-14594c292d55","gmt_create":"2025-09-25T00:24:23.61114+02:00","gmt_modified":"2025-09-25T00:24:23.61114+02:00"},{"id":109,"source_id":"cce4a769-b3aa-4505-a0f1-db37c63db18d","target_id":"300c4b82-62da-495e-8701-17391c3ec5e1","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: cce4a769-b3aa-4505-a0f1-db37c63db18d -\u003e 300c4b82-62da-495e-8701-17391c3ec5e1","gmt_create":"2025-09-25T00:24:23.611495+02:00","gmt_modified":"2025-09-25T00:24:23.611495+02:00"}],"wiki_catalogs":[{"id":"fd8cd350-12f5-4055-8661-37912703238d","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"System Overview","description":"system-overview","prompt":"Create comprehensive content for this section focused on the overall breakout trading system. Explain its purpose as an automated cryptocurrency trading bot designed to identify and execute breakout trading opportunities with integrated risk management and real-time monitoring. Describe the high-level architecture including the backend (FastAPI/Python), frontend (React/TypeScript), and supporting components like monitoring (Prometheus/Grafana) and deployment (Docker). Illustrate the core workflow from market scanning to signal generation, risk assessment, execution, and position tracking. Highlight key features such as preset-based configuration, state machine-driven engine control, WebSocket-powered UI updates, and diagnostic reporting. Use terminology consistent with the codebase like 'engine', 'scanner', 'signal', 'preset', and 'kill switch'. Include practical examples of common use cases: starting the engine with a specific preset, monitoring trades via the dashboard, and reviewing performance metrics. Provide architectural context showing how components interact across layers. Address beginner concepts like what constitutes a 'breakout' in trading and why risk limits are critical. Also include technical depth for experienced developers covering design decisions behind the event-driven communication and layered service architecture.","parent_id":"","order":0,"progress_status":"completed","dependent_files":"README.md,LAUNCH_GUIDE.md,PRODUCTION_DEPLOYMENT.md","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:10:50.189194+02:00","gmt_modified":"2025-09-24T23:17:53.590279+02:00","raw_data":"WikiEncrypted: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","layer_level":0},{"id":"fc7f31b5-449c-4fed-a00f-33f09a0171b4","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Engine Lifecycle Management","description":"engine-lifecycle-management","prompt":"Develop detailed content for the trading engine's lifecycle management system. Explain how the Engine class in engine.py initializes, starts, pauses, resumes, and shuts down the trading system through well-defined control methods like start(), stop(), pause(), and resume(). Document the role of dependency injection in initializing and wiring together core components such as ScanningManager, SignalManager, RiskManager, and ExecutionManager during startup. Describe integration with the API layer via engine_manager.py, which exposes these controls over HTTP endpoints for remote operation. Include practical examples showing how state changes propagate from user commands (e.g., POST /engine/start) to internal engine actions. Detail error handling during transitions, such as preventing duplicate startups or graceful shutdown on exceptions. Address resource cleanup procedures upon stopping, including WebSocket disconnections and task cancellations. Discuss health checks and readiness probes used to determine engine status in production environments.","parent_id":"ee934741-266d-4bd3-a076-2c6f6e54e5f1","order":0,"progress_status":"completed","dependent_files":"breakout_bot/core/engine.py,breakout_bot/api/engine_manager.py","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:11:24.113276+02:00","gmt_modified":"2025-09-24T23:35:59.513626+02:00","raw_data":"WikiEncrypted:4J/+F+bhFfQhKH4ULf7nJ2O1bvYI61G6WyFjADiaKw1NE1sKlrLhhR10ISqFbwevUIQHpqlgoVy8ZNS1A7CVa1NqX1af3u5mEDlLrCbl+uyX4MvTk2XGJYhUcq69/mIRF3KixPWPSvQA+qX95nAFcVhLDLZUYCJy6CUBppPXQ62HV7tSeZQ6Prjn/RL1z3tMsBjiW5bP5YXaLVXbQJohX2Ijrm4lnOQ3TnbHW4AiZb3iHUf29B7p9DtUG/JJxzPPnXQj5E7Kl/7w4zh8BDVOoutma9DUc0b9FELcYjyFxE03gI2xPU0FwN6j/7ePYWCxu3b18Uf6pLv1W+WbSNf5OQZDEFw0gN26vA9FzCABwJu6C/dXjvHZXFTCUbpYzyV66UANY5Lx+DXJYet5c8PdrEKAhsajX+ZpAVlfyB4n4Zz2Hn5JRPQF4SwdEOoRXGlhqIDQN9zkTz+qy++ITenuK313DMZftQ3hF4uGM8F/voMTNmmOZGhnvZlaLRGAPy9t7fXdoFX7eGbKHco5gV0oqaZ6kmS4/A6BPiqVSHwCMluG22PSFF90UqlBOBVVQSnmXnwFzPVDqKuhs1645SA7unplXwfMzLseL0K9/Kf7lWsxPQtMChZCqnlxWrihmVhXISNmMKgO4uJwr1gu4THcuaPaqlORvJRaJYd5MRbbfJqIr4yIpYz1OzwDW07KsIjHeA6dQGgJx2Tv55fqFmkCNRML0E4iHli0Hs1o2qZPNvT05wxKrvg7T7vb5O9bxwxQfB9O0eMZF7qQiyVIjTkOFGNyviScaYneRdnYUVKBRI6r1C+oHXEoVpgMPwwjvY3MqJgGFrBZNhNmBJgdPgiHLdHNygdZXqylfucu7Ivfm8O0m8k7PpDAycQa4q6OUqmqiidS6CfRt7l0Dm+PeC1bWaOgkh6IthAinLQiOClHAOa5eCjb758I2D+3C/DjakNowyjiUKXpZ0Msbe69SjYtRG6H3qHfco3dMZHHDYeWyPk+GEq9I3MXdyjDibOm4Cua030vWGrSxU5jtcYkThvlNuSWVw2gnL1sUaP5xemjcvHAdNdiB6MIw4WksQFGr+A9FKNhJN2uJ5cFyp0mhdo56vBdZ5sWDCaNUq6N5htaorg7T3lwKWeY/S6umaN1YT7CfAHzlhuQPRA5IWJagKRoQFh+FHdwsFEhU3iOsg/gs/3Oq4B2z6ckiJXvktEnSPvl9nvjcFmScEtxsXC3nHveUTQ1knbqKGfEoSJZoy/JAbvfsJOp8oWVfkqg2gD9X/VIZpe5GgkBGKUu6tWNm0BD+i/6m7KR2YuQTmQB8V7kDyTWK0ifb78COTcd0eEgKGjdAYYivN9a4t6sNsgZQhLmFoSucrBaNBSqy/5CL+1dmbDngYlPg8mKZL4FDFFumHCe7caxORbIcLmUKmdDj1REA2ZUbr2aNJNGCX6c4gnjCxuhb3E4clmBT+Vo5J1HdpuuQeyCTNzwgBGYRERz/o1B+ZA6IXmSCVqGLCKOKF0pST8FkbPKrrIsCI9TFiJ+jcxevMrxunJzJTxISrl46vXnVMyd4rswOzq6UkM9Ab8wrjkk1/DI+PqltPHK4CskGAIjMiX4EKhhNTbk0/eIZrbSXnyVxbpSRvZWkyRu/ciqevpBM8qvXVhWpBnDsbcyaLceWXL6tghy5xCZgtWqbUfu6GbMyJrz2D8C/z1EzTjPTucvbTp0klt53sdGQ0PT3/TeL0sEXZLSyC5iRdFw/ezSu7lvuD70C+2uikOumvrdsGUvrLVTYaRZFsDU566FxhyDdxOudat27Y9v5tfCUmxojt7wUahpJFRzL/ZpjsFeIWDLom8y/Pz6eyI5UaJ1X6fc","layer_level":1},{"id":"eb968cb8-b1ff-4642-a9b6-ce5a49679db5","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Engine Control API","description":"engine-api","prompt":"Create comprehensive API documentation for the engine control endpoints in engine.py. Document all HTTP methods (GET, POST) for /engine/status, /engine/start, /engine/stop, /engine/pause, and /engine/resume. Detail request parameters, response schemas using Pydantic models from core.data_models, and status codes. Explain state transition semantics including valid transitions, idempotency guarantees, and error conditions (e.g., invalid state changes). Include example cURL commands for each operation and sample JSON responses showing EngineStatus with current_state, mode (paper/live), and performance metrics. Describe integration with the State Machine pattern in state_machine.py and how API calls trigger lifecycle events. Address security considerations such as authentication requirements and rate limiting via middleware.py. Provide troubleshooting guidance for common issues like failed startups or unresponsive controls. Discuss monitoring implications through integration with diagnostics.collector and real-time updates via WebSocket.","parent_id":"b7062f6d-b447-43b6-b46d-938166fcb0bc","order":0,"progress_status":"completed","dependent_files":"breakout_bot/api/routers/engine.py,breakout_bot/core/engine.py,breakout_bot/core/state_machine.py","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:11:42.391187+02:00","gmt_modified":"2025-09-24T23:35:39.823131+02:00","raw_data":"WikiEncrypted:4J/+F+bhFfQhKH4ULf7nJ3YH4+0UI6Js4o+UVfmV/+l7iwvhI9fupi/l0lduSFse8Y6KLh+1YydTAl1XJLuA/xgBWUSQqZQXTaArX9uzgMxhJNVQDlXx1pttJ3FfQBADHt0sK1/ydjn2Z+UcXRhruQlLay1MoJ6pLCLXoBVDznfG9eikfwIwcB0sYdIzfDQ9YOC/khPYXQow5Pku4BLYglvi1v6ClhNfM933SDA5pXmwJOCgmiVVcMWbf4OZQ2E2zhMDjfT+U+fxzrxo6ehxGw43GC6Lt32dd/jrhRCDLJMLwaUY9cnZ9youhT/NfTkgabOdYX7pNyEsIuCyokPYSfxXTVcynMvUMqYQLXrZNp2dJZ1ctGfI1JPz9iGmUnMnt19jtldcJJg6HA2MH3kD4w8eQ85/gjB1HV7v8KotGUhZHf0h8LW11o6fCnb2hOlnClOjCVuu1UXlhWSzOIZJtdovYgntJwo6c8lD8rbPnb0jc6dhb0vKCLyYiCHjilLt35rgzcOI/TsBUlP09LMw0DnrZUyGCnevmOTlhEgf1sXYPjl7G/ZklpYMIOr8ylV9GkPMsJrpn8hv0nPaIqbW6zqcBo9iN7KoKyQmSB4klL1tNDKrbJ+4JVdFVnC7gPsOszzq2cCW+NRaK5BKIXz4ERRO6ZIzCEX7hfRzpOTHoJdJuo7e5mPISftDbeVHNmh+zUSd+0CWZoMxRP/W+TddyvWRNb6mmKjdw+s/UjIYXE5tnG3AGJb6S+qOxdN4iCeEoS45Q/S4VPi5whk1FqwlV5Qfv2HCCGSoWQ1nbE8d0cPZugDIqv8zroabtB+M/wN+tsV94+4X48/0vgVWWdRCS9FKvl3vjuTwbugzmvSHwwxRkJb6/DrfkkPswjWDL+yfkwAkN8taAfRJ43HMOmOBeCCHYgLXLVPEfg7PIIg5oLioFLwJBlnu7RstfvisLPXqPQ2zmDzM1AdfAFxlrKZ05vFt4X+9126Iiwm4d7XPYXP1ISNuK0W5yuGrXvKUC0L6cfiX2YJTnf4T3BBh999rcp9wVbgr7kkOh307z0fpwmyl1fsheyRvDZ8f9naHXUiyypCrPdEd0JEUVzkBWbvMqkdipnEG3xrJKBvnCj0UIQ1EpUZy+mtFC0cwTz6TLoueD3JexFVpTMVUAWiNSlwdGJXBlb32gxcB5urHJFRDyBCOjzESSAA7qSMenq5cdwOqesKdUObM6Y6R5zoMJ4/ImiTQ8Qmj7J6ZUi7bVxor7zdU7zCYDkncjfBgw2zzSEKhtzOrf+JPpXwLbLPR/4IOWhleRRFqL04Agt1GyLTCqGeudvoSDUJaSS4g/rFAzPrZIgB8Cse+L7F0kkuFtBhJzGWn48ILDF0GZqcdMoSK7hZdj03/FDGCPMoWrC9C55BNdhcLsPCBhB6NqxqeW8rsrsN9fk8PGobc7Is44Ed4GOSrJ4Bqk4BSw/uUdTm67B+yOu6W2FtHXHisGEGR8MgeJ6Hxg1s7VDp8Xd1wxBRBZotXaGzqwx6KQ9eyrqWC/4X7Ak7CFjB8osJOIVgd+8Q6ZkcVj1OMCCTYD/9dAMxTnKSkXrs6xLGN0F2pwW0p4mJ+uENduof3p9kd06QtGp4P9Bfki/ToG0YBWPz3WXLzqNl+o1bPCd4tLvfDdxOyybXtlwaABP6fLWav5swey7S/2fYFQB4Fm9MXW5g+gI5ajc4L1idfoA/LQB2OzuAeO0GuXo7665D2BA9rDmO5KKRz01KGURvr46Dg2nvXSp01gUwmYILtvA5J9aGOTrqeddY69pFwtE5WGzitSXEaAtMBWb8QufkXG52XfkyIu6haTg7FTgfVxoSGrhhdreE5JmU0","layer_level":1},{"id":"e739a6a7-d7d9-4f51-8808-983bd717f206","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Preset Management","description":"preset-management","prompt":"Develop detailed content for this sub-feature focused on preset management in the Breakout Bot system. Explain how trading strategies are encapsulated as reusable JSON presets that define complete behavior across scanning, signaling, risk, and execution layers. Document the structure of preset files including required fields like name, description, target_markets, and strategy_priority, and nested configuration objects such as risk, liquidity_filters, and signal_config. Demonstrate practical examples of different preset types: 'breakout_v1' for general breakout detection, 'scalping_high_freq' for rapid trades with tight parameters, and 'high_liquidity_top30' for large-cap stability. Show how presets are loaded via the load_preset() function, validated using Pydantic models, and accessed through the Settings class interface. Include code examples of loading a preset programmatically and handling common errors like missing files or invalid JSON. Address best practices for organizing presets, naming conventions, and versioning strategies. Explain how the get_available_presets() function discovers all valid JSON files in the presets directory and how this list is exposed to the frontend UI for selection. Provide troubleshooting guidance for issues like schema mismatches, validation failures, or performance differences between presets.","parent_id":"84bea7c7-9ac7-4353-99d3-b94d4baab7c7","order":0,"progress_status":"completed","dependent_files":"breakout_bot/config/presets/breakout_v1.json,breakout_bot/config/presets/scalping_high_freq.json,breakout_bot/config/presets/high_liquidity_top30.json,breakout_bot/config/settings.py","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:11:50.455601+02:00","gmt_modified":"2025-09-24T23:35:24.567109+02:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"63894fa8-5483-4453-b172-6aad55dfc747","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Dashboard Overview","description":"dashboard-overview","prompt":"Create comprehensive content for the Dashboard page, which serves as the central hub for monitoring system health and performance metrics. Explain its layout and key components: real-time display of engine status, performance KPIs (P\u0026L, win rate, trade count), system resource usage, and recent activity feed. Detail how data is fetched via useEngine and usePerformance hooks using React Query for efficient caching and background updates. Document the integration of MetricCard components to visualize critical values with dynamic formatting and state-based coloring. Include examples of interpreting dashboard data during different engine states (running, paused, idle). Address responsiveness across device sizes and accessibility features such as screen reader support and keyboard navigation. Provide troubleshooting guidance for common issues like missing metrics or stale displays, including cache invalidation procedures and WebSocket reconnection logic.","parent_id":"a8672b15-afbe-4fe5-ab77-829c873c754e","order":0,"progress_status":"completed","dependent_files":"frontend/src/pages/Dashboard.tsx,frontend/src/components/ui/MetricCard.tsx,frontend/src/hooks/useEngine.ts,frontend/src/hooks/usePerformance.ts","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:12:15.556584+02:00","gmt_modified":"2025-09-24T23:37:08.105252+02:00","raw_data":"WikiEncrypted:rL6JaAWnwczCsZW+uBgt2JIVYaiZm4XMZSrr17KsTUW2mlpVuyhJdif2Aazlc9js/HI9Uj2siOIEikESv0gTRn6KCxBJYw6fieoCYlxq1Z8bEOAufy6FsyU/wU3plVjXy5jjZt8TWbKMWZDWjVn6vstzu9ezmUGosiD51KJH9VGUfVXH5WV4uWF56imgIklzSIRbb65c66jmlTVHKVyrcYlPoiRWLOBThkLdWT4wp7YBLchHpBCN3/my92GMhSRVfLdnuIxP6DKjnUDO5tnavyCMNHc0h29mtt9Y0HHn29Pd7K6IMcQLkFXW/oRxu0uWRj84CPVNQMzIMTGB6TGiVVG42R3hK1bqW+aly4/sFTt7cU1/lT3hLYaVGlamOVv86ud8/BFtE7iDUJpNVglmzKW9GpVZ0SJ/JsLccpfUzj2RHWDxs930t2AN19ItcXpYsiJQIufwIXR9bsbb9wzFdKO+G6SPEoQasZF/S+gdSLHO3kJN5Ak0HQ9bBsUxatD1tylupskNKuMwKPw3vWheUaTIvxsqQURR4sXRXyVAIBd3wu2iwLsqbaU2DPxg6ok6bQ2tQ0QQ/zySjRL/tIJepG0h4Q14+sM0tVVB069etZ/qTkDkzkAeNVy/Hq6Mprhu26nab4m8j6Z1osMInTaBxnefEIAyDBPE49Vnj6p1YSpd/Dk1JMWeaNIa2Zg/8bCB7JuNqRM4x6bDARtC9WDpXAlQUbDooTQt37tJpNyCGZjLJCuzkKINsv+kv0FAwN8IarcQqs+noZ2/20BMq34mX0x098f7zSLpTXbp4SF6XYtKnrIvGlFpDemz/QH0VAM/gwpNdmzCb89kRI17bVST8p9U+1/+Mhl5TkKxI9yZ12Zz4PmhuUUJA7Neykc0DFa9id6KVBGjr7HDTZmATKcaMBPEIbpPpu/wDcK/YM5Wu/LVsxzEKTIZSjvpVzSHUEHkOLzNk7Ro9t/MaWOip4kNHFJeYkth9yIC2qEItx6+o40hvDT72WuxcxGmHnQz3T4IHuoFvjXwiekaZDynmAnqtRj1p49U7a+cTSYkWKQI0uOcqKEqyhKyXBThf8UW4T8gFWlP1hMCWsIYu9YJ0rVQWH//AYgFVfHmEbjYrZov+MqvHP90OmUyfH4fTtpaWtfQyLmfvw3tOBsvRbR6qvRxaIdr3hGNo5dqNVAv4xVaHkNWrc+7rR+6QtZROeDpHweJoPpV7FJNOPg5Fbr3UUN04FV6nQy6mciI6jiUnHDINcXweMy+VzoLcrLgGnJcPCbOJk5hVd3KUhXSjMUcJ4Jw8uZoQR6ZCw2oaF3YKkAl0y90m4xELQ5fPhRkUkr6YuK0dM2Z2PzHTxz0nTS6LK97FjEJC9eDOXFO6hRmCpVgkfNfJeSVUGOQa9bmxy0FqCFmsAI42tnBbKDTv0wldqa79dBAxVgZFVw+9s5H0/BEegQ1BxSBZ/PDoXr8NTJZUsDIckoYZpucuulPbOfWzjC+tI6u8yPZoKH2dTWudA1Nv1vn/fb8Xcu70eS0QrqD5n+9mhGlm6vMktf4JmCmufSNAtX6SgzSCOwMt8e/2OzaQFKgHx5MiBYNS9NhfS/FaGsrYFWeYiYaK4gOwrZlaQynZxnzp29aBs/911zX2vJk0hFr83IxpTZAAHwHCW1ApsdpZH8ZTJSkLlEy6zqkrR57l75Y5zN7dgsYQlB6J+Zvu03juWd3iYxMRoOZ9/MC9AwvS31n2dRpdbcYlK7kKT9AJQjNYOXAKrwh4KIES67+zvcOTrJMvdponY6XXwS2KSU9h78Jhr9RsRkprZL9ssBbtY2ZlZhObHFgG3Q3z3Bnv7s=","layer_level":1},{"id":"cacfc948-070a-4f11-a789-9258f9f85f2b","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Metric Collection","description":"metric-collection","prompt":"Develop detailed content for the metric collection subsystem that captures real-time performance and operational data across the trading engine. Explain how collector.py implements a modular diagnostic collection framework that gathers CPU usage, memory consumption, request latency, signal generation rates, and trading KPIs such as win rate and R-multiple. Document the integration with FastAPI's /metrics endpoint via metrics.py to expose Prometheus-compatible time-series data. Include examples of custom metrics like 'signals_generated_total', 'engine_uptime_seconds', and 'risk_checks_failed'. Describe the internal event-driven mechanism that triggers metric collection on state transitions or trade events. Provide code examples showing how new metrics are registered and sampled. Address thread safety in concurrent environments and performance overhead mitigation strategies. Explain how metrics are aggregated over time windows and tagged by engine instance or strategy preset. Discuss best practices for adding domain-specific metrics when extending the system.","parent_id":"f199b129-963f-4f69-8f08-1183ec20082a","order":0,"progress_status":"completed","dependent_files":"breakout_bot/diagnostics/collector.py,breakout_bot/utils/metrics_logger.py,breakout_bot/api/routers/metrics.py","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:12:19.276719+02:00","gmt_modified":"2025-09-24T23:38:40.130538+02:00","raw_data":"WikiEncrypted:wqMZoWM7JzuUrLNEmTF3PHeHA0mARgTY2cfm8qCpwDtxvn8ahbSTliByW4VA59MQEhXHrENH/0lStWiQDwpGBXyJ80sWcL0uUSEE0d1TzOVOdszX6rTbqVpahAqv7qQnRT3Nn7L5DIzS6Ul2/bgs2h/0uGsKXGyQ7fndepnYkNWy6yN2xRU69rboCI9CU9J0pxlaRRhWubNSjvhCSMLzwnZOKvjMDSpNSJWYqAS40kaAPdaxxYoSrT7wagoRrz7BVAHT0s1ePwihWpodr7Q+yM+I++BUjsI+sW7i6jL5So1o74O/WDePnRkBH+UziBwIxrsi41jhvgQ5J4SvD/KcXkMEExGeb/DxUwYa0A11GREROuUKL1VkHSD3pMroGaY2q8CFo+kQVZcGR46y75tw3T3dFcuAo/v+MbSr7d6yzaAZ5jdDyKIXCmjEq2jP1nPjfURiCyoVnSbXDBL7ZtAwY6GY86CFzDfUUA5KMm2+NvXpn3wlDcFLowxcvoxDPDOBPqDfzFG6pzyfxzx22sOVm1c1l8L6aZRF/IAyO1V8E8hT5tgScS7IfJjhayPhwgCmgdjv6sI4p1qwefspEaAPyhEn68w8HXhoYEW//OHoGU95mgYmm54o5Y3L1oM1QJZeTzx758ijMMtLfJ2ToglUt2PrZ2Xc7gAlR0MIVxSH+xvkLWEakIFkjSw7KgC2o1F1hbZmFwkOpAAvJwIJZ+rU6ZUBG1vA1clEL8LD2Ju3XwsVOzRHVjvL+itSXqyP9jHc0Hok08LK9kpkGQCXhKz3AcFl35Bo8x4/agFO9Haq8Zu3BeebYnRikcq5iSnD7NE+7Z959RYubjp8LpVAx2Qqu/Z6rPeMNSbNmFdGGFXcnIaz7H74Yq246XHqxg7XqLx8Lxq0BVjcy2OrDtqILIY4UxHCg6Q6YuWk6CIxEuwCd/0ILBGAhsgfePquERXee50TpjBHzpNXRhv3sDMdaFtBTeL3YJxFGRTO/rSccgwtIMPPyP44EsnmTAE8sKEQKZe+5PjTdJxI5lHW4nhiVa8qZN4r1IPEUJe7nxf4fmkw807Y1fyJk0Odpp4gXxTmwn5pK349PS/mtliXTkdFweMExxE1gdFc3dzOu0hFyCt9Qs8kRMa8osOJiGf7CYFcj9mEZv56044xh/dqTuHD/d5fEy9LP36qVsUMHNeJyAcDFg+W7rPYbxzSO/HLRTLMTxZKYErK7z7sVIvCbMRPrX9eaPZtpSBjpR9gStPA9grq7KzneJpYbhrVfpIPqy8GFACp4uoF2sVJC9KpA67Sxsft2PC0qBs7yW3fRhGpwnD5qOhs8qPWSuhWW9PN2SBqxoRxTBqe95I3BQv7Srf6mJrx0Ubcl3UM91dW5ELS5ZAOHx5x8iJ4ajSSxe1N/afVzddzQgKKLjpyFxJJrnxVCuWwcre8vlqYXHC81N3njWfhzG1i4qVyBRyNWGzCxtqbDS8f4BFks4zsrGRWlSQ6t6mUBgWD7Lo2hlvgr3HhuIz+VbVs9NFM+XLpPrgD8LnVDkAlLIwzjyTxXimpUZ5Luqt+nO4uE/WRlR+it42NwNh8HNcLw3IZpEwEyPvhv78Xq8SbMENF06cULKsxBOZorGXbjbWzHfqGP8PpufGkC1eVbxxvGa5MoCqyglNXPFl6GAltCcPBPdcWwwUMpZLRQVzqJO4kdZOdEuKph0xNuysoKV/GkbLx7OAtBmE2181ID6qkfiGpKDzMWl6a15Ob/V/qUQSp0uR/14NhZIYgPziyLNOOqJNTh6Mn8EhKX0tTkDpCsUeJjY6rdei065p56iAIoAJyQxHEw+GqZofzts7tpV36jt59dJy2HTGgICWcjWvZ85g7BIr9BtrX95gCl8kJieD2kEazGq1ab0RndkNULUo=","layer_level":1},{"id":"54fd6069-efa4-4d2c-b858-80e42288b380","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Unit Testing","description":"unit-testing","prompt":"Develop detailed content for the unit testing framework ensuring isolated validation of individual components in the breakout trading system. Explain how test_engine.py validates state transitions, lifecycle management, and error handling within the OptimizedOrchestraEngine. Detail how test_signals.py verifies signal generation logic under various market conditions using mocked scan results. Describe test_risk.py's coverage of position sizing calculations, risk limits enforcement, and kill-switch triggers. Illustrate how test_scanner.py confirms candidate filtering accuracy against volatility, liquidity, and correlation thresholds. Document test_positions.py's verification of entry execution, stop-loss updates, and trailing stop mechanics. Include examples from actual test cases showing assertion patterns for financial computations with tolerance thresholds. Cover pytest configuration in pytest.ini including marker usage (unit, integration), code coverage requirements (80% minimum), and fixture organization. Address challenges in mocking exchange APIs and time-dependent behaviors. Provide guidance on writing new unit tests for custom strategies or risk rules.","parent_id":"7f23d147-00d2-4cd9-a0d4-ccf720739443","order":0,"progress_status":"completed","dependent_files":"breakout_bot/tests/test_engine.py,breakout_bot/tests/test_signals.py,breakout_bot/tests/test_risk.py,breakout_bot/tests/test_scanner.py,breakout_bot/tests/test_positions.py,pytest.ini","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:12:31.950401+02:00","gmt_modified":"2025-09-24T23:40:30.07305+02:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"78f57b7a-2ba7-45e4-b3f2-71fc07f31b69","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Containerization","description":"containerization","prompt":"Create architectural documentation for the containerization strategy used in the trading system. Detail the backend Dockerfile including base image selection, Python dependency installation via requirements.txt, multi-stage build considerations if present, and entrypoint execution through start.sh. Explain the frontend Dockerfile covering Node.js environment setup, npm package installation, Vite build process, and Nginx serving configuration via nginx.conf. Document best practices implemented such as minimal image footprint, layer caching optimization, and health check configurations. Describe how environment variables are injected at runtime and how secrets are handled securely. Include guidance on building images locally, tagging conventions, and pushing to container registries. Address security aspects like running as non-root user, read-only filesystems, and vulnerability scanning. Provide examples of common build commands and troubleshooting tips for failed builds.","parent_id":"981b35ea-437c-4941-9f28-6f37f80aadb5","order":0,"progress_status":"completed","dependent_files":"Dockerfile,frontend/Dockerfile","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:12:50.819435+02:00","gmt_modified":"2025-09-24T23:40:00.457766+02:00","raw_data":"WikiEncrypted:OYVOcFWO8QG2KTNzD99v4xxMusUyWhQxf3J/07wObNuCT6jYygg6XL1eTDKOvkqTBGsB8xJ81muM/hpPm+FqvOE3F65fkVETbTsD3jK5t0qB6/GcQSMC9AVMr3fvgjkWCToD1KHnMD+ynxFbYosKaUMelx83BUk+yY62KFlJO4QN1AgvSp7ofE+OjIxJlb3qfuY/pZTzChJIltk/j/9/WvpDnTcABpsZe6BTg0emoQ1Gz1RD+C29esvL/wgQELAtLG7he2aETlQN4hr3UR8NBVAqX2caRxvyys4fTRT6qYhnh4xfH/IeMchH8n1jhn21AQKpfk8SVy+vhQNJJYR1FJiMm+dCQ7ucrlZwDg7BDGKoczLcyKgbyGHdI78v1pVrsJlRK1WpLOiRlrtrha0tpMDmjJZbgGKdcN7Z6D1GgpSFdK/ToKTXL9BMemlWMj80NDSLSiZ+QxaGfLxOJ20X7BVCZ/GUphu1RNnYOkt24P6T/QlhU8T5/8IdRSCJGRadJi/aAnAU2QNDCty9XKLXGZH7WQPpn/l1OlDUFuDgqaYwCQ2wmrlRe0zjoaoDm+Gi35l4zcrn5MmJddToLcAB9HfSsFRlrODOPa+/LLpShnD3fI0759Mly0/ZgbwahskugzJZQFQoQaq0rL1k1RBrGTfoQgIdbPHOYwDsnukAggDx/Hckt3YLna1AoOY1HJMhs5lMnBtD3ryt6FFBxO8aEd7yIDNAwpwXt8quHUojeTUbn6ktWgdK7JAJLEwyO7MMBXgV9OvX8BYyN9x9koD8uN2eMklz0Le1j/xO49Kft+MBz+P2oiXHPz/q68x/fJJrvRbHNSMdvVI10PDVdHsqX2I7nFsIkPWUy7kdnru3Piv849YoFFZjdMJC8QviF+m4gZRNog61W4eQ2+hVpTTGXrO+Z2suKAyqkigiO/fRh/d9o0hF1XirzAZ9Z3sgCkxoKjlVF/CF+U6YMgmvbD4rFfVpd76LF+iJeV+wTs9/H/QmPBgUUjl87T0oIxnUFCgg/QMRH3YIokj/TDbKs50aK2nCn+MZ/cWanDtEDpvvHfNJuAS+GQrunxrRUk4+SDspaDc5Nly1rkMIQO4C8wifLwwes7uHfcF71l0b8ThXSIqNJzCnkPURXcfwOqQlWJx5Qxgn/BhmyIu9k/wdlm5UDzAG/UeUGHO26wvX7UUZYzZFy/JjWBiaVFokRqZtu+WoIYclSVbXpvJV/32Mn2Hn5UqxdzgNJ6l/7f6skoiPzTy0KLpZTUSzHzrvwgaa+sfk9ZEXDzEYVJ4nXofBaGAZ0FtIWsjWrJhfryft01MrJFSJh8EK2HsHPO7aZpMEbzk4kVq1eXOvazBdL1hIq/g7GDJol+4JPhAFY5XRHUk6ndV3OjwrXmWIOqXpiG5KMiBkhX3aj3QzTK0SaZMD4jWXrlZD6xC8dW/PZSN9lZeBhkiOYoEDOdoaUp+upXGFrI+rCecFdA0y6BlFAIU1Rwc82PHks93B1SKTn/JrBkoOkYiOL6z/LveztmYaUkduPH/GnwkPppbcpSm46ay+AedOwyc4+cwHHLlN5VVP0bmdhcL+31jZbb81mO/Tzo5zmtZSpEsl/Kir78M5J0cPUqanuWC16Kx+4Uc6c+nUa8HWbnCmp9flp6QshuS6IpJiVN/ZzcgDMRskJVflVZLXRVcsQA==","layer_level":1},{"id":"a06fee3c-1a05-4adc-b3b2-c1e37c51fb2b","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Startup Issues","description":"startup-issues","prompt":"Develop detailed content for startup issues encountered when initializing the trading system. Explain common failure points such as missing environment variables, misconfigured Docker services, API key validation errors, and port conflicts. Provide step-by-step diagnostics using status.sh and log outputs from enhanced_logger.py. Include solutions for database connection timeouts, exchange client initialization failures, and WebSocket handshake rejections. Reference real cases from LAUNCH_GUIDE.md and PRODUCTION_DEPLOYMENT.md, including remediation steps for improper preset loading or failed dependency injection during FastAPI startup. Document how to verify service health via /health endpoint and interpret engine state transitions during boot. Address race conditions in component initialization and proper sequencing of backend and frontend startup.","parent_id":"ac3f6191-01eb-4702-aa7e-344df40ee43e","order":0,"progress_status":"completed","dependent_files":"LAUNCH_GUIDE.md,status.sh,start.sh,breakout_bot/api/main.py,docker-compose.yml,PRODUCTION_DEPLOYMENT.md","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:12:59.811533+02:00","gmt_modified":"2025-09-24T23:42:42.246663+02:00","raw_data":"WikiEncrypted:/1EPo8Nk1qNdA8r354IG62Aq7hoSrz5jAVjB3NlZ1IC7FvackHS4behbfAnd7gkFvzz5cfKy140ImuzmvOtBHh2DuFJitl2WyAztIxYf1BbA63kpqoUwKnkG8N8ZjIgCdvPGu4MtHCXFc0poblck/9OTVQqkZc+lHVEHuOEC155SGTrrUPP/327dRPIadPvLGYuFAvCyywrGra66jIRfr+HJFRny7lcZ1XRQ51K6WQ+L58McFoKExglpDNARU5ANtFSwCO55NYRCHvQ9wrKsnIfOeKkddA3UcdiUGwP9lFluPY3W6h1cHAKV2GsYOgtXPPWdh7Wguj9liEOHd1lY+OlQpj9LFr2tJzMy5aBw3GI7Pm8X+WF6sK/NFvSTJ9Cn2Qb2FiH1wA/1cfttYegjpRVbmMqDBsH+Ewqqo1G+FEq9FislvD541UiOGbIJ/2iQLfFggz5lo5MMdSPY5X5Rko5MZUpr8vOiy2xPbyvhaHa+WTxL21Kah6IB1M20EbTiPQGdUq40zu35icP0vCVk69QCygJ5FGswJieHZXA9/MzmdS5TMM7lug/iIoLM9uHZ3V79wyeCwagP5buzygagAvQTwcK211SQ80iqeeu9JIvsI4qxqg4eWbMqR6vvcmIPVwWeeOddowKAmNkYJcZz9YMkxjuvVi1rTaM3ee7+WgwzQ6NP96SmizzLqa8rR/1V47rrWEMd1ZxLNWC9tFL1bum3V/TPxgj6JbKTBIqOSa5QAIKTOoCLud0j6K+mV6TGlLiIxaft3VjYzCKMIu/+H3bcQfl3Sq9xXC7sNr4Zs20UKnrB9g13257XIlLZZHwiO4nEDcfuQwqdO1TulZmSt62FvxbScAzDYGsjuXSU2zey6rMscfsxBpVRzOl+0/ISnLL87Q7/JgGLC2kz/orwvmPhKCfIW4LGPBUs9kgNbPoM58nKKB9bWRH1nEFj/Fn4koCpZv1B8rZGdV7BlODnk8EHOH1Pz5rC9/QfZhU/KRPBes31C2ZvcPe8W6cov/58G6HtQtRj3aNm2Cfw/oJPmc7l9fXuIwdTERCvYgzT2zbN7LIGFX5k55no4hwXRi3sqozVcl90ORjbaeVIvszaCwxUhWrPUpvyhJCJefpP99flStBB9eQ7zHdb4ygQLG67kWy0ZhoBBVuwVbBLFlDOOMLF/vmF9on+GXuJuApMN1xngcNDoflhHZx/T+gKFliXrd64IumR7DFxeFxYkugV43D9G4qTPsfn7pjKrxJYOUYK08RLg+lP7FRBWFzjxxi4RMIMJTJXmhNIOSUd6KrbZ1nhmkml5CMaAl9Qw2tB+E/v8seSyBlhZhTWdwnKYquMgF2uRtceWmtn+YnNL0JOQPPPa/7vS6HAqUujrIxmmnY461C9ypyYvHMIFl9ZloGA+UbAb01H585uJKa7dfBOgynDlkEms9dQRneNXFzXvYtBxcqMtf6m6+fdl3vYM5ZaVCTAWF7rM37YsikF7F9Z7ndgHWWeCVLsm7HVfSMuit+JfxsA+W1xPwqs14R12LeRCKCx4OHFdMcWd1NAtnJcqeCThbdd0QBwiZauE+NIWm4k5rc5bH/XnjlAgwWsPlII+6ud94IUI2QIovXDziU/NA==","layer_level":1},{"id":"97de2347-316b-40d5-b8a6-900cde606d94","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Custom Strategy Development","description":"custom-strategy-development","prompt":"Develop detailed content for custom strategy development, focusing on extending the signal generation system with new logic. Explain how to use analyze_trading_issues.py to identify weaknesses in existing strategies and simulate_breakout.py to model hypothetical price movements for validation. Document the process of creating new signal conditions by combining technical indicators from breakout_bot/indicators/technical.py and levels.py. Provide code examples showing how to register a new strategy class within signal_generator.py and integrate it into the scanning pipeline via market_scanner.py. Include guidance on backtesting new strategies using historical data and evaluating performance metrics. Address common pitfalls such as overfitting, lookahead bias, and execution latency. Describe how to validate strategy robustness under different market regimes and volatility conditions.","parent_id":"1048517e-b275-4438-9b98-251bdacf15de","order":0,"progress_status":"completed","dependent_files":"analyze_trading_issues.py,simulate_breakout.py,breakout_bot/signals/signal_generator.py,breakout_bot/scanner/market_scanner.py","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:13:31.761045+02:00","gmt_modified":"2025-09-24T23:42:28.649708+02:00","raw_data":"WikiEncrypted:VrTOMK0P24YINQ3w81YokYtAw/cAdQ3c2M8ZGqaENpazdu0gjXlUBJKEEfwA/xBKGRS3BeALQ0AVeEiQ57/1Q8tGfBe7gyfqWyUXjOzYdozzMZub7hRDj0zfn7RIGbznqQna0tjslaQGlgCiFGkZPfVMVJ6l5YIL068OGAVhcbr0stsVWiD2E+Tv1LXn+EBG24POsPoydrIO+w9zlucDRHdYp2A4/S4HcL6NYNcaT1WkDOuWEmeSe4Sqo3CaD8ilrsx+OXxFevZ//TWQKGRaejlpUxwb1UNEnYOsFMTX2oLteujpKcaL9DkJAkMdBO2e5EPembhjNk/X6d4Y688ckNSxIkTpVPVl14KzE5UpHH4HjlVFUNvpVNjsw1v5TUhSlnkFjox6GyS9lfxo77Jj5b/d3inGLac8MtdmG4P8Ep8+Afd6sD/p9wa3VVJGhjfEmOsJiWq3ujXrgf5xCBnPIfDqj7q9i4pCsBdNTKESTNS6wn8Lzx6O5AyZ2UjM4jaw6TrI2Qgtw7f2+HoAwvPCmhEmb9ssua3nVPpyjop1oYaYDekugoHTWuNFftKMUUZ9wQBGdlJC7f4Os4Y2oTZiBcdcLHgDzUkvCnQiLPfmOhYyoHP1LpjoPLZ8Bi67+WSOskRRMKK3Ri8Wm2mWTzI0MVnSSQY9+vq5IROBrJN3SJdvjAohA3KkBYF8IwUPnMliTpOLOFGCbivSPdiwkWQj3R+2hdGneIEkCJxga+BClAFUyAprPK3ULdnrZYZJdSa0187nV7nDKma0Hymfm5KWpe7BKdRK/Gkufnofpwk9cEicRM+NceVLQiBDCSTfD1qSSx88T2X5myKaZuEb9j9EoNreVkOteVPSxKnshWJQHhZHF+LaDGFmx2DZ85g3iyge5V/PzNjDnHnfDa8/12In5fUf2Qa8cHdpOQlQ99KioaVqypwBaKGFl3IFBYBgqYJjb/zwiWKjBgljCZh9U1G3P1vSrw4d9rd5FkczRVJr+nN5PKXK/h8H4xvchrIpa9mRCvLC5Hm0jFd9vxONeBYRLcLRIx4vaCMyOR0anjtnf0F/o6wDm90XqnKkxskrbbh1TTMKrb/905armcvxMrwYl/ujFCcm7TgshJspTYBTVUJux2IyCtvBOG5TJNhZDeJz/37LpkXrp1pPHsFgAN0FPZf3Id0h6rJX/SIEIlPcNaIOsWB34KYyASPIxkDTxJ1j9D//IX9D0cLoz4Lv3qWY2bh9bVLgmNwxTxPcka5a9OG6dn5hJHxlKo5mLE+IETtL/C9KtfybL5aAH6dWpNYmMvkqWfDmIlyKKyN6ToP1tfBCbDXfKEMz7nlKfMBpWJIn1k6zhaq1QUtm+ZkLfMZOZJQL85YNlPXuhIjOIwTymm7M353yAVdNcZ6Fe1tQQ+bWmGZDBhZtX3ZIX26ZIVf2ZDUKuiTJZ9H8yVHrg+JPLO9xhGdYsjYaAWbTCBeSEdlM+i5Xe/whHlk136IpsxzD64KHT//ggB1rml9mOJsauzPjyY6m5pA2eZOP9KIRW9nVWXyD3n02o40+ErKEFsF34Eq62Qj38q8JdCNEMu83dpUGFRS9d8cKHc9EZoKPSH+xp1C80kIRxA00AlU1qpIw4+J9DelzGBUJNlJy6CmMw9WOoUK8c71oB46sggZ0ndk6eLWl5higys72sAmGDqS+/G4ms3h9Hvp9Vgpwinon/i4jGAFcMwltfs+R3+1wRPND","layer_level":1},{"id":"a57ebd93-03cd-44c9-9980-a8427869e7b8","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Technology Stack","description":"technology-stack","prompt":"Create comprehensive content for this section focused on the technology stack underpinning the breakout_bot system. Detail the backend framework (FastAPI) and its role in providing RESTful APIs and WebSocket endpoints, emphasizing benefits like asynchronous processing and Pydantic integration for data validation. Cover frontend technologies: React for component-based UI development, TypeScript for type safety, Vite for fast builds, and supporting libraries like Recharts for visualization and zustand for state management. Document infrastructure tools: Docker for containerization, Docker Compose for multi-container orchestration, and Nginx for reverse proxying the frontend. Explain monitoring solutions: Prometheus for metric collection and Grafana for visualization, referencing their configuration files. Include testing frameworks (pytest, Jest) and development tools (ESLint, Prettier via config files). For each technology, explain its implementation rationale within this project—e.g., why FastAPI was chosen over Flask, or how TypeScript enhances API client reliability. Provide practical examples showing package usage from actual code snippets, such as dependency declarations in pyproject.toml or Dockerfile instructions. Integrate cross-cutting concerns like version compatibility between Python and npm packages, and performance implications of chosen tools. Address troubleshooting common setup issues related to environment mismatches or dependency conflicts.","parent_id":"","order":1,"progress_status":"completed","dependent_files":"requirements.txt,frontend/package.json,pyproject.toml,docker-compose.yml","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:10:50.191572+02:00","gmt_modified":"2025-09-24T23:15:18.697009+02:00","raw_data":"WikiEncrypted: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","layer_level":0},{"id":"94a961e5-7d47-410f-b2ab-283c35aea1ed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"State Machine Implementation","description":"state-machine-implementation","prompt":"Develop detailed content for the state machine that governs the trading engine’s operational workflow. Thoroughly explain the implementation in state_machine.py, including the enumeration of states (IDLE, SCANNING, SIGNAL_GENERATION, EXECUTION, PAUSED, STOPPED), transition logic, guard conditions, and associated actions. Illustrate how the StateMachine class integrates with the main Engine to enforce valid state progression and prevent illegal operations (e.g., scanning while stopped). Provide concrete code examples demonstrating event-triggered transitions such as on_scan_complete() triggering a move from SCANNING to SIGNAL_GENERATION. Document how external API commands and internal events are processed through the state machine. Explain error recovery mechanisms like automatic fallback to IDLE on critical failures. Include diagrams showing possible state transitions and describe how logging and monitoring hooks capture state changes for audit and debugging purposes.","parent_id":"ee934741-266d-4bd3-a076-2c6f6e54e5f1","order":1,"progress_status":"completed","dependent_files":"breakout_bot/core/state_machine.py,breakout_bot/core/engine.py","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:11:24.117823+02:00","gmt_modified":"2025-09-24T23:44:16.779848+02:00","raw_data":"WikiEncrypted:29DQGcj0Xkj5ar8OataJBO9V2b0igpnxmNpwvV/V/53rCBACaeMrv0zw1pktQB4rpabiJ8twkyu7Fxl/eVOqkAKvoJs4yJyp0aSsJBtMCg7EgIEfUzK1tGOQVWJFbpiGcdmJTSad/TyfA+LS8M0GGasxBK0/r/P/NAT4Na920x/mtTvvv4DFIvA6LXI3EI/cJMFP7DePJZAQ37GPSuKmitha2EmalfSTITaL7eNt3CKtKYpuHte6RxokCSeSRwm3GVDFmG3T9oJJSgA33LgIdgpClASXw+SVwpCu7N7MsPcMzEqV/NemkYG+m+jAQdos+Q85A4651zQCaLR7nSUHRv7LPZEVq8kAiADFDEJORDHhQNpga5832xLrca5I6XMm4ZWywWGPPHunao0oUQysAWkY708180yzf1u9Pr0e1hxZHoM58BR1apHD9kQvvigsbGjjz50QbiENHKLzFDxXxtkLS2qP6smZ6w8PJDJvUgnI+gSYNh54SniQ1bETqLolejE3K771OP1HlzZxHrRQVZGNDB/Oj6msFKqnn5novmmkOMj77D9ITrOUTGHCM/0MaUNhhuMKLSfu9rhsuKlnOkBOflBj6fXMOIfL55PoE8CKr8aMTTak8jYxHgFas7gUinDQWzZ/HACMrFjCZUoecCJR/gBMJF5xDWJTruVOUjewYS3yscYh51Urt1CoxrtieExkl4U/eEv5T1JcITGL0IQWlxLvhVkJu6Db+pZKwpBkPZx9Kt0z9/xDdC2hJ91ErVblWRApgkT6N/jEMrBspEcwUlKin/IE51hZ9QkF+9eZ87eoGgxHsK6uaf+LwdIYRbTdlch6ZrQntd67dTpMyjbkwfUyrNxUlqDYIx5Bz67bfknUgKvTydo6hV47VnqUBiAbp0x5pf6FpKT5+jkuelI62NNv5tTDaUQurQ1iWQNTgcmXUNG182jiIRlFRBrqx2BVYFelChjZp9SwxJlZ23X3eT0rnVLVbl1fGhCgWiYvSNNBltNNFupsrX1ImKU3Y4KfielfXoY/g6SvFA0eXXkBhzbBR77+eolawNdbU6ikReBhSerILC6RP3KBkvAqpiMvX0ydyFvtCg2r7F9zgnZuI9dDt53hJ/OQbW9FMLlzsF+5/9+gKZoKAWCMyKITgekO8YyrRtD2pwJzDkz8HlwEptg2cBEYUjzTj0FTATOt/Dkk/Mmp/jqpk1lY9psxAaBVMY/LptpC0fUADhKGV4/hIkl0KjwUQ0pFT3EExTLe98otjSW5b7c3LCQLsnctDu3QBcrz1WRNClCN7617incZ2FmqXFi83DkYBSdLJq1kzHZO9kY661+wXrFFNz4B80ArazANxIVMFI/wv1g4sSoLvHOdGr3Cr9IQilCPavFclst6KvxNd7Q46uDenLd9jvjECiYxEPWSXXh0CM0WM2HVR6glTP4k7arYszFvsdtnCef4tgpqGHzQedrsLLSf0RRpAV4jdf2UhXM8Y15BdfY0BpMoB0ZP4usG4QIKUkF68lzppvSapZDJilJjNN6aP2dhzMLtg2T38qA6onPt+Npyko/fjnbscbtBLG3Ph85KBZmTmfHm0A7XZjtbcoarP0buxwduXXD0kX5Pna8/Ke/X6lNn71AmgRboXUn2zfd/i5xVNybCJzrrfw/1SQlCiIL8Yyc4BJGpC/wx5mDl4ccx8bbUO5okM+sY43iUpm0oBH30ZFTMSRTHg79HpVwHIcuj0tf8MOUUc+aGo0976Q==","layer_level":1},{"id":"d9dec941-9b63-4b3f-9bda-0c89bbd7cf64","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Trading Operations API","description":"trading-api","prompt":"Develop detailed API documentation for trading operations in trading.py. Cover endpoints for retrieving active positions (/trading/positions), executing manual trades (/trading/manual-trade), closing positions (/trading/close-position), and querying order history. Document request payloads including symbol, side, amount, price, and type parameters, along with response schemas containing Position and Order models. Explain integration with execution.manager for order routing and position_manager for state updates. Include examples of market vs limit orders and handling partial fills. Detail error responses for insufficient balance, invalid symbols, or exchange connectivity issues. Describe real-time synchronization with the frontend via WebSocket notifications on trade execution. Address risk management constraints enforced during manual trading and audit logging in storage.database. Provide client usage patterns and performance considerations for high-frequency interactions.","parent_id":"b7062f6d-b447-43b6-b46d-938166fcb0bc","order":1,"progress_status":"completed","dependent_files":"breakout_bot/api/routers/trading.py,breakout_bot/execution/manager.py,breakout_bot/position/position_manager.py","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:11:42.393856+02:00","gmt_modified":"2025-09-24T23:47:15.319389+02:00","raw_data":"WikiEncrypted:YPFyHZBKLoeqhH/MwKsHwXmMYO8rrTPYnm+csigYAHns5atOd/oZj3FTvjeO0+Zm6vtxMVaMEDsgULf+8dKMJvKvEH8A3H74uJTABQBV6vDWSWK+juCSc2jWKS31LZpQvsE10ijEPY7yRjCBuySQpar0Ri5pTW3+tOFAtgeSLccUXym/JIymDEjp9yTN+t+TTYgvBb/zOMTpJasKdU4EcKPMmTvs+JFIP+F1RSiAozfieHnEDo29DZ/1SEmB+lnqgAmaSNgXIg30Q8nAm0U04ztXeGkYqWMZH3MUvnSL8JGton8sBjCnAftDOUoO4xt105yPqBSikNg1wlXOKbJwP6YUn5cU3lKJqXLIfMStbkGHPY1HKbJHx5P5iUSj16YoX6GyPNRS5W5e3coM0457McXqzC//MXIhBX4ZFwHCnJPnMqZT9c7jGtuQxpJxIDA1ZCpUgNU66bhUvWkeA3Q1gc3xHi5ZSF9bq0ePwUbB2wsnoWgbz8ylruKtn2CigKcTrY+ExiWSYdslBV/jF7ZYr1I4Oj9tDnj8lWrMI5AhPrXngdDvRzrTE+rify6hDxv353QFfaeZFwv5H/Bba2Va/r1rYATwE+h0JIZsrP8jLLlDvvLNmP8ZbY32FXne1WhqKhp1YokcfMtCXhgtVXqchwfA302oHdKvZpSHvj/RSWKUPi2OenC9EdbTTx7+i28FUIhtMRCMiVZRYlBGyx5VD5XDJFvWlw4ciWpfsY3Tt5S+9UFb4pyiobQlCA1yj933eBelwI4vuwxxShycne1fBsmapxIdBsYSFeYIk3hm1eA6bN11shPlIJJ6BuIs+tC9KYqgnR0HTxMuLbzbohCsZ+DiSTWZKuPtaLEztP7lR8pkFGRd2BGZP5YQK3MlpO0hDakeBYn2xDfhWoHA7U5TJxu8lhojijcr+LICxZMhFGXRQJWa08c24KoPNCwHG8eF1e2AkQq4ENbRI5AVZ0EbA79o4/ApcG+AjwiFp9VOw8JkzCXKjvaWNl6msqWt0g4SEhbeOdxhpFyuyDt75YiLIKI91RAhfCMolqkTAg/sjjODGbdk1OQg80n0Hp3kyKsp8BTQKpzZAIwa2pvfJBk4jWYLhXzNwFh80gCLxs5fEw3mHTOwCsXNdJhtJu18SIh5eRW/ydSIY+z92q1HGdHRnkdK/Cy49TLz+b6uKN4rD8cc5dTAookXOCk95ifNe7t7n9l8A7DaNSGcTENjxtigtT1AI6PwfmwO6cfrD4kw5xE3IcelzkZi3R5XApwim5XvkLxMYSFKgf5y0yAKWvFMogN2mqBZ6vVbrvu7WXcBRVMf2pZOJXYWfN5mnXCR+uz/BdgTxbWRj/+v8guDTTHbZUujuMDPmQJ8fv4SarLj2eYYtCvtGXGza9gPYF1gMDW9eAuSuiAUoE/jGfsbsFvl0YriH/X7ZmHk2Nzt8XGzbNwLm4pfcpNAq1g+9yjt3CG5kfex1m6e8g2AfhGKpeAhRDzH5AZQhPfwaoltIHAWS3VJc0W6cUwUlD7ILYCCpcO5IqN2vMebcrZfgQfaHTpmXVboh0MIEviLu8nYdiQ2Bh/wClJpnUdIDyTpHop2GaMtU3Pi83EqFVi4uOhCS/ly8SQQsMoE2OgqRIR0U0qpqwpX0H964/zJSfD1eje32knsDB4IsjvDgjUp+D703U5sXAjfYP8k87U5FCn48z0KgLltmTDVzXoeckt/VGg7oKpS54BX2VoyqD2DAluMC3RaWlLmB2+Qw4eHe5DI7pCN0oy3Vlz86iqhkOa+KAc05dIk","layer_level":1},{"id":"f7c9ec69-a8f5-4200-8eb7-15ee8661cb08","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Risk Settings","description":"risk-settings","prompt":"Develop detailed content for this sub-component focused on risk configuration within trading presets. Thoroughly explain the RiskConfig model defined in settings.py, detailing each parameter: risk_per_trade (percentage of capital at risk), max_concurrent_positions (limit on open trades), daily_risk_limit (maximum drawdown allowed per day), kill_switch_loss_limit (circuit breaker threshold), and correlation_limit (BTC correlation cap). Illustrate how these values are enforced by the risk_manager during signal validation and position sizing. Provide concrete examples from breakout_v1.json showing conservative settings versus aggressive configurations in scalping_high_freq.json. Document field validation rules such as percentage ranges (0-1) and position limits (1-10), including error messages raised on invalid inputs. Explain the purpose of max_consecutive_losses as a behavioral kill switch and how it interacts with other risk controls. Show how these settings cascade through the system—how changing risk_per_trade affects position size calculations in risk_manager.py. Include guidance on calibrating risk parameters based on account size and volatility conditions. Address common pitfalls like overly restrictive limits causing missed opportunities or insufficient kill switches leading to large drawdowns.","parent_id":"84bea7c7-9ac7-4353-99d3-b94d4baab7c7","order":1,"progress_status":"completed","dependent_files":"breakout_bot/config/settings.py,breakout_bot/config/presets/breakout_v1.json,breakout_bot/risk/risk_manager.py","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:11:50.457587+02:00","gmt_modified":"2025-09-24T23:46:23.930243+02:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"eca7df92-f801-4d62-a6ab-ccf71dcc5c74","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Engine Control Interface","description":"engine-control-interface","prompt":"Develop detailed documentation for the Engine Control page that enables users to manage the trading engine lifecycle. Describe the core functionality: start, stop, pause, and resume operations through interactive buttons tied to API endpoints. Explain the StateMachineVisualizer component that renders the current state (e.g., SCANNING, SIGNAL_GENERATION, EXECUTION) in a graphical flow format, enhancing situational awareness. Document how state transitions are synchronized between the backend engine and frontend via WebSocket events and polling mechanisms. Include usage patterns for safe engine operation, such as confirming shutdown during active trades. Highlight visual feedback elements like loading spinners and status badges that reflect asynchronous actions. Provide code examples showing hook usage (useEngine) for state synchronization and error handling during command failures. Address edge cases like network disconnections and recovery procedures.","parent_id":"a8672b15-afbe-4fe5-ab77-829c873c754e","order":1,"progress_status":"completed","dependent_files":"frontend/src/pages/EngineControl.tsx,frontend/src/components/ui/StateMachineVisualizer.tsx,frontend/src/components/ui/Button.tsx,frontend/src/hooks/useEngine.ts","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:12:15.55858+02:00","gmt_modified":"2025-09-24T23:47:25.359991+02:00","raw_data":"WikiEncrypted:4J/+F+bhFfQhKH4ULf7nJ0ygRn+JCMZPlgOG0FlrHlUzRGveV3Mo+4P/xunbJrOcT9mqCRG92CPwnnax9YR1Dq4S5/e6r0eZYh6RsUErGm5rbiD4sVjZvce8WQL/JDFNClpaIA1GP5wWmv2hjtFXLjMNE+iAcKQ1Ykc41yXBNUKx9MtV9Kl1Bipu0TLNwy74ki21dQdb/Mi0JYa03frTG8gXd4I9uNU8ThYz86h84On5B1eLWlKDfa6V9Vyi8vhA5tg7LS0HiBiGjihnNixS3+pzKQe7LjxZtlGGrFVgpgb9iTNgbW3tEQsG4UJNEGIwsq8KFG1b5r49OlMwo20REXWh9yvFo5Ir3vU2jgWqDA0qifeWuDRNlCeu05lQPQp+JCeb0Fyuw2eVhjE02ai5OGnlIedPk60NIKHW2vuKpBMaf1g5hX8jiUwmI/Ov2dhW/FzhtwtnJXiQ0lQSsxLJG1nALrGp04xjBN72mftFgoyjGkNTN1E4ZIVo3slBgXN74vjV1iQ2+BahRu33Iv2QDfh35VuvoDqPIU/l8gnMjQAQlzZamBJogfLpzFdLiYi/mrjmz0zURNUX84Y64mflYH9gRpwgOF6dGVg7aAzgwIbx+tPRD8mXAOkE5viRekCj5nAhzZ6i81nbPb+YvzFAkDBPKUfMl46XnC4KvlnH/ML77KpXVPDkqAylmr1IzrpY4e2rNaPnFeVXIHdGqCiJct2IWgI5OffWzevzmMzEgTrtR45MPXtRbqyi8VJ8AULegv4R5VFdtqp/1+03YVVhER4b10gZMUFl2gaDnvNmQQ3wOCleiEvvHFLmiXVKV32UJcOzAw5xNLoULa7bke3euGcpy0qaka7T7sGmAZ4HqCGXJT+wk4/UN3KiHz0BQ57eyp61ZG5uRc7XQ5oAHUvgkH+5vwK3O/NMOJ78R7sEgHK0NYLIQIK9vDuDu2akPoQggq4V1OB3ow/VT9nD32EG8Qiss9y9byRCo5Y96wb9cJ3V0hFLsWSxWX6a6IUujmszuENi8WXDS8VwxIy6t8Hv1q9QTD2b1/9cylmHuOvWKatljvD2zhpktG7u3tPGG90BYSblXSBza326Re3VIKWOx0cKYyXhm/VLam0HpbDxigOu3KFEjJwRjWnf/OuDbBY9uP3poNAY3BPEZE3y8exm9XkFQRj+lu59mYdFVIuoMbaBx1xe3RRrqL8mRDBRhCLdeMdh0QzAr+u0QkzeBgp3hRQ2dSHsexrQ7RGkgjEdnLwMEIJINLd83fnp9f+rIaGNfGJS2UYinZzlB0AJiu2U+bxtxxjOb56X+fTpYcn89Jfe+vy6TNPRGcXYB+PY5PF/vkEBWFE+BM+f/ChDpK0iVV44KOIOlI0giP9Mq7vdhKSHlxuXZ+EHsiH4uixvmGRu3zhPai/0JwNtlzt3ZsegvDPWf9EXAB2bF5DdinQKbsLC2EJdgLh2zWbtpZEfNi/dx7nUXbLBsiPVm1i/qmX533DOKDMzUozOv4RsgqEFvicHNVrMZ5oXSp+5hhthcz2fp1026PR4+B9EpljcEsCwFM8WssjJuPt+iU7J74Fgz3JtMivt6ieHnytk9Ib/cdEKBoR21U7i4QTlALIPt/aenmCgJcWmWebr6Sc/43aM2UakaP+UHUpiZbEHAqKnUvEdqqrOhp3QtadTyRhzLVQ0QbVSX3Ceo/g3mCiTqTSdiEECOCv+S8VCxbyGUcBbgalfwAOHoyC82TyV0/9ZluijmSsaMnAZ+nE8EGsrX0km/zaQ7rSuAtGERer/79hTqo+rE7IJvcPuQBLBTQJriY0PoggMUjC6/jWa7YdIWtX8eH5mjAnXTO+yh+WRMyRbIdOv","layer_level":1},{"id":"17fc9c4a-fbde-4324-9920-3653b099e5cd","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Diagnostic Reporting","description":"diagnostic-reporting","prompt":"Develop detailed content for the diagnostic reporting system responsible for generating structured health summaries and analysis reports. Explain how reporting.py compiles runtime diagnostics into human-readable Markdown reports stored in reports/diag_summary.md. Detail the runner.py execution flow that orchestrates diagnostic runs, including pre-flight checks and post-execution analysis. Document the report structure: system metadata, resource utilization trends, engine state history, error frequency, and signal quality metrics. Provide examples of actionable insights derived from these reports, such as identifying memory leaks or signal decay over time. Describe how diagnostic reports correlate with log files using timestamps and transaction IDs. Include guidance on automating report generation via CLI commands and integrating reports into CI/CD pipelines. Explain how developers can extend reporting.py to include custom validation rules or strategy-specific KPIs.","parent_id":"f199b129-963f-4f69-8f08-1183ec20082a","order":1,"progress_status":"completed","dependent_files":"breakout_bot/diagnostics/reporting.py,reports/diag_summary.md,breakout_bot/diagnostics/runner.py","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:12:19.278404+02:00","gmt_modified":"2025-09-24T23:49:22.849902+02:00","raw_data":"WikiEncrypted:ea+cdkqejgoWer3AbIc2Lr2dD23R4/ilbfEAyISkHL0y2x8rzJ7CoABLA8KWKFJ/ajf0SPbw2HKjHUuHhAGz/sRKn+huNCRRBpLIztGhM2n1Klqg1EBGrV2Qr6FfdRaQ9wd4zHMI7/TfwpdbpPvqz8vxV8nXOrxYBX/xH0UIxdAB5XLnKenMW6jMDz8dnbFTYaK3ABuyjwekpQUXjIGpvPA8Wdbm1+DlRF5dz/vDKK9XazXjt3CwGpG+AlDcNiah0CvmSmfdqcjPvEUByV7YHLEeaUTnyq5Ng0Qf3Um9VHYzRuydV918LSX4FRJ5LZ+YGA5axBXmursNjyl/OvF/gWkeiIhA/By0tl1uavU2r5JKGm7HPr/s73h7L7XqxGNlAtC8L3/nBP1/IH1/XvY9omeyttJ9mKYAODfDTs6ttTn2SuxJ7AVN6Fkwidk/wQQM2oqlgV6E+pFo5kU+JSRBKHLFdFwDktB6BQ7xRQ6Mi1GUtafs/v1S3RRgUstIB6gAgpOLV6cW1/tswWP/0cSAZnM4OuA+njul1rWjblDBmLMip+ztMd9Gp+h8sCNPbyYeYF703RmVfXNlRrXRYHtZuqaeLf2djbJW7wRHs3zpEQUBsTD3YimfE5+UnH8D9YybP3OGFgAro7ppShwYsVk0olX3vMpST9qypPG7iE6A1M+jztDWQFkT5DHjHI4Dasl9Jf7+ErxWkxmTwJ2LP5m6Xot/lKaeaWhOtK7zFNNT4kFnra5SKGjOdW9gpqaTRfoiglJTcv6gw3Uj3wi+xwWw6gEHdFkuAEYE8qL/5TImWfd2NK1bHhRaZYZIHWI5Ocm0GOsn0Y537Wi87Di1P/MTILCsEbfF/hUT7rTcms4INdbuP8JqHTWJ0bUnQEOVrg5ehbnzA/4Qn5rvBviuXyZkyWwEByZt+4NbC52IbgdJhLt0a2UsaHI01W97+Sde7arBetPR4q/5v5yN/zLWtp7lklIEG1xwYVF2P41oFNMOoXr3tmnGm5UvcCD8tfy+ESmYdPRpBwk0f6RCer1+JdD+RAXapwew7pS37EoPVXhEN55Rp+WoiIsg8Dfxe0WsuajStDJQDpRYbAvFqgurpD0oQ8viZcBu6X9JUqUSsUczYD2/PPzF49h3bFD7ZPxxHWjkN2l4qYfG6aRBa/BJzN3T3nr7fdG6iEheO1aBzFBnfr5ZQRTNNHYm3RYdmrElB+8vZshklZA84a2Ydeunz+5a75aaJ9b6kqe+ntcPjJnp3H6cflftDMSCWqPijx//8iNz0E1oFknF3NL6AdpiWEWMYGO/fAk6I8fWjX6EZvf7kS2Bo6d3xXRPdIeL8farruqE5aFyyXDFhwvbLZjilokDOn4J46GN0aGXRcRaNlbJGV8V2YUmF9oSRo72OSjEoJSHIgqcu/C0Ga2bk6N3jcjC1MEZttBjWMC3jCYAOCKnoUnuSY+qpin25mpwS4/oTWTn5jxMllSHXPzmyy4WL8zjb4byY9BseE1xxxhNYJ2t/8ZRto5b9LcagZcO1bkGFyUTqENtNqMGznnT/BG/0K8fKMqlWLhfsiBGcxcl2L/v5CSvGJSAlexKPtzenJeP8hjBvixma8v/r16WEVc35HsE6kpFnq0WkVqz9P+SMqivWjxZFp4yfyzPSBZoAWWLhQtVimnQgb4a8lKTnDOVl2RkYbhdqvg5rwsWNG8U5hBHN+IKVyA+q+n+JY1a3nhRzzi+bwDf1c5iJf2XsANHLtjHDuyEKXNXAIjcosaF35SLkIM=","layer_level":1},{"id":"1f523983-2a69-4104-8228-b2e9dbc17a46","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Integration Testing","description":"integration-testing","prompt":"Develop detailed content for the integration testing framework that validates coordinated behavior between system components. Explain how test_integration.py verifies the workflow from market scanning through signal generation to risk assessment and execution orchestration. Detail test_full_system.py's end-to-end validation of API endpoints, engine lifecycle, scanner functionality, trading simulation, metrics collection, and WebSocket connectivity. Illustrate how these tests validate the interaction between FastAPI routers, the core engine, and external services like exchange clients. Include examples demonstrating proper sequencing of component initialization, state propagation, and error cascading. Document the use of real API calls to localhost endpoints during testing and how system state is monitored across multiple subsystems. Address challenges in synchronizing asynchronous operations and maintaining test isolation. Cover the comprehensive test report generation that includes success rates, performance metrics, and failure diagnostics. Provide guidelines for extending integration tests when adding new features or modifying existing workflows.","parent_id":"7f23d147-00d2-4cd9-a0d4-ccf720739443","order":1,"progress_status":"completed","dependent_files":"breakout_bot/tests/test_integration.py,test_full_system.py,breakout_bot/api/main.py,breakout_bot/core/engine.py","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:12:31.952181+02:00","gmt_modified":"2025-09-24T23:50:29.366021+02:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"3e9e3a4c-9b62-4233-a712-0b54c3754867","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Service Orchestration","description":"orchestration","prompt":"Develop detailed content for the service orchestration framework defined in docker-compose.yml. Explain the composition of services including backend API, frontend UI, database (if applicable), monitoring stack (Prometheus/Grafana), and any message brokers. Document network configuration, custom bridges, and inter-service communication patterns. Detail volume mounts for persistent storage of logs, configuration files, and reports. Specify resource limits (CPU, memory) and deployment constraints. Describe dependency ordering using depends_on and startup synchronization mechanisms. Include environment variable propagation, secret management via external files or vaults, and port exposure strategies. Provide use cases for different profiles (development, staging, production) and scaling instructions for high-load scenarios. Offer debugging techniques for container connectivity issues and log aggregation methods.","parent_id":"981b35ea-437c-4941-9f28-6f37f80aadb5","order":1,"progress_status":"completed","dependent_files":"docker-compose.yml","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:12:50.821681+02:00","gmt_modified":"2025-09-24T23:50:54.938678+02:00","raw_data":"WikiEncrypted:tk8xJRJKlYeyp05x9xxg/zMnxS09te4OH5O5QaL9CMETTz61rkVuGilbkzuCj8gWmkB8fl0cIkOTEUrCllQZ7UqoSTZN+rLhAKhH2+8XCONCWqCrw6lDqdJFYiZ+93w15hMZQk4r1+eDJ/LYrmXb2CfL3yJxzp+ylWlM6xGPkSJn5qzx3Pcgcu5UiBP+GIfVv8yeg4D1+q7emOI6zZMKphr7CuxYl8uufVEzN/j8gIDt4vGbGS1iKl4z6WXMrVpaea1A5wd71OEaadRqfGc0KjYbPE4hF3Eq6+KhVt3J7MwCUlA1PIM9tMmn9IRVOxRpZ0uwCmly55JcRelqVQp7i0u/crCJVHLk49JwqV5QwypbU7MWP1DUBo0t28H6w/OoGOgWEMonG8A/6Pevv4uLRgmQzFakW6ENcMOwK5YkZHpm0Obf6CIBosvip2LCA8IQzbNqk/8PPwZobsoMlmCoAA0oIjb9nVxKwC6sRhy8EAW2fUHInM0nyGYWs2L5wWEF5mX3bShaZA0JLA6y0Q8+s+KqfXr8PU5ZxZvb3YxwitmxZau2u+5iMqyrVyiL+lQTrXSrSQSjAg+aI6wHD8IimJY7uyaQQcHtVmqQB5gkAO0HVKZ2nwzrIw9yYDs1bg4vQeX1X99L65rOItDtZi/Ajhm7Mba3fkuKylQO0aYGu4XGae8x+AWiKK9yY64X/KltpP/X4AgBMnM7bLRDNc0X19EzmxCkNAesOe1XGQXmYou8xRe++ETEHeK0TySmpG9SHZhord2zRqikrj/6/Ub1/gWn9CEJE5NntpdfPMIYxOlldLXRPZ9DEDRWvE8Ps24kag/qzkeL9uqna4cgp64Ff3dBEG+NuobLJUcJ6aEMHiGmoJoeqPSr1AOzBKfjZBMdSzkobFinQgGYlIYWU7B+gMgPSKjX8M6/srSBgYFq3KmrhGiLPYuQEDQZXZ7FlnmCazFsYEG2V6Dgr7pm0TLm2fnAXEcCfRWml4+J7xE3OEzHrawoDUl0bhDFZLph3pVF1mph1DR/FdLg0s6X+ONtwBUzRlOL8wiRH/VH2oyrnvIC/0djLMkIcHYPge5HJC1K+DwMYmQ2ELduDZVN98AoluNzarGkkSfK/Sq7Cb1iIrLfbvQ2/ldGPOOJyXBXQj8rI6ObtMf/fc7uIMgEqZhjZFz18RVpuNsehuq8XRip0jO53xj2YccYubUZ+L/qZoP14RZ+wbgNLjroVdBxJynfwcabOZ5B5VzbQcPTmJ22Vt/b5qKpT5Ayi64s/VSWFAP+/SIIGXr6XK6ZzENOySLQ1B8sy8HNlc6yxBrIGZ9nOPCP514OTGtn6eaAmmMqFQzFV+B5AM6LzLZUbYhOzXLFWyeuVqKHa/wKxHQpFNk/1zspNsuM5qOBLrBZffCWPb6RMLsydzkR7SXs+/5haukOE0E2OKT+/tJKBKg9FRAMYLxspQ+m6AE78vs14WCEh3TYOdjAuCzCZ+fUFjJYVnN0oTeGPipMw2eaNYpYN3RIl0BPHaMESbGdHX0QHa/CMFmT3FAt7snrv3igpT3jKrC1Pj5bvv317OrGFMEbsgMoEHs=","layer_level":1},{"id":"3e875483-46da-4fdf-9957-5251103619c5","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Trading Anomalies","description":"trading-anomalies","prompt":"Develop detailed content for trading anomalies such as missed entries, incorrect position sizing, premature exits, and duplicate orders. Analyze root causes using FINAL_TRADE_TESTING_REPORT.md and TRADING_LOGIC_ANALYSIS_REPORT.md, focusing on signal-state mismatches, timing windows in breakout detection, and race conditions between scanner and execution layers. Explain how to use debug_signal_generation.py to trace momentum and retest strategy triggers, and debug_kill_switch.py to audit circuit breaker activations. Cover edge cases like partial fills, slippage handling, and order rejection due to insufficient balance or rate limiting. Include debugging workflows for validating trade parameters against selected presets and verifying risk manager approvals.","parent_id":"ac3f6191-01eb-4702-aa7e-344df40ee43e","order":1,"progress_status":"completed","dependent_files":"FINAL_TRADE_TESTING_REPORT.md,TRADING_LOGIC_ANALYSIS_REPORT.md,debug_signal_generation.py,debug_kill_switch.py,test_full_trade_cycle.py,breakout_bot/core/trading_orchestrator.py","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:12:59.813115+02:00","gmt_modified":"2025-09-24T23:54:34.229839+02:00","raw_data":"WikiEncrypted:YPFyHZBKLoeqhH/MwKsHwRHX2lrbNhQE6xpZqt10FHuzJ1nNHJkcack8U7SAQYwg5kTXU+gTXMpw2sCWlCg/wCHhKS3/TKCRthVKXaR3TL+HW39OIeuE+9I1gM7j0XJ7AMYSHUeEc/zTJ98YpYFuZsAey3FufXMrdCDZgWbj+fd2+o5XmtAMy4GmWe7ZHtnxubkqIeBlKMDcD+yJ7yCy1sgTTsAL4v3sUEi0NBOf/Os8xn3le8D5ESa+3u7+wf3CYutv6DKhz3vTXrCx0mE9d5w6y5uhfgB3t7/pNGHH1NZ2kKuvzdq18P67oN3Ci3keCaNAW8464r1/ww1zVlJ4DnYgmB1GATFjZ4sHzkiX+m7chrHvW302DDYIE/EeQVH2XdFh41qAXS98iJ9rrI+2rQRs20vR3Rzix73DvLFqZd7aDrGO3or2faSQnwfBY3OIVjkz0NjANbYLfr1nRnkpN/nlT1qOhdYNjM8AQggIs2NElwEmDPeCf0pU3N5tEGmD3kjpjSMljw2xVXhwohFSAjuxmR+SzfVrVl2mdtwSrI8+tX0fueKx55WvG1Pu81BUaWnp4xSLMutUWfdqseT6FpRE6w/GGxSHPutYdLd0w97CtqfjKYcc4SPAdQD1fWV9Ec6ccq7AUOZWQaTcvDmpxtBJPg19A/zNrT84eDNkVFs/hyNFQejoI+0YzWM4GyRDMtGq6PygfNbMhNMIdBeQez2Ny+qFpxy7kBpw7Z0Rwld1xjNm4GSwcNrjfm2SMMwmDHbOwc+mBPnuZZ78PpZApeNZOL3/F+8Tp6/I4vmNBUw8MDX2wBDZmZ3wTeFWykzlB7j9Ps8Mi9cprHBh2dmWf2ssE/y4OktC8uQwEZ5IvvHcp8GXGjcwW0kMMSwYVKFXoJrIorFjzAlrpYYWWo7Bbajcuq24fyx4ThnoY6AbuD7WbjS+3QWjqjihomXVNg54Zu8p4A1CJg7/y50nyRkgg5sqnH0WdySdz8W/Ye2W0dL0FUGO6jhKUEZnsLC2f7SoCRVsnTfBfWFS/LEcIy1kkZbD8D0iF+LLmJnoTxHyLYhCvaxuCwN0JeQOwqIrrQyB8QxZBdydGUB2UDrim/e42V+KU0+IwPbUDG0MQnaNRshfm51Y9bkpg19ePRd5nk9w5jiy8wrbNGGbzmbRE3RWaA9qHfocRX42PtQsugeLP5d1MYgyADHct2qFRpnJJXz9w3chXPu6uyVBuIMq9ABvC0DiEjwCwEWXZI2w3P55MrhP2k9KdWKbDTV7XyleIWyxYm1zWzQIble2sUDfOvjoeA4Aviso22ONADYSxAvsbz1lcYoIaHy3eojQjEI/c2iaj0sgqRQLbCE8OyXsz66lWe4odvzYBQfxqhg+bLPCFu87L56R7a84PI0ZLQ5dYKNJR4m3LMbsQBec+hageE1il9n1IkqxmEDQYzobSZgQJqE4BWxu1CUWGd5CpAxoN5nBey3uWp5zHVClJoa3XZ0ggG3bqGoolGIMRe105fF+Q0Dt24yEMaPJlSTj+pooFHRdo6t1IBN/YvpTjg5QOyts2fXRTMjhgqTbFAiSCuIhalu2e+OX3/xMSnXWNoCdamjr","layer_level":1},{"id":"254e30b9-f107-4801-9428-13c3fd4ce95b","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Strategy Performance Comparison","description":"strategy-performance-comparison","prompt":"Develop detailed content for comparing trading strategy performance across different configuration presets. Explain how compare_presets.py enables quantitative evaluation of risk-adjusted returns, win rates, drawdowns, and expectancy across multiple strategy variants. Document how to interpret output from FINAL_TRADE_TESTING_REPORT.md and TRADING_ANALYSIS_REPORT.md to make informed decisions about strategy selection. Provide examples of A/B testing workflows using JSON preset files (e.g., breakout_v1.json vs. swing_trading_pro.json) and analyzing differences in scanner behavior, signal frequency, and position outcomes. Include best practices for isolating variables when testing (e.g., changing only risk parameters while keeping entry logic constant). Show how to visualize performance deltas using built-in reporting tools and export results for external analysis.","parent_id":"1048517e-b275-4438-9b98-251bdacf15de","order":1,"progress_status":"completed","dependent_files":"compare_presets.py,breakout_bot/config/presets/*.json,FINAL_TRADE_TESTING_REPORT.md,TRADING_ANALYSIS_REPORT.md","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:13:31.763487+02:00","gmt_modified":"2025-09-24T23:54:07.942106+02:00","raw_data":"WikiEncrypted:vncIuVLs5gKBPQDvkV46pGPCPKelACy/fzjOrYi8SSP+gEPGVWTbkRqYeGP9wzlS1rQfaLJ3gav8cDcZ86G9RXL+rp5qZX/IQBiVpT51hnHm6S3HgRCunacCJ4CqdxhiCrkXyYHdadno7JiX5S7ksq80Gkj6hzV+Y2AL4p5EWQSFeL4J9MpbN6Qiuv2RrnlfiHhLY3MD7eW8UmrtlRMcslCKKPCxTj/l0zMEehPM5VoB+cobByJOnLaFcGxGMPUNkMpLRKpSH++8ylLcl6lrIcSdrhZTbjUcq9/DwaAyuiPDU0n4lIG+lMBcAhqh6yVFTPhXdAfrBnHVgYOJ+baYiHpHpjjeVdHUTwqeFMgfy7ftw6yjrXDCtjdr3TpgiSfJrHIrLFOshwObZNGeNtcBGXLyMcvljNNEhZWXUR35b/jsJMnZ0MAKZri4XlZpGQJKiVz86M/UKNQSQbKrEksc358ZJK8f7tn5rzQfdBAfaVY13PdUXzbjDcGYl7aceBY6UjVweFMlxzktydIL5f8UcxI3utNTI+Q3NYsh6+F0pPBmIwo323cTrLHWqviYcemoYYqnZhWeGzBPVRBqDoUeAdOVa/xHSzhW3ZYt471kKxDZzPP0o4IYdVAZlQyjNw00mUIHqyUePTudiz8EQZMzRW+uNneF2Ryn7yCJ/i7T8BOYruu2Zz7KWWeZWFNdvtMB/4yALTpAachM6mPsXCOFj7kUTOaLdU/d9iiIs2CbUdTO9l4Lw57Hn8SuaqApUo9ultXVL+ODG65GGTodErS9CctUstPxIaXwVSbA+nlnbfrLcStLhjochR6SBbh7njhEMC8cRKSl2pTTigWVaVnL+9XLtuUZqZU+P+d3lNYsN7o0mk8ELf6wkbkOTEvbyYQ8ShabXbwDsOkZof3ycz0PtJt4Ynz/DN0bXUwSNizhD22FcVrnITszW/54v6gmCHYPPH4Q7FpYr0yPcS4+l7IfxyS19u4tJuTTowCiR7Ef04tvM0eWmKUkHI357PMgIAVYmmLR7HBtaZgwfIKdWsnPipPh863zSW6yLt1981ifVq/iAcjiXxN7GsV2SdaYayTSzfUEJEMVT/Cq0/HSHYmxwwjZ3c35FvNSTcX+H4z8Jg5q8l5G94ljnu+ffDuzQVBiIuUAyRTzJTAqtOYbIBcKLe7H5sksl/HipPnGjUP+sr1+1KWzS53MOtNdMbIxha++cehccClyGaKixA7TgwUEdhXpJ6RRQkP7JPVIOYhsYnxeMLqev7g1BNy/dMNv27kixPkia7Kb8FAlrSZCGs2Rp5Z5qYppKoFjQEWPtmwuqz9ku5QjtPWRZLbQlA55+6/8BC0W/+l7Sxah17HlOx00CMHUv2ZN5jAkbvlB0mTakt5AHX9KfPJa0rmT+aUslAq5bv03NdSfhPydLRTmrs55b7jD10bM0v++6f6FLzFSFKo+uUKN01Yrg2W22og808Pxbyo/VhUsZTJ6Xkkzc2rwm2Bd1hT7epCiHgP1w/f3xI8r6z5lm7c5GW9bBAnQvSPwnK1+jcfuvIbtC0BM5O7AhspHlhVZLVU9Yr2K2jjmUHlJk6jWtc7n683r4OPhHr0OsnbHUcgU7QYyT5e4JQTdtgMWlc/pBrd04SYmvCTBWFPzb5mKkqJIM+ghNCeDx59lhaVwGmEzYzhhYZMvxfhILg==","layer_level":1},{"id":"122253df-01f0-4b8b-ae76-ca63f3b19694","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Installation and Setup","description":"installation-setup","prompt":"Create comprehensive content for this section focused on installing and setting up the breakout_bot trading system. Provide step-by-step instructions for both local development and production deployment using Docker. Begin with prerequisites: installing Docker and Docker Compose, setting up environment variables (referencing .env patterns), and acquiring exchange API keys. Detail the process of building containers using docker-compose.yml and running services via start.sh. Explain the purpose of each script: start.sh for launching the system, stop.sh for graceful shutdown, status.sh for health checks, deploy.sh for production rollout, and update.sh for version upgrades. Include configuration steps for connecting to Bybit exchange through environment variables. Demonstrate initialization of the database and loading of default presets from the config/presets directory. Provide verification steps such as accessing the frontend at http://localhost:5173 and confirming API connectivity. Offer troubleshooting tips for common issues like port conflicts, permission errors in scripts, or container startup failures. Include security best practices for handling credentials and network exposure. Reference real implementations from the shell scripts and compose file to show exact command sequences and service dependencies.","parent_id":"","order":2,"progress_status":"completed","dependent_files":"start.sh,stop.sh,status.sh,deploy.sh,docker-compose.yml,Dockerfile,frontend/Dockerfile,update.sh","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:10:50.192823+02:00","gmt_modified":"2025-09-24T23:15:27.445847+02:00","raw_data":"WikiEncrypted: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","layer_level":0},{"id":"09ebf1af-9bd7-454b-9ce7-a93f2fef0c10","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Workflow Orchestration","description":"workflow-orchestration","prompt":"Develop detailed content for the TradingOrchestrator component responsible for coordinating complex trading workflows. Explain how it sequences operations across subsystems: initiating market scans via ScanningManager, processing ScanResult outputs, passing candidates to SignalManager for validation, applying risk rules through RiskManager, and executing approved trades via ExecutionManager. Document the step-by-step flow from candidate identification to position activation, highlighting synchronization points and failure rollback strategies. Use real code examples from trading_orchestrator.py to show how asynchronous tasks are managed within FastAPI’s event loop. Address concurrency concerns when handling multiple signals and describe retry mechanisms for transient exchange errors. Explain how the orchestrator logs each stage for traceability and integrates with diagnostics for performance measurement. Discuss design trade-offs between linear execution and parallel processing of independent signals.","parent_id":"ee934741-266d-4bd3-a076-2c6f6e54e5f1","order":2,"progress_status":"completed","dependent_files":"breakout_bot/core/trading_orchestrator.py,breakout_bot/core/scanning_manager.py,breakout_bot/core/signal_manager.py,breakout_bot/risk/risk_manager.py,breakout_bot/execution/manager.py","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:11:24.119106+02:00","gmt_modified":"2025-09-24T23:58:55.618029+02:00","raw_data":"WikiEncrypted:5TfoOZUXi2pU1NStYas3S3Fkdffh3IPEtPHfmfUtWcp8T6tiaC/IEli4dMz2yCzvSniWCnLqfczGH0fZIRCbRE/PakKl4lOpHU4CpN+v1eVQWYSN/5Hj1OGHUG662uaMQjHP6fx340YuIIJ6RsxkYlAQgCttvZB2FY1GaVZrdewoX8/d/m7IggUtmqmv8ltS9/gzA5l4ivKO9AeFa81ohL7o5PQWG2BybYQZjnbLPgUcdVD+dUlnESshZLcYxOPhHCnGprc4q1H7fmdGj542lSK3kqpPaEU2BGy4zaMDePBSpMz8VV1S8bBdVGaiV2VyvGnkw1YEfoyWraBDmpz/y2SZ72zdAeeNoT/seBbQScoNjPq+Bs6a61FH0+Rj9hUsJZ/bXi5jMgF/e6uRJj+CLbC+iJPHDnVRdnKNGZ5hsRczVdyfOOKremzlFkQA+0EpM05QRQnOAZyUYQJn9wIZy52BXLp/ulD9jUg7XPFVPLm9IqLHFuGTZIU6JVnYdhrge7HyHcTNeGTlTDQEUjLvladIiyp6Q1xRCMSrz2Zy1icuzMrpOyJUnKZrD9C8Nhj3+thrtFbRchk18VVtf2Cezhe05R2yEEQg13TSk+IeSOgyOGsqjvSj1bgqpMLJL0Cv8HBFfVGArBuHJeN2ASj4nbUm60XLCNlZuPrh7eRB62gSlRUd30QE1xh3PqGHXMRDqSNDthZLpdvFq+DTJOTp2MQg2il1IgsGz5JxMB678Nv9KBVkovtoDJii0aAJ2XTbVHxQ6vM+9cLtR2mc4EKjad6C2nm6ckl+mDDk5rx1q1qXmhaES3ujeI7bCDv4n3IztxFHn4OfOchFr37IoiqZYB51n9fepyqEXTkOtw5IGTa7WQnBAfBWVe0pc1gwLEhdmk6s/VcjWhcpWqrEA+vjnG5omWxo2kDSzCslnu0HD93xzXFQG9CoAW69u+6quluSGGYyCROkKWpqdomCyu8PTUZk4ZkXDXdO8i7+sDbgCnn3YaYAngT24VeAG324Hkv65ztApLUrR2VXQKhnyrvz7cb5eBko8pY5luAP4u2F1WH4+AXJAQrKUPr3KO2tSRISNU14hjBk7QqS/o64EjfBQ//maRrJKpS7h+E/0eslCfC8QNACECGwmY0kiASNqQs4U0IygkUEa4A4sCqNUc4xEs1INC5EkMAmcD0jipvX5HE5RjXXN9erDE2dqxMczldAGGYjwDXKA6UKHGRkpRtgYKU4bZ+zaTDYUbSXXypturHlcNa3y1IzhXEsoGFa2hbjDhjJOnn4c4oSZ9QzhKrXc9vyGDtChZgAgy5kaH0Vzg3tw1MNAZio6VUMzeXvdOu9VSLIpq4p6Mh9XD1DUZtjz1/iB5JsIq8t8iz3kZcf5B9VDze66Zvr0ALeNHaTt0kIjugNoMA/CqnTqdsD7Yhze6ZJu8wqVxf0+JPpkw5TU+uQ7zqPUW+tRJz+NIW17Aepkq/N14+z/AvcJSRqiobcYxv/Y5k6NV9jB1ydAwH+P7TOO1UBa1UCcpUQLyablFOQ+f28CzpzdVdObqWkBuEDVovzKkf4OeXIYLr4iqTpvtJqCW68J5ml44MGVUjoQ6tg6iF/7GHzcxd9ixquyZpG7+f9MC/Qwg5UTS8E3laDatuZPU+j6jCtwYdW6XqnZuGkz/eIbO7jv//iqRIgWRyCXot2ynjO2j0y0lJXmQPJDXsWEOe5mMhyNqA4HFrpAQa9Fb9pGTiqlpWCyUGuF3Jw5FgGORjzf+V1URy6frQIw7JDRt/zAOwdDLS0NF762Jhtas3JRgxY/W1G1bTKss5LmohJPYlmOgiKB1yZ3/+0ogKg+GdP1n6qE4R/vb5atVNj4MAGh5Td/HpYsom2Uvf9IFa45fpBIOvA75X86Fhgf6vTlFzxdXkqKfuIcnyZG2BspavFAyTOHaFvmHp5S0Y30w==","layer_level":1},{"id":"51d78211-8f86-4b31-9a4f-00a78afde1e9","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Market Scanner API","description":"scanner-api","prompt":"Create API documentation for the market scanner endpoints in scanner.py. Document GET /scanner/candidates for retrieving current scan results with filtering options (limit, min_volume, max_correlation), POST /scanner/run for triggering ad-hoc scans, and GET /scanner/config for current scanning parameters. Detail response structure including ScanResult fields: symbol, volume_score, volatility_score, correlation_score, and composite_rank. Explain integration with market_scanner.py's filtering pipeline and signal_generator.py for candidate evaluation. Include example responses showing top candidates and their scoring breakdown. Describe performance characteristics and caching behavior via utils.cache_manager. Address use cases for external strategy validation tools and monitoring dashboard integrations. Provide guidance on avoiding excessive scan triggers due to computational cost. Document error handling for exchange connectivity issues during scanning.","parent_id":"b7062f6d-b447-43b6-b46d-938166fcb0bc","order":2,"progress_status":"completed","dependent_files":"breakout_bot/api/routers/scanner.py,breakout_bot/scanner/market_scanner.py,breakout_bot/signals/signal_generator.py","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:11:42.395334+02:00","gmt_modified":"2025-09-24T23:59:27.431594+02:00","raw_data":"WikiEncrypted:A2RcMgSkZO3IJNUPh8hNMBj3iEYAH5ziglZ3x6OZ691yMdrQjuH1GRqtgZSaWfV8FShKLrEVHJmx0hwfkgrubkprapQ2CRhaAFmbdJNm3sTEv92e3oi1cg0KzqIdLde/YaFG/SZnDOkQ3fSq3eT0FSGptPgMWvn1ufZer67f56Q7nYsGwWEG3V7E1aC5lE59lDb6eS7VbvftKTj3ysLDKneniQiPb42BxrLb5vqGYHX3L8Nn2EwxFFiYSaDfK0U6hYVgO3fqOJ+gxUUihAwwStRuQmoe4dE4W4qtRoPpou8nEMpTM9WVGyQFGcCSbVFZGoeemlcf0XLcN16Flb2Jik9/W/MVYFLO5XGNFiTpSyDkOzANtMSm8X+oeSqVev9DlnvQQtBSPrG2YAl2lOSCl+fQJJ1stnsVglTss5HwP+g6+tEjqbwmF8IgJ5IXlkcvdkBKET51ewlwXOn3o8XL+HCOe4HDXDC/Q3jruzBT2RCHPhAaz1RbmaBpg2Q82AjlBqhtAwnEDP3y46UHDRgf9/DbncAMCuBQqMphJzmzcDWsUJz7Q/U1xmRPjq0XlRWFTh0U+W4SD3i+ajihlo48ZmrPuMSbXQgeRAfbfsjnM/4zSmyDN6KI2KPhyQ1HrNyrcwlQvPTqmWZV/eAhXCqj5BPOdjTz+Z2PkzWS82dt5FhlFeIQ/lgKQmTvqwm0SU+0Yy2p5XdAqtmKG5joYf9cWWTOyyNttSb5lEY6gsNsFU/HuA2Y32Gv8XMH1gFxZZMKaXQQEd7nUp7FD3FRVhU+TXta+OvLgQfWLG9azdRkqZk5fOTaAt0WomUeVynoUVppuh2BQH+wH2U9ZT73vzBdX1lmSeN2nbRKSGCpqRv0HCofXVcOeV3eD0C3PnLqD3krhxW+mhoO+YLlh4CKKyexVc2SQInCJ7kdnLmkZkDzAp/LOLAdAd+33acK09Ga4RCtJTM+7nMqzpmAPGergOt4lhM+KWGqXGOZif6fcL9JdHKC68vP0XcDlNx/Ce9LIHnAAmDOGo1lP37XHQCH4Thp/N6Skh+ftzV5oUAnpUIRGTE+zyojr8R3XtIZNJ6Ix9ZQNX/iKGJTF7uM9jnc8N8voW+QCTFjjL5ksQOWJZQix7xQWZ4u+hwyKxc7JnWR8LmX3N4apsuBd95q5JujwbFzvBksW6DcfPWYgVbDVPNItCB9tU9YLZV04iz3tYzLUFJ7SA6KgY63h3LLn+8T8F6uemPTUgH7q31uELd/Yl/AZyFWc2+DmYz/Vnw1UnujitJJ0tf8IuaYiIYPJZaq48sfbRs3hY7B45gBmT7ysnxilTSARVV3ef79uIN7v5+DQUjgtxW5YtEWRkH+RkK0AwdikxLiSjx6CJRPxLCTYZ4YVnic1hG6+5Lblz+tF8XfQlN189Rp2CnvKC/+mpVipj9AeAPOg5wwCZIUcBB2kPeoiTsF97Trw9K+Ox538tfGAyB4Dcd7H1rDNAHN3b5Wl7Ps/mxxmB4wathH0YdPSjg2OJObrKMnx3H9aLxfn0oTMJK69letXaU6NEYVahbYsW9Qn1RgcX/21V9TRZaaG2ntm8WHQOVkvExT+r5d5yJyM7/1zQbpzxL2ntNNbOZgINTHvTIKk7JJ2RI6fecE4ajKajsREZpBbBS78wQcBmoQZYvmtcqfs7VlzkojR1A9JLsSABvBsSAXTk7pyLdAVZ1RFTwnvDRvO6N/tULm39j9O5VcgE2p3nPgHzVR1PSlN2IIa0ta9z+iJbRO6f3zTveUbZ4=","layer_level":1},{"id":"50220214-0974-4d53-bb45-12cf4c35be6c","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Strategy Parameters","description":"strategy-parameters","prompt":"Develop detailed content for this sub-component focused on strategy-specific parameters that define trading behavior. Break down the key configuration sections beyond risk: liquidity_filters (min_24h_volume_usd, min_depth_usd_0_5pct), volatility_filters (atr_range_min/max, volume_surge thresholds), signal_config (momentum_body_ratio_min, retest_pierce_tolerance), and position_config (tp1_r, chandelier_atr_mult). Explain how each parameter influences its respective component—for example, how min_24h_volume_usd filters symbols in market_scanner.py or how tp1_r determines take-profit levels in position_manager.py. Use examples from actual preset files to show contrasting approaches: high_liquidity_top30.json emphasizing depth requirements versus smallcap_top_gainers.json relaxing volume constraints. Detail the ScannerConfig's score_weights and how they prioritize different factors in candidate ranking. Describe the ExecutionConfig parameters like enable_twap and limit_offset_bps that control order slicing and price placement. Show how strategy_priority in the preset directs the signal generator to favor momentum or retest strategies. Include practical advice on tuning parameters for different market regimes and backtesting considerations. Address debugging scenarios where misconfigured parameters lead to no signals or excessive false positives.","parent_id":"84bea7c7-9ac7-4353-99d3-b94d4baab7c7","order":2,"progress_status":"completed","dependent_files":"breakout_bot/config/settings.py,breakout_bot/config/presets/breakout_v1.json,breakout_bot/scanner/market_scanner.py,breakout_bot/signals/signal_generator.py,breakout_bot/position/position_manager.py","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:11:50.459259+02:00","gmt_modified":"2025-09-24T23:58:38.727496+02:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"9242803b-37f7-42f3-a588-434c5ee7f72f","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Scanner Results View","description":"scanner-results-view","prompt":"Create comprehensive content for the Scanner Results page that displays real-time market scan outputs. Detail the table structure showing candidate assets ranked by breakout score, volatility, liquidity, and correlation metrics. Explain sorting, filtering, and search capabilities available to users for refining results. Document how the useScanner hook retrieves and caches scan data from the /api/scanner endpoint and handles live updates via WebSocket. Describe the EventFeed component that logs scanning events (e.g., new candidate detected, filter applied) for auditability. Include examples of interpreting scanner rankings in context with selected presets. Address performance considerations such as virtualized rendering for large datasets and debounce settings for search inputs. Provide troubleshooting tips for delayed updates or missing entries, including connection diagnostics and log inspection.","parent_id":"a8672b15-afbe-4fe5-ab77-829c873c754e","order":2,"progress_status":"completed","dependent_files":"frontend/src/pages/Scanner.tsx,frontend/src/components/ui/Table.tsx,frontend/src/components/EventFeed.tsx,frontend/src/hooks/useScanner.ts","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:12:15.559826+02:00","gmt_modified":"2025-09-25T00:01:12.821769+02:00","raw_data":"WikiEncrypted:A2RcMgSkZO3IJNUPh8hNMEQFPQuwMiu2e60WMKWdOD1WbzOCqyzm9mrxoHqWIeU48OK26ehxLoHFWtu5nA6fvC4X948Djm8EdIJREUlX1GOciE9Ji2DifQv+sKVs80UnmsR535A1AvC/SYcTrfNnBviXSjQkmKO2NsGPHF5FATYjqvs7v6Qb4Cq8QuWLH4mvhbeTBV9o4w4H5rCzlnxSMMwWi5nlUCN1ifN21x4Hh6JTv+8rQNqhlCQSWWNRlob8ca7rCMc8zmiwEp890IvaH18jIUPYgoJkwxXL6XHsvQcxF8IxQjgRaFSCmgKCPQScProXE+Zey797VM0tijXZTqpYKrPYgjdLQrCZc39yXRlWstJ40xKM7IISkE62OpUr4fvOkKdxD4rfo35x/kDGjctTqniFPr/+RJm26yWUNRFjbXiXqMkfeJbmMYK5jp+4Tih6Zi62G0Vd8x4gBrPIqDlXfTN0Aqy1YQqUI9fL3N4sgHHemBEZ2fUvLKFVOfPPh9YU3pN9Xy7sahxLcYrvCAawY9Y4IBuinbWxy4DZ3rI+tZSzB2qgZ7CcA2cRg23G9GBhvDHPzRIOihAcoAQQb8GEftnmVH4twFbvPKPBhx14+vWS3Xej4dpRcgapstntACJHAHzvGD/k9jOAIBBeIWRI2OhrdUDOa2oBNW0/LSp+nd/siPU9y6xD4xnaj4lxneU4WaTLhALletUxxfLSWk3sY4C59W/oObcdcPJntyeU2x9l9CQbrfXhktqGj1gfOfCZkyCXIFYGX92xL+8Ycye0JV5zny7AjqZUIpuUFeRv3mS+uZCT4wG7WA4n39QZajzrGU09bemZ3K5uHZ37mbP6QGXddYqbBO0kuovVianM9QDLd/3Z153QHNimekvtrb25EuZ6KNvDPpQ/BiCRqRt8dgHKtoYi1D5jR3typD64eG/a9CEhUNP1qO4FBQejK79rY3Shb2xmIz6SpY0NrOLufzCO6rUnZ9fJrxMPmTPtDb2GUG/WK/xlMIrppbaBBpfA5mlmsnjSAjHzrp/lRkP5UyUx10sGGXPbFbCkdh3RzSLIgIUmDTGXqfeCCE9ZcpF0efcz7e/+ycKZ1tr3Av/hpX6OhKnvqvabvMn4x9v6Nyymqd1xUSh2mn5wJHcaK16HXM+awaebbqnoEMN0hFgJcoiTK1SPb+LJCLwKxp8LJEdgxn2W6A0skxsyvD3Klx+jRr05oZDpWST3lphIly8MNxhjVRzttoe664ot8li9hCofEFBDomiOmjLZFJBRLUmvGesXnGBUxf7UEhBXHWpzzTTkj6aqAxyxFB8xWir/IV4rYoJbnUwa9LjFxGl5ruoclS47vlm/lu0J+T/0FtmenMxPJ0MgCB7mvOt8oHM/wHiZegrBGKiLBIgAG8JXWm2Kh55M2Dse+PdAd7l4wticOst5rkm1kOJEn3pZAItWeLEeImuwV5t7pPIfXvgSlOGfORMwfXKGTY1iOEsJ/XYB2jrUmnwd4vanF2nOdnrZGq28BYq08u1u0QEC3y4DviXXu5ANTnNGgH+h9/76dIiXansgLL8DAWpBzlYjdvsCtDwwDaLZIsawd0PND0Rzg8AVJLjmXCXUeHzYfpfCenwxu1koeTkaMEP/4qQjMyh+qvDEo6QFZdDVJ+5Aw3cEoVs1yeS5BDpPbgjfl3BHGGiCceMifxG1mQkbbso/HfAqajIaUPYJYAaegYRZsL/jjhv/x0CdZsJR9zluTJJGaw==","layer_level":1},{"id":"d07aa52e-20b3-470b-87d2-e8297c9515be","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Monitoring Visualization","description":"monitoring-visualization","prompt":"Develop detailed content for the monitoring visualization layer that transforms raw metrics into actionable insights through dashboards and real-time charts. Explain how Prometheus scrapes metrics from the /metrics endpoint configured in prometheus.yml, including scrape intervals, relabeling rules, and target configurations. Describe Grafana datasource setup via prometheus.yml in grafana/datasources/ to enable query execution against collected time-series data. Document key dashboard visualizations: engine state transition timelines, signal generation heatmaps, latency percentiles, and memory usage trends. Provide examples of critical queries like 'rate(signals_generated_total[5m])' or 'increase(daily_loss_limit_triggered_total[1h])'. Explain how the frontend's Monitoring.tsx page integrates with Grafana embeds or directly queries Prometheus for real-time display. Cover alerting rule configuration in Grafana for anomaly detection (e.g., sudden drop in scanning frequency). Include best practices for dashboard sharing, version control of dashboard JSONs, and access control.","parent_id":"f199b129-963f-4f69-8f08-1183ec20082a","order":2,"progress_status":"completed","dependent_files":"monitoring/prometheus.yml,monitoring/grafana/datasources/prometheus.yml,breakout_bot/api/main.py,frontend/src/pages/Monitoring.tsx","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:12:19.279447+02:00","gmt_modified":"2025-09-25T00:01:26.618894+02:00","raw_data":"WikiEncrypted:HL3VqGjXq8A3aGeLxAjVPgd17CTMNIlIIzN6GB/74P32UZGHGW+dHHROqTg8rayoomn6CcAK5xFN55shhrxoXsxiaNokhSk+Wg3W8xOXQfDTp1BatwXL2q48TPSbS4gJT5TkbUHmwzlCWwDy8Uya5UqJ5SgDUaWt8RXKpkpM5DTqfHfTxUPcKmrgPGyB0Dj89ffHYgw2IST7a9trGrsu9NbCdHDVSAuIDcc6yJGm7pAJliH0RpQZnfKCDQ+vgFPJ0BlVdcbGmYBC327XThUjMJMcijR8naTkwsIttEP8t8vYcdm5nANjDu6pDktuy8m+4FRA1vQE7crXHE8gx1pN18nSo/eG3CNCOq72Abh6EuhC/t381sj8EsGAvft81VrJyuOSHc979xsbctGaTwftdBSecHtG2HD10O6aQYvoCbaInTXOyqELDzUn1tU+QSx7A9CH+uuVpYN0F317evcsIBydFeGydmZgMeSWq9ED1mqA+CYpEIbf7f7Yj7JsaRdZhFIlxFE274m381VvhQ7+cgk4vzO52QU7Sy4GxtggX3OH560RcyfPdKic0QpBDnBbq5YrjQKJyxbG2JHaY+84osAHUAw20ASsoQkBOvcBQmwoH12IiIx+ZFBsQq7LE5KCt94dGmJS6GJFhtXoQOFmSDhXLUqEN6kz9kNHQVp06j1jHG5QXy21Mes7L9bHW+kHq6KLPmOA6QLsyynmCovhjbObjkkjIRoNeYg2meJjXqoUDYiOl8xRDNcbK90UFFqI9xD3v5KI9DNd+yGbuivo46Q83Ee+xxIEHX88noH6/c8+O5SzJzAwzDKixudd3gXBzc427qNqGhCNCINbzOsPJiSCN2QpI/NvJKEpiO8ZaNrVa8zUUejYbs33zTQRe/fy45rvqrLk0QdqiGhDc94lJFKaMjV0JXyEt+JXFFoxKNy1pR/r3CSU6AYU+tIxcDTe4bFaDtD5i0gASFDLEbB0Buqw6nYaKBcv0WpRbZT0Hrf3pt7lGOnIiafb4Cnm9P85aMHsI73TyYAuonZD2PKHN4YkiEShfM9L7bO1G655hr8pxHERkHd7tjm0sFXt+y/jtTIOh5jYn3SmLiEiVXvGQcbio4gSpyjvsr2BZVXh124CmM2eITPAMP58GYyPNIjQ8ozOABJ7ihfL0PGurwCauViWLAUll9qFcihkR/epRw2TdwfII2aEMgOZTMCMTFK0V0EsbbLEGyLF4nYtPSN4D6+SJI9GjAD1vDgYfwgWLmdArkToScJcgHE+fw5PidBV/mxqUxdsVLk/SaPEK0k7KSjDXBS02bZdP5nRNciTOuxxtuAwxNZiCJ9Ta4YP1kNLHNGlXB6nzq5Jz29rF5dvSkTT+okrfCVtRhQRM85qeTCvHJZqNoQ5PgI8MNUCMJ/B9o2Oxqkjt6zo05SJvz8uIEYCiSeWLYN5hy6oE3q8JuuA71sKL/GIMdazBC9tK/a5lM+/4zH/UAi2GrhsMbPmrz8MkD55AJMfR2ulleH6tR05pqJhksmpo1GKHTjgzwFmUniMXVVuUTsa/hzV2ozaWSinanNXlnXVQtwGErJ1j+2FziYeZs3Y3HptvKe5S7eHTg8St7mDVm5di6/0hnpLx3H+/+0IAsxPEfoE/6dSA2TiDqUTvmp/nui/FcworAl5O+wBb15P2sS+Fmah6lO4TI2ttNqSKQaIzgmon6sREjeW/eH9Or6L8AxHeZrF+YKsmg47Lz1ZfzzhuKi8pzIqximmjIqCDxcoXY2+lFj9UI96MDKtcVcTL8zaIic3uOLLLcsRqA+EcT9izEQKTy2aMJ5O98HxDR4X7qgmmRvICmPy4Lh1xaX1E8dxSTIvi9DgJ2KFrSuitZHIxj9COaW8G3u1EaJAiTyNgB6wLtgyNkzH+r0uiu5r6BFYzOA4xjtuy51UDOVG62a5tzTiUgBVosjq6aqn/gjLCYtiB38gUF6aPJjXlfiMERxbX/dfrLHV","layer_level":1},{"id":"1c3a663a-2e85-4f7e-981a-27e6bdec5bb9","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Backtesting Validation","description":"backtesting-validation","prompt":"Develop detailed content for the backtesting validation framework used to evaluate strategy performance on historical data before live deployment. Explain how backtest_validation.py simulates trading over configurable time periods using specified presets, generating mock market data and tracking trade outcomes. Detail the calculation of key performance metrics including total return, Sharpe ratio, maximum drawdown, win rate, profit factor, and Calmar ratio. Describe the viability assessment algorithm that determines whether a strategy meets minimum criteria for live trading based on risk-adjusted returns. Illustrate how daily returns and individual trades are generated using statistical models to simulate realistic market behavior. Document the report generation process that produces JSON output with recommendations and risk levels. Show how results are saved in timestamped files within the backtest_results directory. Include examples of interpreting backtest reports to make go/no-go decisions for strategy deployment. Provide guidance on configuring test parameters and extending the validator for custom evaluation criteria.","parent_id":"7f23d147-00d2-4cd9-a0d4-ccf720739443","order":2,"progress_status":"completed","dependent_files":"backtest_validation.py,breakout_bot/backtesting/backtester.py,FINAL_TRADE_TESTING_REPORT.md","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:12:31.953038+02:00","gmt_modified":"2025-09-25T00:03:28.340949+02:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"b0c6458d-d4d1-4911-a11c-7eff48ace096","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Production Deployment","description":"production-deployment","prompt":"Create comprehensive content for the production deployment workflow as outlined in PRODUCTION_DEPLOYMENT.md and automated by deploy.sh and update.sh. Document the full lifecycle from environment preparation to live operation, including infrastructure provisioning, DNS configuration, TLS termination, and domain setup. Explain the role of deploy.sh in initializing the system: pulling images, starting containers, verifying service health, and running post-deploy checks. Detail update.sh functionality for zero-downtime upgrades using rolling restarts or blue-green deployment patterns where applicable. Cover rollback procedures, version tagging, and deployment verification steps. Address CI/CD integration possibilities, pre-deployment testing gates, and approval workflows. Include operational runbooks for scheduled maintenance and emergency interventions.","parent_id":"981b35ea-437c-4941-9f28-6f37f80aadb5","order":2,"progress_status":"completed","dependent_files":"PRODUCTION_DEPLOYMENT.md,deploy.sh,update.sh","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:12:50.822683+02:00","gmt_modified":"2025-09-25T00:04:07.699735+02:00","raw_data":"WikiEncrypted:1PcQ+NupkgQiLQ506NXlaizhNZeqS8C1INCZPnjb6ox3WfDC1Javv60UW9uJoqTZw5QTR5lAkR9YPLJg1vZtRwpot2vQf+E0qMnJ8iUczzOl05ByExgG+EMxBhRs1e6NaVCgMeqCNRxk/S69AhjwkFFbzLOWYiVKciMkNG5TF09dq1hnqyBJ0YSwJjX8dcupp3OpMxIRi/5J9QtFBoGPxsAlNmOmXt+AXqRuS91ULft2/IBJ5D/Bv/TZ3OOG6rUJ30bH6rDuhTAmh5w2p9hIyu/Ju2BOLdvbJMQVrrEFXkXApcDDr3GHhBHYInAy2lFfOoXUPIiWk9qbSKtlgtpRExKdUMtNMGnamfv88lbTZERJ2UlOLXfojLzp7xmt73iIuILBvDHcmLPdGbAqH345SZtJfanRoglrz0lBIUsOaf3+AGvXqv4SxIhRZ5xcsmI++5Ck8yIw0I6gX/NEGR7EMsHiiU6KpTlCXMfS3Gmser8rYjOhNtc85IM4lYwaLoWgznmXbpJD5+Herwken7ZQCz/L3F6nmpHQgChtNgHrenhhLAzYC7ghduZdRlkQe+xKkeHHub6+fL6DKds/k5VP2F+PlQ4Z8Iyt9fAx16fX56NqEKCfRUOR7L3bEycSvqoK/2szUzval5kZrOzA+lGqz5X5RB+HaFQn5bGkNrCjr2sbQ9FxHtyovWAc/N3T4yCVVOIZuuV7Oios9135k8fXudGRCokAv785eJxRzqVUF8WN43UOnEyE2dIYEis/Ovop/eFxLZwgTt6Z2cHrNhsFh4PkR1092+QP+VNHPQV2BS6Cj19q+wkyBXo4TVv0jZ6LVPAF8VJxh/BGu8o4XPVmDGbVbdG/79e7BO8uB5+oTe3Ve2X6rq90VnLlWV7NJDmDSz97EV0hf60uoy3tJbGhp6tP5zAglR3zLgABD618lFiNwMVV5242bi1hP/N9WWDUtETVApF5Nrh3zB0V6azHvcmh1CGVSNEnU85F1LrjkVH28qlAhD08uC8fcthVYp3TLBS7+WbLQx25r8sWD2340xxBg964kHEcNsI7c7tE4O7DXT73rsqbbni8HkBKBaWQiXwpb6jw45FRTt1NFx3yo2bXAjulFPstHshAn11cZGOBf56dtFun54MLDOLh9uZjHwpp0FbASEIXPLJKwsXefM8EzZyDEeitC1v3+0Ek33i5ti1/s64E3M9DlENUXxLd4WWsPVZzY6QHhOV1L2JMYb7DxgR3CjbDPEOZs0orAnYfGtmmS2f8DcVBHGBS63lTi+Y0vzW4cHQOoe+nfmj+iwwc1kvq7H519HNWqaDz4nA8SGcEfuHn4u41zkKLfutUxp5ifZQx3vNG6cU1xwf69dnLB7aDhC0A3Ts1ScnQY5RLpBF511p3usL2iTd7qdJnigibCpkFujZ35Ps/hyaGoH5XSHYJmh54/kRM5WcJTbEtybC3Kx33mLbAqYcllvJ2RSi1Oxg2pus/lUka096S9c2H9swhHN01mtUShfe0qljDtCR+MD6ZGfoHgdZC2O+ZVXkyS1zu+SmeIC0ghZ/vOA==","layer_level":1},{"id":"8a81f0e1-73e4-4b26-ab3d-1c45478561b9","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Performance Problems","description":"performance-problems","prompt":"Develop detailed content for performance degradation issues including high memory usage, CPU spikes, and delayed signal processing. Use memory snapshots and performance_monitor.py metrics to identify leaks in scanner result caching or unbounded WebSocket message queues. Explain optimization techniques implemented in optimized_scanner.py for reducing market data polling overhead. Guide users through profiling with memory_monitor.py and interpreting resource utilization trends. Address bottlenecks in technical indicator calculations and suggest tuning strategies for scan frequency and concurrency limits. Reference test_resource_optimization.py outcomes to validate fixes and establish baseline performance expectations under load.","parent_id":"ac3f6191-01eb-4702-aa7e-344df40ee43e","order":2,"progress_status":"completed","dependent_files":"memory_monitor.py,memory_snapshot_20250922_*.json,breakout_bot/utils/performance_monitor.py,breakout_bot/scanner/optimized_scanner.py,test_resource_optimization.py","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:12:59.814179+02:00","gmt_modified":"2025-09-25T00:04:53.264907+02:00","raw_data":"WikiEncrypted:9uOBpMbLX4DyZqW4us3Wm7QbQztBNVCe23gQdPun0AvwS6RuZ7j8W4wfIidlqtw4/THaIjEhETNFYkajiEOXTu5dJF7ecvcKYb6QR0SAh1h1hMirh94CYH74BPiRNTR23DpfzYkxS90N+PaOBbyCYhwY17Zk6Ngi9tsDp/3Q4GZOYYLyxtKD9yUhwDrsNrBaY/DSbeDqtpSedXw8UojImAlSBzTGZLSKphnWRnt3nw8qNhKMhqyvbJ8elTOGuWMhKLgm4sdYac5k/6aowTsF253GAo4uBJi53kN6m6S1Z0acZHQozF5v5nZKpX6yutNYF0X8Hyz0d7zAzv2oEcTKdJGd3Cc6f1R2fwEjNIbhDHEHhm/rP2vYF/vEhCRjknV/8YwMpZpKyOhFs761Ry8DBQ/C5A1Np9yldtSV4A+qpyvEzEJc/pwy1cLX9UyZYrBLtdH7VsIJHj2w8ESwPOeyzPK91XU1EFBZkiJIPa5LVZogYJt/muxTb37MCZFBmW+Pgu5Fcm7K8GUvKIWhggn50nEfS0gHDHezAHbDCK7Z0bT19bVINvOHS2oOOIKKiAxwLjEXZ5lzWKtLMk29WKoemnUATbUKQQYk1F71Y76sRNfHU/do7ZFIS5s2/NqLUbxWi6s8DrwPBYlyndDkA9ErOdxwQo8/CmpBqd92roTiygsygEgBfv2lciHoocEI8/IHW7Pj78bn/CXQWli9tTs05qliHb4hN9LUHqW2iWMm3YVhbVWUhUM57jaLBHzYQecu+sIZ5xhCCLO18/tYdDungq7gc1rXIZy/aAgTNomTzFNWSaTJH1uGTJpnlq3C/RXkfFusXNciqKF/RlNoR9Wjp2eP7KASNVnN20Qm26aGzTctv+T6M2iW+XMApVXKmUkyhJy26usdmkRGLkRQpl03My86tj2vd/ky8sjIZiuTP7Kj9sr2IJGyZjEDZeoPJGqZcSyCkCsHr1Csk2uQfD93jeJMnhOExlbKOKhELVCFXLMmcdwW/EcYltiq1L+d6MfVWY9fIyrNWNen00vvmsPN8m7ckCVnoGC8kJPolRaRG9NrffOcwl5XGiHS7JEvGR+iB2E9RQ2YHu+3B0YJY7xPS+I2d6pU0eQyxxCQBRf2N3+Xakvq0c4l+nLF2Z8nlN9TUK0n1dm17iXYWciMiGnZX3yaZUKrC2MOCYMotLxLWe5Bxolqit3ul6uJJ5BEzSZL3ELO8ow3w3AmMugNUYs5h+RbdjhLVkWo0fPOuVN+fIWD4qfYWWVSBt8zMdTUWYFOuLK+24PrakcwtOO/jgQL+2sGrSSYs2DNqtsaY6fiovQG12c8qC+XruxoRW7VfZ/7yADLPwHoDb/dwkyFs+N2fTwa4WjE2M8thm2aMYdRXa7yjSnwTH2DULt9yK5VD7WJleXsm3cLc3g7U6FUx+2VHhdOKbCMKiTDpn+i/377hVBZO1I+LNlUOPsksOcxxjx4wcjR7uLageuRCN4+u++kTgczPF2ddfcrm/R1G+S1U5qWVNslq6ve5aawpkUqtTTr","layer_level":1},{"id":"267f2470-b9ed-4695-b3c6-98a44c6e31b7","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Exchange Integration","description":"exchange-integration","prompt":"Create comprehensive documentation for integrating new cryptocurrency exchanges into the trading system. Use exchange_client.py as the reference implementation to explain the adapter pattern used for abstracting broker-specific APIs. Detail the required methods for market data retrieval, order execution, account balance queries, and error handling. Explain how to implement rate limiting using the base RateLimiter class and extend it for exchange-specific constraints as demonstrated in bybit_rate_limiter.py. Include instructions for writing integration tests like test_bybit_rate_limiter.py to verify API compliance under load. Cover authentication mechanisms (API keys, signatures), WebSocket stream handling via market_stream.py, and managing connection resilience. Provide a step-by-step guide for adding a new exchange, including mock testing, sandbox validation, and production rollout.","parent_id":"1048517e-b275-4438-9b98-251bdacf15de","order":2,"progress_status":"completed","dependent_files":"breakout_bot/exchange/exchange_client.py,breakout_bot/exchange/bybit_rate_limiter.py,breakout_bot/exchange/rate_limiter.py,test_bybit_rate_limiter.py","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:13:31.764646+02:00","gmt_modified":"2025-09-25T00:10:22.242198+02:00","raw_data":"WikiEncrypted:3wbgEZavWJgV6PEDO9EYn4WLgLbMrvpj8654+22UT19Hbt4ScOtx7NJMtwERwSAUQsVsPhAlbiS9LfiiZvKU11l+C8I8Mm31+RLLCswhpruvVguL2oi5zHcSYYQYMcQ+n7xrwO7nmj4qLbRcyxbQcgYZ3t768BoqhoVwYCjod74ilUlX9ziqddaniJWAFmqv425DrrQLedXraXr5/kv5NxtVHItfoRmJflsCIIf/tOBbCc3hokc4LT+5ZwUANX3JdlNvU5eX9GPutJnPJK0WJgVICHyRlpCcjGKLvsYtuQjtGXqV/5ozhMOoV/sCsl5K5FRCIttIxQLGj9izcueYh7nsNyAqT29c5ECje+5MVlYC7MNb6Q2EBdxaOHzwXE2wN0T2uNJpXbWRcTujHtBKo1PBLVeqQaRmhfMXQiQ3HzCXR/rw+OCv3KfZZpSxVDX7CGBXBLbIjueAUdInaUL+CdR2ixHfaajaH/trwEBEoUfSchB58yvyJ4JflqYqT28HLFoEUrD8uA6MLUsMKHd3k9zi1+UFOIrQgWPsmnnImG/EWy+N5nAWRn2BGNlkF6+0S16my1g2OjmuoEg/BRSaIrF6NlhKHQNooK+cgqsi9cWxTf3N6YTU6iI6WVmyZ3FXZP5MS1eCNZcz/mGcyca3GmlP9bi7JkB3/fHU+CexR8ODM40xO7vYjTfzgbtrTV7lhVuFe2TjrHYJ9DxYpCy/1tYBJkObYUTE2pM+X6xklH4pKBVTlTKuHaiLp3qrkJDmEGxv+3oNGPUyLeV9mxKFjFvjB63niTUjvuDG+8X+ese3uK3nm2i2QUqJ7cmSjk55+/EkxRnZE14xK9278HMltwv4ju9/gruDpp/HEM349br6crp+AT691uig+saxtI0ntC6IC7pq2cmd2RXVn3ett8qbTq99vsHsqIsoy9YeKul00Uws5vyw3lSOYRB60R0YTg3VrQXcbzco/3dgn/zDLvUka3ng3wYzWEj9NINMug8Ty1x1Giab2fmMnhLRoYdKDwOK6gN6EKl6BBXq37i/u0iOezp26J0KF2NyUbstEsgjxwaazqrFvrzoFp21cV4QXgQFwg+rgacfuuJmKxMuWSof5yzd4N4hIXZFeMLNpREmTSTmquWb81DU5yBYLSO7LDFK+UqEkpDk+ZFc+m+TSX1xz6MkX6rypSYJIX1atrdacx4/yc+jwtMXcIlcHC4dIgNm0MAeC1EZYmYwYpcVKsPGIq/lbGWimmZZXqRdm65OanFwJM26wBwMFaU8v6tsUUV0SuduSaRfUcANTTOCa6uwRHlQvYgbOnE/tecKYgrJbujNtjqNpjizpqwRBbhqq7ypKPUxX85i6U9H8rTpkIVm9IxSG208YJFAATapQ/bZ8a9QloMFZw6M8yosAI7hv0OhsE7wck8uXr9meS1LclGQX6aczNAldT8s59c8NWBsMSvSA9XN2rYhUYHgntRECypI+MBc2vl3LXnciRxUyWTYU8UVV6DqUfVvV2bXzWIrm3gxKoTsxiC2ZQQxGEfLAhuiymSmeRJzp8TaLPHEsiL3T29Kspkdpal29c6NXkND1lIHYaeC+BEXZUYMXXGkfAzl3pa+yPede6cjDSENTtyWpM0g81hh7qD9TNP6e+D/d1IF4ni1Y6dWev0hQbr0/BJtwTCNxQsTPhuaiDoEJlzI6DB1PerwZjP+EjgM91SOkN977aNJIuwA6bB2fWTh","layer_level":1},{"id":"ee934741-266d-4bd3-a076-2c6f6e54e5f1","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Trading Engine Architecture","description":"trading-engine-architecture","prompt":"Create architectural documentation for the core trading engine component. Describe the high-level design centered around a state machine workflow that governs the lifecycle of the trading system (e.g., IDLE, SCANNING, SIGNAL_GENERATION, EXECUTION, PAUSED, STOPPED). Explain how the Engine class in engine.py orchestrates subsystems like scanning, signaling, risk management, and execution through dependency injection. Document the State Machine pattern implementation in state_machine.py, detailing state transitions, guards, and actions triggered by internal conditions or external commands. Illustrate how the TradingOrchestrator coordinates complex workflows such as processing scan results into signals, validating them against risk rules, and initiating trade execution. Include component interaction diagrams showing data flow between managers. Explain technical decisions like using synchronous coordination within an async framework and trade-offs involved. Address scalability considerations such as handling multiple concurrent scans or signals. Discuss integration points with the API layer via engine_manager.py for remote control. Provide concrete code examples demonstrating state transitions and error recovery mechanisms. Include performance monitoring hooks and failure modes like unresponsive exchanges or rate limiting.","parent_id":"","order":3,"progress_status":"completed","dependent_files":"breakout_bot/core/engine.py,breakout_bot/core/state_machine.py,breakout_bot/core/trading_orchestrator.py,breakout_bot/api/engine_manager.py","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:10:50.194021+02:00","gmt_modified":"2025-09-24T23:17:47.090832+02:00","raw_data":"WikiEncrypted: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","layer_level":0},{"id":"dad524b0-cd14-434e-9543-8ba032bae03d","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Configuration Presets API","description":"presets-api","prompt":"Document the preset management API in presets.py comprehensively. Cover GET /presets for listing available configurations, GET /presets/{name} for retrieving specific preset content, POST /presets/load for activating a preset, and POST /presets/validate for syntax and logic checking. Detail the JSON schema expected in preset files including strategy parameters, risk limits, and scanner filters. Reference actual examples from breakout_v1.json and swing_trading_pro.json. Explain validation rules enforced by config.settings and error responses for invalid configurations. Describe atomic loading behavior and rollback mechanisms on failure. Include use cases for A/B testing strategies and dynamic configuration switching. Address security considerations around file path traversal protection and input sanitization. Provide integration examples with CI/CD pipelines for automated strategy deployment.","parent_id":"b7062f6d-b447-43b6-b46d-938166fcb0bc","order":3,"progress_status":"completed","dependent_files":"breakout_bot/api/routers/presets.py,breakout_bot/config/presets/*.json,breakout_bot/config/settings.py","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:11:42.396893+02:00","gmt_modified":"2025-09-25T00:09:56.370729+02:00","raw_data":"WikiEncrypted:ArBcYpo+t5pINgDjPo/hjMwXIF44k8Cp0/GW54HUBtOYU9Dj8MvnVKAw9b0iXsWm8G+5dW6UEtm1HGX9PEtvNue5NuSQoDBGeikMGHBKuEEO+0VMds//Wt/9m7uYaxXGnSQAleBZFmlQCrE4RHluiUaaxdN9PlGCfqmqJ4+8xAo80fPZMxoelWoQJIsS6uhay0YKkfGfY40cVkFhz8pJnglvoPPe1cPUbtSglUy0vz0kAuEruitkmrWJivdD15JsNjnPLtTcwHVcKyV+4WLGLvPhvUaXUzrQhGjX0wdsfYXD7D/JD0UwRpbmbZ5Eaaonp7146DeHDYQA/kcEFMIJjUJEAVuI64hcmokyeqMwPSk/7F8xo7SjGOZjIFiD/SUoOYWHWkB8HbeA0ze7Vlujzfn/iukS5KQHR9ta+ufMaInhj1z5ztg+GfyG7mbryYjnoZ2WkuYLrxaZT+dR9z0QawqeIW7Ka7sMaEgikY91MJ1yt7Tt69r7v73JlGhl9A0FXZ4x+P0kvyrw3RnxvBBIEHbiWOLX/+xVE4xMH/SwHshjQB7Q48yytRG0GgSl+r8sB8qkRDU0NV5PCL6wpVG+k6N5Sy4UQM4Sb7IOrh0Ywk56fdoD9d4ITUW/6by0+RtE9QRpi69uCVvUxSDsts8xntEe2AMgePcRsTLDwMyjPGUT92d8/SQB+GzqZI1Avb29ki1yXHToR9mSacUjUnnFOs4/qRK4rCuIbSPOXXBP8AQromBJV5wn6lddJaZtifvhs2Lpi/QJBbRI3QHwnD4VSifWRjF9y58mRy/T/gNVsetYmesVUlTdyQYdZOQ4dvl1YA8KKkP2bDZnLlL5qHPWMuEMGXTTxoExMzIOQ5iNme53glZ1Q2pyb55WO9LJ5vyJcoWkhlu2x41NsZkD9hIQYJCj+sCC/yATXlXOujG8a96NtqgnrfWbbqr7WB/RPSXu/+K8O5ZbgbyEH302mggF/yGnV6zdwECyQtnoIui2YXvfBXi4s+MCRdY5ZhXg9dWRZ0sp2SNyOWAc5CIlT2BQyhz7R39bYiwUt7Kg5bQjtLpfMsUz8w2b8ag6LUYUDpIKNwAcEJpS7vAneCpEJRM5MyoblwzsQtyS6W6JuEsU3JO273LGVeQ17P/TusoEMLeNx345fH+MHPyw+94cLbmFggKBwxy5cIRJoHIcFuY7K3Q3Mwary4GUKw4gcj3ZzJ8DPxxNz6XoVZIEpweoBLWcHaKdC+F33wxCiNaGclCCfLjZe1w23IhaMIXx5GwP3UaNdFB0IMpEoU3eQtvmeCPGFIQzQfEazMWlSa2klmPVePYp3Xc14GJCTCqBWHUJR3M+CBIw/2uhTNgJi+xLyKd9EbcebyIok1BafrpHptn0EokoYrDdgaEsMFOvQB85BN7KWh/cvZh/tmdt4Ues42GTB0Lql1+AyG8QjewqubqRFM/j2Tt4JKssw3Iz+yHLQ0CJowpYHDc4XzxOnYbmxNdbKrWDf2HwBSHlSQJuTjoGKo3yFg9u8AZNJn9fQBOajXCOwI3+7gtpR0Jvwyh5BdLpljHSw6hDiNzIAXT2i+7bpyA50WRwAS8Kl76C3bstSKyURupqdoxAUBhkirY2mBKt0DPLQOtaGUZdLLOBwdzannne3TsNavhkL+mdOeBtVrjs","layer_level":1},{"id":"b01c4803-2548-43e9-b426-19f709b2c5e4","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Trading Interface","description":"trading-interface","prompt":"Develop detailed content for the Trading Interface page that presents active and historical positions. Describe the tabbed layout separating open positions, closed trades, and order execution logs. Document the data columns displayed: symbol, entry price, current P\u0026L, stop loss/take profit levels, position size, and R-multiple. Explain how the useTrading hook fetches trade data from the backend and subscribes to real-time updates via WebSocket for instant reflection of fills and modifications. Highlight interactive features such as expanding rows for detailed view, copying trade details, and filtering by time range or outcome. Include examples of analyzing trade performance using the interface and correlating entries with signal generation timestamps. Address visual indicators like color-coded P\u0026L and status badges for position state (ACTIVE, CLOSED, LIQUIDATED). Offer guidance on diagnosing discrepancies between expected and actual executions.","parent_id":"a8672b15-afbe-4fe5-ab77-829c873c754e","order":3,"progress_status":"completed","dependent_files":"frontend/src/pages/Trading.tsx,frontend/src/components/ui/Table.tsx,frontend/src/components/ui/StatusBadge.tsx,frontend/src/hooks/useTrading.ts","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:12:15.560786+02:00","gmt_modified":"2025-09-25T00:07:25.981508+02:00","raw_data":"WikiEncrypted:YPFyHZBKLoeqhH/MwKsHwbdaCICd5c3Dqzt8up/nrrQKet9xv2LV6IN+YE9zxsTcY5A5r+hd9zTMABzCUu4n3x4cUo/7cwD5BHGcjqA7hPOfiJfV7Cu5VkrLAyBOWLnQeFsmvvgQhpecikfrkndoTWgPRULZTgo2wJxAb16kRDnKlEIZ++JDJmgCtpqdVeuZ8buNo8N/XOFzbyZ4haTY5eWaf0EsU9T0j97uZZmBszod9L7PXI67+V73dcDo8fv2SkZYSEQq3WTAyDQhikXGW7tdqhN0KzTiicu/cNLjA6T+Sou3CkPe0b+V6T8d76/6kUYWYxXvEm1ZFaDuxmBeWPalsivIez2aBxJ2gvxFRuRfBykfrFOW/50gVVLLyd4HDFgtwCmP3++ZWTxVhdD9TR+j56x72E+cxel+Ur0YNM5v3g5EhrvG/V1HXCkAhKcQ5O31U8Wztgez3cdh8tYvl80fC91GVFmxiiggl0N73B4JgtzDHup2twfaVPcwMnR8GujoLOsIl9ndTlMAKR5MJQelTQLQIUvihYgaIRZ8uTc+gAM7TK/py9bDj4hPZZeb7m4VpYVMAP+pt+Wd1+m3TVCVGEktIGT8rZiHH1MaVLflw7yZo7OfDJS0L9D88kheNg6eyf+F4aBfyfKBfhb9BvMQAeVfXtLgagnxeZXAvTOQn+8DvCLLhiHumKlxeMoPIJYQKpozs8J9nkgTd0p1vNXC/dZURPrw6yC7+hV1v4P6wGlSq/OfIWeBq4ppC1ewvglGfr/OTHLOFxulurQur/wtO9C73Fff54lNa4n05DCvcOmEJLSKNwaBp9FqEEOhk8K9i/U7lvnl6SQ0s8duuQeV4tgdb5HGgE0zC9tg4+2rwFpHji2T5R7TZUB22QLlJP9Ou+w56ooVPVvdCVQPMLGuVVk1wVcERmQdctf2hh26wphBLgBQRTqryUnawBelX6gXPfPi9MY7syNBuo30OX7YyP1RRcbwqZPJ4DZiOl8JWtYwaF4AAbm7Rtgy1BpnjrdG5sIsw70cQfTLvlsKZWErsUEsbNdsQZiOHr+kWAm/VdAep+QjyXESkodNGXMJdmT+91lP5fh5FK4JYHSP3OTHfWGX4sqrpxGiL1F9oevoLuermYD1kik8DY1ZDPFV2gKqQd0VRwNfOaFJfVIOqwMFb9YxOyUsXOMTaaBsSnjMyIV44gYWdWrTFYImKCggNweCj2wAu36BUh9OkgKVWMJ+Tfy0oiZ1GyJiuMbO2vUHV6ddQOjEamFn5pMm5reZqWtliO5Vhw9HjDMXdp2Yi7qZYY4MDTFGO/4M0o4D7BYm6AKSqYaFs9kRyRGZD0BNa36/E1RjQBiFl+xjWKFGjZSrvSlC/8gxSB12Y6eYrMu3f+EdAwGICSu28PxNzpegpMhqPboDfKHVoGek02hktde/ppTXRW6+0KW3U7Fj73ePUSgv5yAlSlPM0ShbL4fgSK3yoDo3nWOatJardRZ4zBCt/mC4sc4kMPc/azR8aEOuMHN5RxXOTBoHZyC4353vjit9irUmVGUxu0+jAkTBwxSTvvBJsLeu9O6h5a7kTRXo41gKc6eNvE4aFmCVdssUnhHzbPRRjwbpDrJQm3eb9jet5gelSGbY9I2PYUI5Ypbs9hOqHmfq8QgLBfApTQwR7EqNBXv58R1xBguXw/FnqxycxBpns4c7AQiLHYuG0LA=","layer_level":1},{"id":"e377d44d-9db5-44b7-a1e2-31e0f373eefd","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Quick Trade Testing","description":"quick-trade-testing","prompt":"Develop detailed content for the quick trade testing script used for rapid validation of system functionality in running environments. Explain how quick_trade_test.py monitors the complete trading cycle by periodically checking engine status, scan results, open positions, and performance metrics via API calls. Detail its role as a smoke test after deployment or configuration changes, verifying that all major subsystems are operational. Illustrate how it connects to the local API server at http://localhost:8000 and interprets responses from /api/engine/status, /api/scanner/last, /api/trading/positions, and /api/engine/metrics endpoints. Describe its adaptive polling behavior—waiting longer when positions are active to observe their lifecycle. Document the human-readable console output format with emoji indicators for different statuses and metrics. Include instructions for running the test and interpreting results, especially when the engine is not started. Provide examples of using this tool to verify signal generation after preset changes or to confirm proper position management during live operation.","parent_id":"7f23d147-00d2-4cd9-a0d4-ccf720739443","order":3,"progress_status":"completed","dependent_files":"quick_trade_test.py,TRADE_TESTING_GUIDE.md,FINAL_TRADE_TESTING_REPORT.md","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:12:31.953686+02:00","gmt_modified":"2025-09-25T00:11:32.286046+02:00","raw_data":"WikiEncrypted:1aHEw3M2aeluf1++NE1n1IECgqORxQblZKwSIlkESYf/TGDHkHPk15QK8xcx1gT7Vrp1x9MRMN78ymeEGy45b6HLBvioVGfGD0vf6lF3FXmbNCOzm53I8XNCZGaNBhDKjC3bNxfxN27Sd96IG3b2IIBXwOZsp21nQ8Snc/apRPSdbqdeFv5b106ToeTTpzGeNLRI315OuWgBsDT9dqbEK4aYdiH60aQzqFAwkqIbJAh+Hr6UlXKjZhkMybGJzo+vsnOnWowAV7QgXoVXUvjuHJXz2EO3TQ/UKduHyjf5mauMY47EW5JC4UYbv1ZZtPYiQ9Xgz0cp79cHfK4k6d0zxPXEmZrplC5GM4S4fACiUylc0ne232/EHkI33f17ADdJu+7sBc4xXb0QhjBxy985Ob8UXg+EGR4aNU0aUgMHIIzLpzhN8sC+t8jmM1esM19BqAD9HlefQuivlY+eTCCrx9oBe9kkRi+okBIURTqWZ/BaVQRV1TIqa/hkjhI6HadrleW3V57fJqfH+e4w1ZjYwPPskoQ3lsIGoaTLUE4BDrMqi3CazfTFY7q1ASYNXjjLs9nys23mLVBmfW0Brk2COQeNKkJWa5+nB0iq2miBiM+3wxsh2hKzsFGKMbHGM7NyA5ndzLfJkJ7Klvgn05FawMGR9a55DHBLHMhlD7hHkwKffOmEsO+Jx8OXKwojaXutwk0dbKQv+6AUT2SXBheqpoixuJaYCxcleOCnZpdnHUkLG4+FU2GGlcfngFq8Ouy9M1u2JcyBzwhoiklUtiDQmAlGpknFA4RwAq+iAB+e1XdmakxfKzicUcM10SIObivBmX8buNoByJtOKZDnzlHsCsGhTDwP86ofKUVK5wvWqX7O7zsVuz1FabkUKiCXooOlSP4rj3TyTJKO82+E1wO3nIAXEnUXDpvK00Abv1vb5NluFKTNppaP/FwZ/sgqAsXQmiwtYtEyEiASoGFiNA6M0WQiGunAunOaBlscNQkiojAJs0uCleyu2fkn+3qREbr31/z8XB6hLjcOjpgNRjRuVUT3JD5erNj6BUNxIJo6vYOW6HiOmP9JvnIAXynPjucbI4YHcTybuB8RJaRiRs9vBlbnvzE0zi80uJ2ILn1cTbgwPzZVr/nlY5U7jKH3HiyK98AhlznlQnV4Qkl6JiNHaexXuoKyQQD6WKeYJUmnO1H6NRH456XX790D9NHsoEuLfZ7S90IZcG5CzvuDzQlTbvISMWTFXc99CuzPsbDKgTD8pMHMWxuGrKQ6VrUl6VZsnKFgPHEZWmydrXxfm9tsDmMLC4uqkZ50BEWgfv+z4iHV3cLGRl2n/0+MrLTWu6nsEmnShjQznQh9u2v7kT7gkKe9s1bBSXJHHtG+BazBNNB3T0dp+kQ8o4TJ11Ic5TXjOe0sYTGQ7y6fAJwtyE+ghz4ivQAg0VpPXOmiMFGe23YWhDVcESc1S+5X1Y/wVBjRFNiC9Af2+wefsIHUIQjqVrdQKG1xroHWEUYE+LMbNd5O8Z3hSfyfK7JoHHzPcca88Ltg9xMA6PwXvPBRPYjBU853ALsMyZOjEEdWr11rN/6fcOuPA+Th0JcL3/44MEfzN1TSCVgw0a2VOPp8NEzwaTjrJPxp6GcMrhtpB4me8uUzqawwiH9aoMcfzuXp7XVZQpITpBglJRqkKv/DvJPnuoexmt80RV3/+SkJpsQKmQYWBnFjb9Z4ruHrd643Tjaqb9AX0Jtwq7fvHXob+7kDlwu0GuOd1COkpzgJTwTQrJB53BpJkmmWIvjnFCUi13wLXZwgG0Er1TPuDh6FO8e9jw9ZRB0IT3J3mmNqki0jYWlV40fii6HHAwKHXLT54Hu5hdrZG9wAxoQJcI2w49Rl/+OAl1b3HMycQHwluUP966FHM29Anmd6JKUgT3HB3fRR6TYRcXJk3HBLpDsiwr+c0Q==","layer_level":1},{"id":"2d464378-198a-40ab-ac34-4c95418f57a5","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Operations and Maintenance","description":"operations-maintenance","prompt":"Develop detailed content for ongoing operations and maintenance tasks critical to system reliability. Focus on log lifecycle management using scripts/log_rotation.sh to prevent disk exhaustion, detailing rotation frequency, compression strategy, retention period, and archival mechanism. Explain cleanup_logs.py for purging stale or irrelevant log entries based on age or severity. Document routine maintenance scripts for report pruning, database optimization (if applicable), and temporary file removal. Outline monitoring routines for disk space, memory usage, and process health using built-in tools or integrations. Provide cron job examples for automating these tasks and alerting triggers for abnormal conditions. Include disaster recovery drills, backup verification processes, and audit logging practices.","parent_id":"981b35ea-437c-4941-9f28-6f37f80aadb5","order":3,"progress_status":"completed","dependent_files":"scripts/log_rotation.sh,cleanup_logs.py","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:12:50.823729+02:00","gmt_modified":"2025-09-25T00:12:23.8917+02:00","raw_data":"WikiEncrypted:WmYz76ZuIeWtQgFK+sghtX+0SXNT6s+RQjdRfvKvfUviS+Lvp+v+ElQTNxz+irRpxG0F/kiIeOt3+p1CaQxqSvMVBfqtuUio0D+oP8lqLwB7+zhTjDnmoBcRX/oke6BhwPskojv/Agq/bpwUGA/3Ux2aUKS1IdcClF+nhkNyR9EPHtQsEJPLhMqLhHMfJWJpmnOnU6XcZ7kn1n72juNA39Z03dYZTtbI9gpoCETtK6be2fnIRLm63fGTf/wnjVaF/0qSC0YwxJt9QPQYrQ0tdssLI3Qhc2GoXrq8S/umrQC2EzYlStBrrpfXIZ9o8LIhrFcfqE+uWdifips9k7LUiX6PsUVk7TMgUI0yJWHwcx2bxdf8pt6tyJA7Bhkn67npybZuUe80iiwJICrzbiyd3vVvdrGeWHbQOq6PU6N5tNWsO3fe2NnJ/BLyEh/xXPTxFjh9v3DSx/zzl6dnDMdEsTdUcyaKg89Sn1NnI1GD9xNASrDRu6O5w2JrXI84FD4Bh1Lq++VJbcnEZitOeLsXNB8LAMl4KTMU9S7WwZBqOnEv+1ieQurIGldHOY9lY06j3cInySblhfn11URhEqUT9/fOrKJKryDr/LHlKMDP5IJaP6FgfYxWPZVoWRfycSNWCO7rxi99caYqtt2T4dgCCsefSJmbTAevEVW4FGu0H64CDaC6wbBxBkY/zLDbpLVxASrsSqKLj7DxBSDTbybHqkbKd7/dkF6F+AOUCj1kgZYXEFjFigX+ALwfb9GieFWs0EqKg2m4NsKPC5IIUHd6rMjGqQ/MQscXHxNCdzpZG5wuoIQULH8qDL436cPHScDuKzaQGXCpfmTEZMTy0GPUev1S3dKdOGa23AEG1pKUrWQODmt/029OcxM9daWiYelxlM7yl+jEyL9c2/laLWHROSAbZO39jvxCOGciILOxnhTqpCZ4Do+ZME29Mn2EM/kXyAsJnFROv0Fm/3mT+dpXrE/BPkG+WP2iMRKQ/VP18OmS5O9+wOrppsfn8O2a4iUgq6jHWqYwDUqUFg0j2PaPxLhvqxpJcKj6hP9Cu/ke9gb3vPhVJkQpiD/tacwUY7XpVtMTxdgZ1vxS/8/qbgBR+fCNyO5mEP5v+2qPaKQj6FLU4JgD86TOVak8R1DYp+rmAZtutaqzNNq7HbNyCbKVpgzK916QLd3WcY72Q6C9oL7eZ+Wq2EPf6mXyGbU6dEvzYM8Kix3dJ9avaOBb8ZSuQbG+uxktq2Akj7fmIgCL8Rlpsv7Wg8B1jS/ozwQgmOg8ZJX1dT0lWYwhIVJGLsWG/VyOjlNtmNajLgAbl+vQKwym/aYfsa5l4yjfDpDtQYOYme1FzZo4aVl5fQwsjXx8xlhvc/FKAY04MM8xS9KoANXGm7uV8geJxRcmKwXhN/lwt0WRIC1VNVJ+/o4oYmZAGsPRTwOEAachh8EdohfN1LFbvWTycS8wQFcy2OiQJ5TZ6Sn1U0uZ9l2SoOiFX73pDA==","layer_level":1},{"id":"2bf42797-ef0a-4de1-8a87-eb1af1f8d3d2","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Configuration Errors","description":"configuration-errors","prompt":"Develop detailed content for configuration-related errors such as invalid JSON presets, parameter out-of-range values, and conflicting risk rules. Use examples from CONCRETE_FIX_PLAN.md to illustrate common mistakes like malformed filters, incorrect leverage settings, or incompatible strategy combinations. Explain how to validate preset integrity using compare_presets.py and troubleshoot loading issues via the presets API router. Cover environment-specific configuration pitfalls, including paper vs live mode mismatches and exchange-specific rate limiter configurations. Provide best practices for versioning custom presets and rolling back to known-good configurations during incidents.","parent_id":"ac3f6191-01eb-4702-aa7e-344df40ee43e","order":3,"progress_status":"completed","dependent_files":"CONCRETE_FIX_PLAN.md,breakout_bot/config/settings.py,breakout_bot/config/presets/*.json,compare_presets.py,breakout_bot/api/routers/presets.py","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:12:59.815519+02:00","gmt_modified":"2025-09-25T00:12:47.387899+02:00","raw_data":"WikiEncrypted:aC5ZtUyEKPSxjzg//aVllDcYe0LvO+/DtfzNGH8aUvm7NDrJIpuu60ffgjTPIOMkclsn+xn3tqJnArSZ2W5MAxlsUBZnkBlzY7JPIJdsEFWQyVj1YzmqbzGmEzj6afg2BqglIzNOyfvv3Tzp9vB37I77gaxV46eLKQlfGrrPeIcwWzLNFYoO3IxC/3/yHnj3hyyK08IIPOWR0BG9sLGKYmvYHCTkFsf6KktjzQ6zfnHkINQrvKhohOwgm4m8A/Dt0s1S4Zuy1p06xwD/5LYZbx2uiRCvUHpDK422SuFhiCx82Pd1pgKqDxJrhcKudC34kV5bbtbUYn1mLpzYTWtip5teXaRtSYn68kBRi1Iks3vJqFMWwKsBMpVnXI6Bnuu6WWBVGa7CQieEijk9+w1lCRgBKpPTI2ONyAWuzKLZNVl7GFhDU3uZfTorAfSa6FZYAs46/nprt9AUwZt23qKBBhJLHd+1FSaWeB/hla3JWshbDK8j769v7Em6MnnEdrber5Y28/v8jNzZMPR+C6iU4o0oozH3KeEj5O3lTB6+fWHj6uaqvlyR5g3xt5rNVt0CoxLAK9gNXHjoF/aaNxAsdeuOw0aN5bG4rERan4f89zIrYGQ2+O3KqSvmvAXsBXrnoUeZAcVQyTWkXPwxLmJce/0iw0T4Jc9vH/reIH+WSYizICavtKj20AcREfEWGmZUmQ7buv9BpcYyV+jwrlY7+dqa7Y32WRIsBagLW9VANHdL4gmCvwGejE5GrtiPALPu3yQ6Blau+SKSzYXiAtJ8PvbA9PdFQJKKCrsJ5KXk/ATqF1qvBqhOE7JcMNNIz0d+arp2SiLY5Tobj6wsXqdGzDmoRIje4cywZB27uwvoHnOgzN/QesCsUnJdB50YIhRVEmOx2Z+NkwaKA7mFeEiv6oK8CnX4nuiEt9Eb/31Ush9n76f0bsOZG0j4YzMSMmuW0P+bAMK+h+6vozsh7+FopcVjX0lsbLHvYj9IxvdWjQsm4hPdVgXedUgvE1+u8GEIQooGhCae4vvnUMjqAiQih9aJZUrJKpLOO21aA6Bri0Abxh8y0G39o7EsgQDk8sCXU23WkbtZ3Vw7t74UdobRKpJf6LUZeVGtsavDBPvwGvtu5k/OdVV+jwZTTtVHpHDTcWizTn/zq45PGfxVeDvtObx+s0Oqnhlvbuqyt1AXZfCr+9Ncv7f1Kwpw97IkPw8XX/gi2JmN1L8jonTAGswMGqiNfBJggHdsnQKxCc3L28fmb4zJom7CISt5DHKSQgRZriNsrouRINZdPokWamKjFbu+4quj51pJ2sqZnudsTDrKXVqDH3oD8q7TkypHzXDwOD/SsLqqVjurly/4D0BetQJUpv/PMnHWT5jEEJvqHpwocP87NYadTqXQzLA1PF9zhDAEM8H08EVGO6P/PBi8H2ZOloj3C48JDirI4aHNeog=","layer_level":1},{"id":"e2a424ef-110d-4fec-af31-1681fea23a9c","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Performance Optimization","description":"performance-optimization","prompt":"Develop detailed content on performance optimization techniques for low-latency trading operations. Focus on optimizing the market scanner by leveraging optimized_scanner.py's parallel processing and filtering pipeline. Explain how to reduce computational overhead in technical.py through vectorized operations with numpy and caching of intermediate calculations. Document memory management strategies using memory_monitor.py to detect leaks and optimize GC pressure during high-frequency scanning. Cover CPU and I/O optimization tactics such as batched API requests, efficient data structures, and asynchronous processing where applicable. Include profiling methodologies using built-in performance_monitor.py metrics and interpreting memory snapshots (e.g., memory_snapshot_*.json). Provide real-world benchmarks and tuning recommendations for running the system under constrained resources or at scale.","parent_id":"1048517e-b275-4438-9b98-251bdacf15de","order":3,"progress_status":"completed","dependent_files":"breakout_bot/scanner/optimized_scanner.py,breakout_bot/utils/performance_monitor.py,breakout_bot/indicators/technical.py,memory_monitor.py","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:13:31.765015+02:00","gmt_modified":"2025-09-25T00:17:04.725674+02:00","raw_data":"WikiEncrypted:9uOBpMbLX4DyZqW4us3Wm3Q7klXxmeD+JMMoGiSO2oM1ncLZzA/fqddJBlYZCaLBc3dFT91lbTn0MY20VZ4msnea882mwjZ7nU07KkKEaTxX8g7WVM6E5NhgVXVvKAEdDvKLgb2++EWiiSbtMGLGw03tEYRK+MYzFA6xIOQgWQj8Bi9H/fZo8ubLzudI+/QjYuu5EA4hPJCOAkBWIfVWdV4WMy0t7Ylt0xVkVA1q9K0JRctRisuAFVZC7wgCk32CrGuaUdmn1rAZlEIs2hZDkM67hNIv7n2B+u8DvDHVeCK4Bu8gPMD4Aoiaw7XavYl0OIcHVLmZZ7OPbL/Oprl+uI1Ubk+z0l7EfjdErQ/5tWYTqBEublBn+pOsVTqeB70HeGW7wYRxsHD8ribUd7XIhYh9sy4jIAduEh6BQfahqcqP07J9UhSmqBI6ayCPsz19dCyfhdjF1c3f50D4G/Dz6bZizKXuM3C8BLe8Ho+c/zeUGvYdQktQQTXccvPCiX06TjLUp7ugxiyv+OI41mWunp5CCFv/l700TPBfBsd3ouhZuV3MZwfN6kRZy3Kw5hmgAkKGN3dpnpbeACkBSFLYI7DmXdubOdWG5wLBUNDG5DvGeDXxHT9nx+cKBnMqh6MjsY+1U97W/MTktJjmSZbk5sO8uGGTPisYhgV0//zAosXkzwU0zSFcp0JdECfuMaoJDNA0OLx6Q0K7UsmtzTqUmyVO+Kjq6AELmwzaFT5UxV5pYZkB6lB8syyerOuLV4+yGDseCv8MtOiZKW7s3Rt+92PXMgrI2fFo7yA99bIEVr6zTvy8SdZm44Y44xUbJ1aJUpSVqI2yUm3yYGHNLyO0oCrLP/O0XTWbOF0E5/xxjj9+SQkwLM+gCvRBMszzFsXhMaMs5JZgALUeAOmQpC6NTSZh0WAF0Fa6eYKVMUG1KaYh9JnMIBMk70KOHU10vC5Or1AeHwmbxAGMMAv9Bqz5CGkAWYOCsaxBoNJ+ELD4tRsPnea4PoE40m6PfB3RNoa7s1BFvzuxSDz3fdtRz1B1+8f88O/dgPVUpatmQu5oEDHTuiC38/oPXkQldUjopjAJ3sotozjTPRFTWiCTY7cDKQMja3XK4qEHioaTvbg/p7dJPc8LxkD//CANvwBDOgtqIODSjMKspGhq2sJl6Nc35UDOscZYE2WUSJBR+WbWMSq1mqTFZqYPuvX0vEGnTeyMXbxSaG9MX0HM7Wj0ysG74YkjprJo+7fJCVrrlOobeL5/rNzo7Fx9+/hO6lUyVDaUrnHuJQFpk29es1Nt4e0vQhfHdGLSd7lSbgq9zuxBreArwrrq3KHCZUAaOMoT5sR/YR9pUP54QTfGxj3/V0U/2/B1e0aLQDgMYpRtjJiglzeR4sv/DFu04VT+UcPQ5xwSr+4xSFn3qwTE0d3yKELjYscx+qF3LBceQohkg/Lp8NsHvSd/DABfRREHxv3IGP281CKai0IayQneYCZCSbxaOAobGY2IgbILuWhlaIHzTxJm+HxCbdMfV2gSTgvrGxnhMAqVHQwxMB+bODKQNw1IiV/gNALIiJaf1gZDiAOyW0TkJU+EkOP//bnnisXdv/ZvHpmOZsDDRhYy8FV6IMOoJgyZ47H/962xgAqc/HtTZM5kJ+sNR0nR8ileilQ4z5nj5HiOV8emevL7A1zoiHpUcWT2DJUWZT+UI1KUeNmi8STyUbKNDo+Vs7rwKQsKPcUtzkcUlTasGNHlNQu+Fu/H0A==","layer_level":1},{"id":"84bea7c7-9ac7-4353-99d3-b94d4baab7c7","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Configuration System","description":"configuration-system","prompt":"Create comprehensive content for this section focused on the configuration system that enables customizable trading behavior through presets and global settings. Explain the dual-layer approach: global application settings in settings.py (e.g., logging levels, API timeouts) and strategy-specific presets stored as JSON files in the presets directory. Detail the structure of preset files including parameters for scanning filters (volatility_window, liquidity_threshold), signal generation (momentum_confirmation_bars, retest_tolerance), risk controls (position_size_percentage, daily_loss_limit), and execution logic (order_type, slippage_tolerance). Demonstrate how presets are loaded and validated using Pydantic models, ensuring type safety and schema compliance. Show practical examples of switching between different strategies like 'breakout_v1' for general breakouts versus 'scalping_high_freq' for rapid-fire trades. Document inheritance and override patterns if present. Explain how configurations affect component behavior across the system—for instance, how changing a preset alters scanner sensitivity or risk manager aggressiveness. Include guidance on creating custom presets and validating them against schema requirements. Address common issues like malformed JSON, invalid parameter ranges, or missing required fields.","parent_id":"","order":4,"progress_status":"completed","dependent_files":"breakout_bot/config/settings.py,breakout_bot/config/presets/breakout_v1.json,breakout_bot/config/presets/high_liquidity_top30.json,breakout_bot/config/presets/scalping_high_freq.json","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:10:50.19605+02:00","gmt_modified":"2025-09-24T23:18:41.957185+02:00","raw_data":"WikiEncrypted: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","layer_level":0},{"id":"b0e81ecf-51cc-4a0a-93d7-9ec3248b1079","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Logs API","description":"logs-api","prompt":"Create detailed documentation for the logs API in logs.py. Document GET /logs endpoint with query parameters for filtering by level (debug, info, warning, error), component (engine, scanner, risk), and timestamp range. Specify response format including timestamp, log level, module, message, and structured data fields. Explain integration with enhanced_logger.py's hierarchical logging system and log rotation handled by log_rotation.sh. Describe pagination implementation for large log volumes and performance implications of verbose logging. Include example queries for debugging startup issues or analyzing signal rejection patterns. Address retention policies and disk space considerations. Provide guidance on correlating log entries with WebSocket events and monitoring alerts. Document access control for sensitive log information and redaction of PII or credentials.","parent_id":"b7062f6d-b447-43b6-b46d-938166fcb0bc","order":4,"progress_status":"completed","dependent_files":"breakout_bot/api/routers/logs.py,breakout_bot/utils/enhanced_logger.py,scripts/log_rotation.sh","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:11:42.397918+02:00","gmt_modified":"2025-09-25T00:15:24.578251+02:00","raw_data":"WikiEncrypted:yvkuwS7ueM+vDTxlwQKkZlmNRmFF6oZJztU+JlM4Hyf3PLTMg+5/CidQlY3+deH3KdTX+hAqgxy8FIWiBRBH8DvMpsgY5yak4xaAHlO1gfDor5ZvEtXycjRhuSgmydnbqL9MKBy3XVB7n/cd9qotc9UOIm26FN80SOXmKJf/NEoBFwB7ur8aUSPpcRo8NwjcVq060HjSzmOArz9tPgn5uDGHgXHYb1jW26UHdO219wJVgvIPSvj2MVm87YZfDQ50HjEf7gFZDsosWP3AJQt0ZK4gHdYeu0bD0dSgPuWX9M51A1+oi166EG68hUNGpdZJnIG/wj6CosXNdzDpbcdfAoqaOsi97Y2p96i0DBSkZ1kUWYVhcchPnED+v4Zb/mEd1PhMX7TEubNq0fRWgHjb3dLOcBEne22ZOZTAy05jcn06wM319/8Cggt5fgUm9oPzdzYb/KAvoyt9fSgr6kkGaP9/a6QpvHZP30skdc0Tu885c4zhj2MLsOv6y/ufgzG8dvALpZK5FefHFTZG3AJCf5mDH7iUXyt10gw/STFNYmEd6w+cf1O+M44YvF6jlX/cIWED+mNc0xm7+swZyQwaf7qdaVv+S2WQe8yHZjTMbOWyuEyNQ78lKv0U04LckeoHe0+HWvz6zWVUuN3VIoyZHdKgaDfaGoptyL3EIoptQnz7aEPqjtPT5nY/phjJFjNqAms6to+thh9pYosSerYQHZHR7NJ1Eqoaf/NdX7Jq7XbSNTuiVSTAPyTTNSuLrKS///qbEkRlKq9+QU8J5g6Y925tOC7PMSk6/0i6A6C+gFxe9mZWMW9x0x4n6hmV4ceeCk1XtedgJQ4x6w6CEC5kgt9+zbMpHlUPTthhzLQmNmIHSyUVS7BzZ5Y2SCBY9G3SdF4AYnNJzUuCGD3Ga1x6NWgl6nm0VuoUsdTQl7OFITlwjkB9cTmuAUJaSuVw2R2iaRFZuiR+udMMZwQnDhnk25//Ly3ggY6kEdRJRNFg3UBi2aE0dKomhNP8cgedMIHmAeoqP/c0gdErGCJ0B9onDzOHXhXCgjDmsYLZL7QDU6mTrSPMAn7yMAl066+wjGamsDF1At0R7m5BguNyUl1zcG2557kJ5GoItkVtgsMVezyet1FB3060j1ZDjag+CNYj/k8UQPVBlpQRi/hAm71+EHk+kkfVM7a5+ADosdYAaQRDtZlTBcDKkFSiGmPONzHrSrKsvZLCw8Y8Cur/YdnVQDx4XSKRpg7IM4Bp+zysBMy4BMVEOpyQVkgNE6Z3uSDmeg1YrtMSifDxUeDqTYrKAWyh1bhHwkRyYofY0esKNFFjUYdJZJ095Am3/4Doj3oCWmusZ7fQVOHhYUdt5//Q4eD2i6ADzz/pcj4/68q9DkefRLhUHDqCOO7HnbqwS5oEpX+FczQ8XoCqpaFIRDUCZWdsTdYH/mm2daBvOpWSaO3WCvYsnRPVC+C50n//jair+ETlTy4i9kHAFaiRHRD5NarRLRBpe7IkckXtSv715wuY9Fvv9JGcMX7N1bq6xRFMWRW7NLBC6l+SYbu6oEzhXIalgg4dIIO8JUcEBud5Yfh63tIF9g5sXeLOElInSw6c","layer_level":1},{"id":"e852c4d1-42b1-4f9a-9a03-35d752ff7266","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Preset Management UI","description":"preset-management-ui","prompt":"Create comprehensive documentation for the Preset Management interface that allows users to view, select, edit, and save trading strategy configurations. Explain the Presets page layout showing available JSON presets with metadata (name, description, risk level). Detail the PresetEditForm component enabling inline editing of parameters such as scan filters, signal thresholds, risk limits, and position sizing rules. Document how the usePresets hook manages CRUD operations against the /api/presets endpoints and synchronizes changes across clients. Include workflow examples: loading a preset, modifying stop loss percentage, saving as new template, and activating it for trading. Highlight validation mechanisms preventing invalid configurations and providing user feedback. Reference the underlying JSON schema used in breakout_bot/config/presets/*.json files and ensure alignment between UI fields and backend expectations. Address concurrency concerns when multiple users edit presets and describe conflict resolution behavior.","parent_id":"a8672b15-afbe-4fe5-ab77-829c873c754e","order":4,"progress_status":"completed","dependent_files":"frontend/src/pages/Presets.tsx,frontend/src/components/PresetEditForm.tsx,frontend/src/hooks/usePresets.ts,breakout_bot/config/presets/","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:12:15.561665+02:00","gmt_modified":"2025-09-25T00:14:59.942733+02:00","raw_data":"WikiEncrypted:ArBcYpo+t5pINgDjPo/hjG9JgqEi9ACnDUdt/7gsatb7rXYsf+y+tBm2urZfoYgllmROL3Wtdf97yJaPaFfkEMSgDcgjfCi+X1n6O1loCjiCHMdn4RamKjmJXwz4imcV5N8xf2OmPh7JmHNtbsbLsAom6BLHFUDEV3eBcl/s0blOalAoJbk8MzN/Lfq4/ijx3nq29Wkq/FigTarsRAg2NSqMzh2XS5ikdBeAidA3nX0bEiHZWVFn5JjV+DP7piu19ot7vDZxm8p/5oQD6qdX8k1vf4kUiFIX6/D5pn1mvcUX0nyl5dgghypkhik/1hNxdTNVHe8eorycnpBxhuJYopzjg/uFoIdGfMKG0RtT0Y4RAfQr0WY10flUp2pQ1I5XJ47bm1hPzvVn+ALqZk9j5ICDxCNbKj8irOW2OcXpnXkRNenG49BVoti4wnR4raAuIeRUoRFQvWOwQwdCFTDh1PBZicpXERWwvqk3KapNG+t5C24a5/lBeXoz1YziA+5/0b/xOn7chbLo1xhP3T2q+N+zuBB22XKVPucOPNMsM0wguQxSZ3HJNMRxqZc2Yj3FTD3q3JkRaCT62FU2L+GOEv+hbsy7WRdbSpr/vKXNDowqhbTPv8ej3b11G9fXPtXGqFQIAoJBWqTlVbPo8pWymnmDA0fxGzb868HVnFyJWuBf+yu4JC6jOxTlfmo72lbDDdLrclaL6nwymdYyOwbJubz0oSzTeVfSQoMGcX9bZKQBqaJNMFdTEJMlnZWv1Z4H+6//+Nhrpf1h8FdrhfLWq3IZDToUF14O2yE1zOYGgoyFAbXyG7v+P3yhOO7gKR9V1NohEzn9fFsk2jT5V8jtslvIYM2gAdmaSD2axTK3f1wVTSTyJoqgPC1yfzExcYNsI43A5Q8sKuj20G0g+0TLuomHq4dLxd/Wf3LcQ2PNTGOUD+QsNdxV5wk+MyLHGt0ezWxjG1JhR/4IaG4EF91Je4H467LVZLWmOBP799IzFthOnZyc+jw1BcMJB/ZguQTxBJDlSaZeCiDsS2qSG8C7mRsSI6VCp2KyxbLskjuEBBQZEY5lL5Cwu236pAfU5MgZqL3IWf5WlbW7OEookW/iKEAIwC6QkpPMU5dmewXjL61Jv7+1jnIS/vGt9fNwC1iSEQz5eqLgjdqEJZ9+shlVgHEf+paEaUXpeyCMsScPdhu7YoA2360jNYDMMv1ekB9TSeF6e3YP1ZdNtG7gu+kzIPt84yhNJGUhkViZiz8vnT9r5dJUdue+bz7xNual+QTAynDUkVtijRenr5msDqMW9AwXXtG6tljZgtaZG6MzC/boLj+pw9gIZQQHPIqmFxqNm5ldr+0uDG/BsSSiTTlLqgGyX8hC5FBFihTdatOAgT74h9Z6nPq9lzCKfqwoGsFatv2fOtzmJ+THd4XALJ+Wf8ToMIa3yZ79yPL68yTyHH/u+yq3e6QnylYnPg2PamzAQHukJY4S1tf1QeH39hhBGQmVvy73GZTLM0vJezbVDGwHlrv8PseY5nZHV4t1qhYaxxrQ9Y8Yp+7ve2I1ypyXLBYD60K2i6utcRoAMsBeN7z8e9c2ik0NVqRyckW5rHUDgWceaRAwsWeW+EvzPnh+KypFpxvpr0IuhVYp4D+TVD04ipfyNTs3tgT9NLzGBQxIQ4ekmwF/1BhJrk7XpxL+Gp64d1Kb7SIdLWIpDVUe0CDQ6Jx3o6RkfbOS/RhRSWbtmmxsEJZsoB+uGOSvKw4BqZkH631iG2pKLghLGVLCAPWkH0JDEuLP4HQdtsz3SbP6wY1RWnbTLVfm1g7hLS19OJji3Qhhe+y8iiOG58xIu9oqdVrKeR8O/XZrIWq4f+GLvmQcjPPlo3+QAbAOp8wwwwHYLz3fc6j7EEaUATFe8sg=","layer_level":1},{"id":"628faf0f-a9ae-4973-a71a-396bd07ee787","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Custom Indicator Integration","description":"custom-indicator-integration","prompt":"Create comprehensive documentation for developing and integrating custom technical indicators into the trading system. Explain the architecture of the indicators module, focusing on technical.py for mathematical computations and levels.py for support/resistance detection. Provide step-by-step instructions for implementing a new indicator class with proper input validation, state management, and output formatting. Demonstrate how to register the indicator with the scanner pipeline in market_scanner.py and consume its output in signal_generator.py for decision-making. Include examples of advanced indicators such as volume-profile-based levels, machine learning predictors, or multi-timeframe consolidations. Address performance implications of complex calculations and strategies for caching or downsampling. Show how to visualize custom indicators in the frontend via API extensions and charting components.","parent_id":"1048517e-b275-4438-9b98-251bdacf15de","order":4,"progress_status":"completed","dependent_files":"breakout_bot/indicators/technical.py,breakout_bot/indicators/levels.py,breakout_bot/scanner/market_scanner.py,breakout_bot/signals/signal_generator.py","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:13:31.765351+02:00","gmt_modified":"2025-09-25T00:24:23.477681+02:00","raw_data":"WikiEncrypted:VrTOMK0P24YINQ3w81YokWUTQm3m0jvb7X/WFAgwism8q1j+Ue6HtK7xOgv4j5oHM0JCOLAMzv6NP9QZtPr5K/s4Z/D0YC+bpDYow3xAHtc65ebvdwWYk/Pwel9mGrUexnEtKsutQtP/JEdp4zVvo3hA9Pl488cbX41yjAw8wPi+JuB1/9zeihslCkJPhD2PhAglXBlBcooXED4HLsZkMB7HR3OU29TRI2aeHOmpWGlxKz3iyRaYkxBH+qb9Q7V0Z9nsZHgp/hWA1jSUc1ngl+JpvXs50rxZRV7WFy4tToMDJyupS3ZlMaVYSoadLcHAWFEnbbNNawKDBW0G9dt/rd8hiUoVBElmtw1wBZGmZiAe9jZigN2i22GAikPV409zc5sDkdnN6Eg0GH/v8oET1eJJB97kgqYju+QwPiwVRKM/VP99L89zDL7ozmJXOLIKQBN6cU2a6Wfk5xkxLA3GqtMF7a1QQT/TUb4dYzf/HQTbsF8y2upRUQnqLo++tcme+/oKc4CX/KejXnIHvYP3rcO/yLg9ZBxRgdh8A4OSdteU6ZR+iJ7vYUdN+6X25G1/pKt2oqm+ymq6ce4QDzDrsw3fcbmlTMOu0JwLPgYiahxebkF4Dx+eI8XvjvNWmWrzzo+VRh7MuIG4fxooLh0OF9uUpoid/HYiZ5XrGTgknKr60q9ZO2J0d72yaIKV6D9bv4BaX3aXKk8tFvvV44fcSIyL19+benV1OSNPhGJBT73E8tvi5hy5OabOmAHcHKUDsapkHDjc5hSN4t4YR3NX9KWBfxIje/+g2LTEBBfODZser/+k2iDdyrg48WzbzQtVd6ZsfQhkrjn7vfmIwoR1KPqoZ8BteTbNfv3//Aqqh5rOP1zDo9NoZAIFNenmObqYrG6Sq5WsKq889/iB3e7J3yncTrYP39Uh8ouFitHHzFFEhR00EQg+Ch5vgj8zG94Beiavinl3ExLzvl9C9+YxmBm6FtWE9oMs9AV7drS+OGFQBhffuDhWjkoYmDa9CSvDTuiygVbeER0V62ly6/BSa7b/T8vNJbPjilggE6falSXk9wXdcs4Fnf3wXSEG70saEsUt4VEN2bjhyt4Y3o8rJyyR+cdj6ZpBVx3yXXKJLGY+z4aik4S+cY6OkhmJYzEehkqNhHrBkDwnSNDlpQSNb+KxLdxEU9nOlyI2vvbtw35d1+zoKLITrYgxILMYJreBgE3Hd8T306aXMjGKaet0aZ9l8C1ezQJKqi5yRU4aFW3UbCJRKeHpJTg00z1C/1GLfIZ7WLzFq1Wz2/l07qo/UV2lCBBXPbRo9WmyIiIhFh2Wt4nsOt/RRqbaXbVBQkUdXjH/OcLjwA4zJ+YKwet9aiKjFO2Hid5nmqdPBBR6ml06uoGYpSBfYwfP8O4ZKa82M98GfIyamBimyENhhg53nuu1fvqghjMawFTg+cCD1LZd0FA7hMF5dLnCvjeT5VJGArKVQ98vWQb4dgIt9keHBEfSsP1ME966NEL2/ApPEb/bYCcQlCHRY4EgXzBst40wE+cC/qmLp1EG1GlYYPW7NjzQYaw/HurpKixmkizEJDB/pZH4J3cd1IzF6dNnK1knsR++em3JprmPKdWC1uVoh+v2ZZtMtxGz7EYyBT84bFT+psTWahbEV75duyc3ekEUaxooXnsI28tO11PJjQVLUZIe6QMB2HsETgu2foGgtBLqAfCWdG9uK5Ul614SgzT3Whm3VsN2F2/feLeHQr0+ptMK9v9BOO2f8cfLAR0+JZg=","layer_level":1},{"id":"4f50d33b-6f52-4a5d-8adb-f9bb07e6bad6","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Market Scanning","description":"market-scanning","prompt":"Develop detailed content for the market scanning sub-component responsible for identifying potential breakout candidates across cryptocurrency markets. Explain the scanning pipeline: fetching tickers from the exchange client, applying filters (volume, price change, liquidity), calculating technical indicators (ATR, moving averages, support/resistance levels), and scoring assets based on breakout likelihood. Detail the difference between market_scanner.py (primary scanner) and optimized_scanner.py (performance-enhanced version), highlighting algorithmic improvements like batch requests or caching. Describe indicator calculations in technical.py such as volatility measurement and trend detection, and how static levels from levels.py inform support/resistance analysis. Illustrate the candidate selection process with real examples from code, showing how ScanResult objects are generated and prioritized. Discuss performance optimization techniques used to handle large universes efficiently. Explain integration with the signal generator—how filtered candidates become input for signal detection. Address configuration options that influence scanning behavior (e.g., top_n_assets, min_volume_filter). Include troubleshooting guidance for issues like stale data, missed opportunities, or excessive false positives.","parent_id":"","order":5,"progress_status":"completed","dependent_files":"breakout_bot/scanner/market_scanner.py,breakout_bot/scanner/optimized_scanner.py,breakout_bot/indicators/technical.py,breakout_bot/indicators/levels.py","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:10:50.196932+02:00","gmt_modified":"2025-09-24T23:20:20.333464+02:00","raw_data":"WikiEncrypted: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","layer_level":0},{"id":"e09bb4c0-a214-4ea2-92ed-0930113a65d4","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Metrics API","description":"metrics-api","prompt":"Develop comprehensive documentation for the metrics API in metrics.py. Document GET /metrics/system for CPU, memory, and process statistics; GET /metrics/performance for P\u0026L, win rate, and trade frequency; and GET /metrics/latency for component timing measurements. Detail Prometheus-compatible output format and integration with monitoring/prometheus.yml scrape configuration. Explain metric collection intervals and aggregation methods in metrics_logger.py. Include examples of querying metrics for performance regression analysis or capacity planning. Describe SLA monitoring capabilities and threshold-based alerting integration. Address high-cardinality concerns with label dimensions and sampling strategies for high-frequency events. Provide guidance on Grafana dashboard creation using these endpoints as data sources. Discuss security aspects of exposing performance data and rate limiting for resource protection.","parent_id":"b7062f6d-b447-43b6-b46d-938166fcb0bc","order":5,"progress_status":"completed","dependent_files":"breakout_bot/api/routers/metrics.py,breakout_bot/utils/metrics_logger.py,monitoring/prometheus.yml","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:11:42.399245+02:00","gmt_modified":"2025-09-25T00:18:22.535843+02:00","raw_data":"WikiEncrypted:wqMZoWM7JzuUrLNEmTF3PDQeVCfDFNvGepX4y7f4M6yxkt4DEs5Y2YiNN58qKN9LBOaw9X/jCHjhi9G/dAhk8A5PE0fNGB5kIyuQHNhpqGAYP52AAWu2uNiYQyCgwYOsUkcHh/iQzm1ztgE/jon+GCLziLpi8xtaGeeGQDLAHqWmZNTMXyNtXQeh2FRrAfOI4WhrZARwmU3P/m+0h8wr1j31h9IKTULO64VYm9ATTgnRpvXU+R/AYANgaBRkF1nsHlJ/4e9w0ECATMPm18zfQGcuFO+HAFYoxMWsDpbDoEmSnsh84ESNWPmTnpYRW2qWarm40xKhcpGf57OzGOBjaYd53A2V2yBMdbzQ/sT3ENlSbBwe/HIUc1bV5pj8A2ALv8CTEId4owqwKny2Inb0Xa89txP8jONK+5TT/pViZJmf68ty6f6dP7UCDWbYAX6xE6VQsJKmTUdkjdi0fjcj2hdcmJ9VUy217rpZPYdkRyzSgA5LxE3wAksQqfm0Sv+WycS5qpGBLI/sKJ7uWoHjli/u6PuKYmOg4XfCfF/jnEv7EgvMkwYLcJyMEZVFJVoN/ijo0iU2uZjP1mjtP7KYKXpRdyxSap1z2kK3QqA1JkosZazU8p/8Ue10YSQT0tGRvzauihdLYjG4Pd4dny+fVzcoe3E7eknPjRiae5+YkMpI9wVY+AYPSZVDAO6FDfzA97oksRQXh7nk10IgsOOGNILbQ2nRK8OOdeC1jpi+Vln81trcRhb6OmAPodJBmEl3ZJWURzi8xkPMt4VGJ3w3FcxcXKWvdagPZkFDDCvzUKfJl7n/n8FJmmyKUQdoTpCueyN+k5q2gtV5N6R0fIzUxrMlceKWCoDrE4ab2pMrRI/VlJ/pGAtNEZ6DE2wCAMsOtdtHeCYmyFqSeGnTSjZRuu+LJvbWiZyP2ySf58E+hd49c9KxibDAaXSz7OAVQdDRf24jvYKUm9oesb6TtJ3c5OVay6eGHWGOM94/ZQU7GS3SBCM0Ye0qQeTzG/7CzmJvtkuS/R1rurFMcOcactI0Pg+x9aUgDYCJHA4Z5lOzuqO4HbuxR11dIQzJU12vv/YoaIrevXNtqlOGZBQiygwOC4ZLiWgkaxcOh2X7c89s0QYtdfCQMQN78cAOF9k6S9NOO2TJ8o9lH4zVez1HLtvBMSplwD1o3CfHR2Ei679i+Q7cfQAHSQD3jXuMdlkwJR9vFM90uPiCsq2nLqZN4W8tU6qjXSfmDfFiGslTJg1OT/jQo48V1b8rVgTN/Yoj/F+B/0IRZCg96sA4B0GRKBXpf9s5Rvb1eFXUepdxzdbsGLE+COVzFproFKulj/X+M2C8zkgD8FYnRwsH/j2q89hh7wcrVsy0PljzrhVTZf3E1qtQ8kVypvO0U920143bItteP6DgZF7NBW7Fp0McjGx5ohgt1yJ/p0onzdPsfdzYZZbyA86bMAnyroygwAui1C0eKJSPxvFQDhXPPp95LZ5hkh3JtBlEZarzgiiaob2NQZQNA+KWMtXqKAc0fIEygrDmce9qPid6jN+QNVcDgTW3Ud5iCocyR2l8Hj7TOe8F3YOrrNsU++JfCqonyScxx2RkpnKZV6k1CFiTsfDz8/85bwK+74M1sS1K7fVw5haevhpWEhZcB9yJztdd6j+idM630hX9JwnnImzZ6+/9ESaf9g==","layer_level":1},{"id":"fda9475b-3136-419c-8a26-8f881fbb5430","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Backtesting and Validation","description":"backtesting-validation","prompt":"Develop detailed content on advanced backtesting methodologies and validation procedures. Use backtester.py as the foundation to explain the simulation environment, including tick-level replay, slippage modeling, and commission calculation. Document how backtest_validation.py implements statistical rigor through walk-forward analysis, Monte Carlo simulations, and regime shift testing. Provide guidance on configuring realistic market conditions and validating strategy durability across bull, bear, and sideways markets. Include examples of using quick_trade_test.py and test_full_trade_cycle.py to verify end-to-end logic before live deployment. Address common backtesting pitfalls such as survivorship bias, curve-fitting, and unrealistic assumptions. Show how to correlate backtest results with forward performance and adjust parameters accordingly.","parent_id":"1048517e-b275-4438-9b98-251bdacf15de","order":5,"progress_status":"completed","dependent_files":"backtest_validation.py,breakout_bot/backtesting/backtester.py,quick_trade_test.py,test_full_trade_cycle.py","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:13:31.765671+02:00","gmt_modified":"2025-09-25T00:19:26.553414+02:00","raw_data":"WikiEncrypted:GW0J6qhdI+Co5+lmnL12JhQfdjdosUU0zcjKyhfTplHFOWuIAoj6lzS5IGEmwYZoxysjztdr7A/U0S9RLINeirWOIFFqS/uppDl05VzP8dGUpRv4F6ygwhXUKtywMwsgwdojZSfJ0u1rUMs11MZ6IOK9m+Fk57qLuYCkdXkeBnW/52lkNUEpMCbb0SiojVNnn46VJlXh2xKrzu40L3Pk3l17Jm5ToF8hAYeQEZa6y5mfFvl3FIPO6T3TsdRp/yOZ4h07QEruKys59Fd3D8tNq0AEQjSN4JwDNgES4nQtpwtUVqMObcnRn0Hwrl5OcrmK7N+8rbyxCWwKe8DzUxEIhJ4vYh4O/+VvL5dseS+9SNUkrJB3BwjL0L0UsDygovEUis35jUG8Mm8hGGCbgEVpsDZMjMRsYgjmGyNPtZQhrhvK6WNhmdcNWjmtZtPWDrAra06C8hna1awsWam7wTlRw9ApX4LYpEZkYkH1rtviwSK1LybSduwW2PYnp4Cu8/QOOgeuQcjL/Zu5MMOJXBlKQso4eZS4gfN1VR6SdwLsiX0FsWUxIxHJpBPVM2QqxOcLg+fSdr+G1l21mVPwZZmdo3HY/RAC4vdxBJ6cHdQkdY3zfuL1dYDub/MfIV1+ffkOCulin29hUTGbdIVgCF0CLqDsV8PhiLwuc0agHg/81rhio/reFpNTMPaHyNFGZ7xFCEG4U95lSyMNiHE+KjiGktGY/Av44EMrhy9hUzTcpdPOI3dx/hxqbqDVzg9bZ4nJ1JQEzGgcrqtRrC13k9aKIJlYdcLb6YDTF13bfYHIFrAtrPi+Gf0GX0Rsetw430JfPicAweI8nwqZUi272eG6TAh3Obu9skW7EDosWSG95qCFVHou9j3ZpQRIPKvIBoHuu1Z8+RDVa3jF2IwkkULUTSZ8oHhytpM0vjvZQkf2Kn9USboR0PdjKKCucFMYbjXC25+Hn03fUQ+VvfS/RECGwFf7U8BAQm+YGidmMQDBJVttgYNHR4PADpA+kBTE6d53J6E4/V5Y4H/x2SxmYlzuavjNSBTUv2E3q3rZQb4A1guTxdDXAO3JL4+lb3RM+kmJZio24y/uYDXs/zfAL7uoF62vkaM1yPmH92MxBUxB1hNrmO/N6GBw7b76hTSECfi0fd0YulEU/ytMRHqNtdXTrHJUGtAs8fbOC47/RUHEiNAU276Mmt5dFdgbirBV5w0pq8nDhq+VP8stcHzSuYES8d0vfIaZ5QDf2LhvaAMPCldMSHhBFGenOLFzQ2+vy17cEa6C/OfKnHppmS9IPRslcbIbKDDMpTpSqJhr3nnE+2FWw3qEg5bYp9+pDYdpj1w/1RUlNfM9l9cwPe93nsxLYPUQEAz0ZBAQTwjaj2ycqt8Eif2mvqJjntXKEJOUZgxbLzmItl/A7nzkQiqJkFwxY+FJIbB7y4rMQo6xA5IJrvJricVyqt1yIWf5KuduoBKZTY03V+pO8hawxUPjWMdj0DvB5gRStDnZzp2VY+sDtoJSitbMQjJWDTITBcDQaqslxqX51a7SgokpOehPOHy3LvSFsqOAvk/TlCnIcDPb/Ito0Syhq7WJPjjB4V8geKHLk9fxdLr762kLKlbC73CGdeKm6CUkUuHWBFOHSH3wXd0=","layer_level":1},{"id":"3876e3e4-d1fa-414f-9754-05db9bdc15bc","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Signal Generation","description":"signal-generation","prompt":"Develop detailed content for the signal generation sub-component that transforms market scan results into actionable trade signals. Explain the two primary strategies implemented: momentum-based entries after confirmed breakouts and retest strategies where price returns to broken resistance/support. Detail how signal_generator.py analyzes price action patterns, volume spikes, and confirmation candles to validate breakout integrity. Describe confidence scoring mechanisms that rank signals by quality based on factors like breakout strength, volume confirmation, and time-frame alignment. Illustrate the signal lifecycle from detection to validation, including rejection criteria for low-confidence or high-correlation opportunities. Show integration with the scanning manager which feeds fresh candidates, and the signal manager which queues and processes them. Provide concrete examples from code showing how Signal objects are constructed with entry_price, stop_loss, take_profit, and position_size_hint. Discuss timing considerations such as avoiding whipsaws during volatile periods. Address configuration parameters that tune sensitivity (e.g., confirmation_bars_required, max_retest_deviation). Include debugging strategies for investigating why certain signals were or weren't generated.","parent_id":"","order":6,"progress_status":"completed","dependent_files":"breakout_bot/signals/signal_generator.py,breakout_bot/core/scanning_manager.py,breakout_bot/core/signal_manager.py","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:10:50.197742+02:00","gmt_modified":"2025-09-24T23:20:58.603338+02:00","raw_data":"WikiEncrypted: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","layer_level":0},{"id":"cb6d2be0-33f0-4d9f-be7e-fb1a23b206c8","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Risk Management","description":"risk-management","prompt":"Develop detailed content for the risk management sub-component responsible for protecting capital through disciplined position sizing and loss prevention. Explain the Position Sizing logic that calculates trade size based on account balance, risk percentage per trade, and stop-loss distance using R-multiple methodology. Detail the Daily Loss Limit mechanism that halts trading when cumulative losses exceed a threshold. Describe the Kill Switch functionality—a circuit breaker that immediately stops all activity upon detecting catastrophic drawdown, referencing FINAL_KILL_SWITCH_ANALYSIS.md for design rationale. Explain how risk_manager.py integrates with other components: receiving signals for approval, checking current exposure via resource_manager.py, and enforcing concurrency limits on open positions. Document correlation controls that prevent overexposure to related assets. Illustrate risk assessment workflows with sequence diagrams showing pre-trade validation steps. Provide examples of risk configuration in presets and how they translate to execution constraints. Address operational concerns like state persistence during restarts and fail-safe defaults. Include troubleshooting guidance for issues like unexpected kill switch triggers or incorrect position sizing.","parent_id":"","order":7,"progress_status":"completed","dependent_files":"breakout_bot/risk/risk_manager.py,breakout_bot/risk/risk_monitor.py,FINAL_KILL_SWITCH_ANALYSIS.md,breakout_bot/core/resource_manager.py","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:10:50.198656+02:00","gmt_modified":"2025-09-24T23:20:40.578526+02:00","raw_data":"WikiEncrypted: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","layer_level":0},{"id":"a2d69972-9a3b-48a1-b635-9053f444d3e0","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Position Management","description":"position-management","prompt":"Develop detailed content for the position management sub-component that handles the lifecycle of active and historical trades. Explain how position_manager.py tracks entry execution, manages stop-loss and take-profit orders, implements trailing stops, and records add-on trades. Detail integration with execution/manager.py for order placement and status updates, and exchange_client.py for interacting with Bybit's API. Describe the Position object model including fields like entry_price, current_price, unrealized_pnl, and exit_reason. Illustrate state transitions such as OPEN → PARTIALLY_CLOSED → CLOSED. Discuss synchronization challenges between local state and exchange-reported positions. Explain how performance metrics like win rate and average R-return are calculated post-trade. Cover edge cases like partial fills, order cancellations, and manual interventions. Provide examples of position modification operations such as adjusting stop-loss dynamically or scaling out of winners. Address data consistency issues and reconciliation procedures. Include debugging techniques for diagnosing mismatched positions or missed exits.","parent_id":"","order":8,"progress_status":"completed","dependent_files":"breakout_bot/position/position_manager.py,breakout_bot/execution/manager.py,breakout_bot/exchange/exchange_client.py","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:10:50.200233+02:00","gmt_modified":"2025-09-24T23:23:14.389297+02:00","raw_data":"WikiEncrypted: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","layer_level":0},{"id":"b7062f6d-b447-43b6-b46d-938166fcb0bc","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"API Reference","description":"api-reference","prompt":"Create API documentation for the RESTful API endpoints exposed by the breakout_bot system. For each router module, document HTTP methods, URL patterns, request/response schemas using Pydantic models, and authentication requirements (if any). Start with engine control endpoints (start, stop, pause, resume) in engine.py, detailing state transition semantics and idempotency guarantees. Cover trading endpoints for retrieving positions, executing manual trades, and managing orders. Document scanner endpoints for triggering scans and retrieving candidates. Include preset management APIs for listing, loading, and validating configurations. Describe logs and metrics endpoints for monitoring system behavior. Reference API_DOCUMENTATION.md for existing specifications but expand with implementation details from source code. Include example cURL commands and response payloads for common operations. Explain rate limiting applied via middleware.py and error handling patterns using standardized response formats. Address security considerations like input validation and access control. Provide client integration guidelines for third-party systems. Discuss versioning strategy and backward compatibility promises.","parent_id":"","order":9,"progress_status":"completed","dependent_files":"breakout_bot/api/main.py,breakout_bot/api/routers/engine.py,breakout_bot/api/routers/trading.py,breakout_bot/api/routers/scanner.py,breakout_bot/api/routers/presets.py,breakout_bot/api/routers/logs.py,breakout_bot/api/routers/metrics.py,API_DOCUMENTATION.md","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:10:50.201212+02:00","gmt_modified":"2025-09-24T23:24:50.696122+02:00","raw_data":"WikiEncrypted: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","layer_level":0},{"id":"c98211d5-1629-4858-9acb-d98bfcc6bfdd","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"WebSocket Interface","description":"websocket-interface","prompt":"Create API documentation for the WebSocket interface enabling real-time bidirectional communication between server and frontend. Document the connection protocol including upgrade handshake from HTTP, message framing, and keep-alive mechanisms. Specify message types published by the server: engine_status_update, new_signal_detected, position_opened, trade_executed, scanner_result, and error_notification. Detail subscription mechanisms if implemented, allowing clients to filter event types. Explain payload structures using TypeScript interfaces from frontend/src/types/api.ts. Illustrate client-side handling in client.ts and state synchronization via useWebSocketStore.ts. Provide JavaScript/TypeScript code examples showing how to establish connection, listen to events, and handle disconnections gracefully. Address reliability features like reconnect logic, message buffering, and sequence number validation. Discuss performance considerations such as message batching and bandwidth usage. Cover security aspects including origin validation and protection against injection attacks. Include debugging tools like browser DevTools inspection and server-side logging hooks.","parent_id":"","order":10,"progress_status":"completed","dependent_files":"breakout_bot/api/websocket.py,frontend/src/api/client.ts,frontend/src/store/useWebSocketStore.ts","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:10:50.202187+02:00","gmt_modified":"2025-09-24T23:23:46.243459+02:00","raw_data":"WikiEncrypted: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","layer_level":0},{"id":"a8672b15-afbe-4fe5-ab77-829c873c754e","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"User Interface Guide","description":"user-interface-guide","prompt":"Create detailed documentation for the React-based user interface that provides visual control and monitoring of the trading system. Describe each major page: Dashboard (overview of performance metrics and system health), EngineControl (start/stop/pause with state visualization), Scanner (real-time display of market candidates), and Trading (active positions and execution history). Explain interactive components like the StateMachineVisualizer showing current engine state graphically, PresetEditForm for modifying strategy parameters, and SmartNotifications for alerting. Document data flow from API hooks (useEngine, useScanner) to UI components using React Query for caching and Zustand for global state. Provide usage examples for common tasks: selecting a preset, starting the engine, interpreting scanner rankings, and reviewing trade outcomes. Include accessibility considerations and responsive design adaptations. Address customization options such as theme settings or layout preferences if available. Offer troubleshooting tips for UI-specific issues like stale data displays or unresponsive controls. Reference component composition patterns and prop drilling mitigation strategies used in the codebase.","parent_id":"","order":11,"progress_status":"completed","dependent_files":"frontend/src/pages/Dashboard.tsx,frontend/src/pages/EngineControl.tsx,frontend/src/pages/Scanner.tsx,frontend/src/pages/Trading.tsx,frontend/src/components/ui/StateMachineVisualizer.tsx,frontend/src/hooks/useEngine.ts,frontend/src/hooks/useScanner.ts","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:10:50.202989+02:00","gmt_modified":"2025-09-24T23:25:41.477839+02:00","raw_data":"WikiEncrypted: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","layer_level":0},{"id":"f199b129-963f-4f69-8f08-1183ec20082a","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Monitoring and Diagnostics","description":"monitoring-diagnostics","prompt":"Create architectural documentation for the monitoring and diagnostics subsystem that ensures system observability and operational health. Describe the diagnostic collector framework in collector.py that gathers metrics on CPU, memory, latency, and trading KPIs. Explain reporting.py's role in generating structured diagnostic summaries written to reports/diag_summary.md. Detail Prometheus integration via prometheus.yml which exposes /metrics endpoint for scraping, including custom metrics like 'signals_generated_total' or 'engine_uptime_seconds'. Explain Grafana datasource configuration for visualizing time-series data. Illustrate end-to-end monitoring workflow from metric collection → exposition → scraping → visualization. Provide examples of key dashboards showing engine state transitions, signal frequency, and performance decay over time. Discuss alerting rules that could be configured in Grafana for anomaly detection. Include self-diagnostic capabilities like memory_snapshot_*.json generation during debugging sessions. Address log aggregation strategies and correlation of diagnostic reports with application logs. Offer guidance on interpreting diagnostic outputs to identify bottlenecks or instability.","parent_id":"","order":12,"progress_status":"completed","dependent_files":"breakout_bot/diagnostics/collector.py,breakout_bot/diagnostics/reporting.py,monitoring/prometheus.yml,monitoring/grafana/datasources/prometheus.yml,reports/diag_summary.md","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:10:50.203885+02:00","gmt_modified":"2025-09-24T23:26:00.371395+02:00","raw_data":"WikiEncrypted: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","layer_level":0},{"id":"a41b008e-0998-4273-ac47-2ec70a727713","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Command Line Interface","description":"command-line-interface","prompt":"Create comprehensive content for the command line interface that enables scriptable interaction with the trading system. Document the CLI application built with Python's argparse or typer in main.py, exposing commands for engine control (start, stop, status), configuration management (list-presets, load-preset), and diagnostics (run-diagnostic, show-logs). Explain how these commands integrate with the core engine through direct Python imports rather than API calls, enabling lower-level access. Provide usage examples with argument syntax and expected output formats. Describe wrapper scripts like start.sh and stop.sh that abstract complex docker-compose commands for ease of use. Include automation scenarios such as cron-scheduled status checks or health recovery scripts. Discuss log rotation via log_rotation.sh and its importance for production operations. Address security considerations when running CLI commands with elevated privileges. Offer troubleshooting guidance for common CLI issues like command not found, permission denied, or unexpected exit codes. Reference real implementations showing argument parsing logic and error handling patterns.","parent_id":"","order":13,"progress_status":"completed","dependent_files":"breakout_bot/cli/main.py,start.sh,stop.sh,status.sh,scripts/log_rotation.sh","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:10:50.204546+02:00","gmt_modified":"2025-09-24T23:28:51.757807+02:00","raw_data":"WikiEncrypted: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","layer_level":0},{"id":"7f23d147-00d2-4cd9-a0d4-ccf720739443","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Testing and Validation","description":"testing-validation","prompt":"Create comprehensive content for the testing and validation framework ensuring reliability and correctness of the trading system. Detail the unit test suite in breakout_bot/tests/ covering individual components like engine state transitions, signal generation logic, and risk calculations. Explain integration tests verifying coordinated behavior between scanner, signal generator, and execution manager. Describe end-to-end validation scripts like test_full_system.py that simulate complete trading cycles from scan to close. Document backtesting validation using backtest_validation.py to compare historical performance against expectations. Illustrate quick validation workflows with quick_trade_test.py for smoke testing deployments. Cover configuration in pytest.ini including markers, fixtures, and coverage settings. Provide examples of test data setup using mock exchange responses and synthetic market conditions. Discuss assertion patterns for financial calculations requiring precision tolerance. Address challenges in testing asynchronous, time-dependent behaviors. Include guidance on extending tests for new strategies or exchanges. Recommend CI/CD integration practices for automated regression testing.","parent_id":"","order":14,"progress_status":"completed","dependent_files":"breakout_bot/tests/test_engine.py,breakout_bot/tests/test_integration.py,test_full_system.py,pytest.ini,backtest_validation.py,quick_trade_test.py","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:10:50.205208+02:00","gmt_modified":"2025-09-24T23:27:59.304275+02:00","raw_data":"WikiEncrypted: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","layer_level":0},{"id":"981b35ea-437c-4941-9f28-6f37f80aadb5","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Deployment and Operations","description":"deployment-operations","prompt":"Create architectural documentation for the deployment and operations framework enabling reliable production operation of the trading system. Describe the Docker-based architecture defined in Dockerfile (backend) and frontend/Dockerfile, explaining image construction steps, dependency installation, and entrypoint scripts. Detail service orchestration via docker-compose.yml including networking, volume mounts for logs/configs, and resource limits. Explain the production deployment workflow outlined in PRODUCTION_DEPLOYMENT.md covering environment segregation, secret management, and rollback procedures. Document automation scripts: deploy.sh for initial rollout and update.sh for version upgrades with zero-downtime strategies if applicable. Address operational concerns like log retention policies (using scripts/log_rotation.sh), backup routines for configuration and reports, and disaster recovery planning. Discuss monitoring integration with external systems and alerting setups. Cover scaling considerations for handling increased market data loads. Include security hardening measures such as non-root containers, read-only filesystems, and network isolation. Provide runbook-style guidance for routine operations and emergency interventions.","parent_id":"","order":15,"progress_status":"completed","dependent_files":"docker-compose.yml,Dockerfile,frontend/Dockerfile,PRODUCTION_DEPLOYMENT.md,deploy.sh,update.sh","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:10:50.205963+02:00","gmt_modified":"2025-09-24T23:28:42.589583+02:00","raw_data":"WikiEncrypted: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","layer_level":0},{"id":"ac3f6191-01eb-4702-aa7e-344df40ee43e","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Troubleshooting Guide","description":"troubleshooting-guide","prompt":"Create comprehensive content for the troubleshooting guide addressing common issues encountered during system operation and development. Organize problems by category: startup failures, trading anomalies, performance degradation, and configuration errors. For each issue, provide symptom description, root cause analysis based on real diagnostic reports (e.g., FINAL_TRADE_TESTING_REPORT.md), and step-by-step resolution procedures. Include known issues documented in CONCRETE_FIX_PLAN.md and their workarounds. Cover debugging tools like debug_engine.py for inspecting state, debug_signal_generation.py for tracing signal logic, and debug_kill_switch.py for analyzing circuit breaker triggers. Explain log interpretation techniques using enhanced_logger.py output patterns. Provide diagnostic checklists for verifying exchange connectivity, API rate limits, and preset validity. Address subtle issues like clock drift affecting time-based filters or floating-point precision errors in position calculations. Include escalation paths for unresolved problems and information to collect for support requests. Reference successful remediation examples from TRADING_LOGIC_ANALYSIS_REPORT.md.","parent_id":"","order":16,"progress_status":"completed","dependent_files":"LAUNCH_GUIDE.md,FINAL_TRADE_TESTING_REPORT.md,TRADING_LOGIC_ANALYSIS_REPORT.md,CONCRETE_FIX_PLAN.md,debug_engine.py,debug_signal_generation.py,debug_kill_switch.py","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:10:50.206554+02:00","gmt_modified":"2025-09-24T23:30:41.225534+02:00","raw_data":"WikiEncrypted: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","layer_level":0},{"id":"1048517e-b275-4438-9b98-251bdacf15de","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","name":"Advanced Topics","description":"advanced-topics","prompt":"Create comprehensive content for advanced topics targeting expert users and developers seeking to extend or optimize the system. Cover custom strategy development using analyze_trading_issues.py to identify pattern weaknesses and simulate_breakout.py to model hypothetical scenarios. Explain how to create new trading strategies by combining indicators and defining novel signal conditions. Document the process of comparing strategy performance across different presets using compare_presets.py to evaluate risk-adjusted returns. Describe advanced risk modeling techniques beyond basic position sizing, such as volatility-adjusted allocations or portfolio-level correlation hedging. Illustrate exchange adapter creation following the pattern in exchange_client.py to support new brokers beyond Bybit. Cover performance optimization methods like reducing GC pressure, optimizing numpy operations in technical.py, or improving scanner parallelism. Include guidance on developing custom indicators and integrating them into the scanning pipeline. Address sophisticated backtesting validation approaches using backtest_validation.py with walk-forward analysis. Provide examples of stress-testing components like test_bybit_rate_limiter.py to ensure robustness under API constraints.","parent_id":"","order":17,"progress_status":"completed","dependent_files":"analyze_trading_issues.py,compare_presets.py,backtest_validation.py,simulate_breakout.py,test_bybit_rate_limiter.py","keywords":"","workspace_path":"","gmt_create":"2025-09-24T23:10:50.207079+02:00","gmt_modified":"2025-09-24T23:32:48.409269+02:00","raw_data":"WikiEncrypted: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","layer_level":0}],"wiki_items":[{"catalog_id":"a57ebd93-03cd-44c9-9980-a8427869e7b8","content":"","title":"Technology Stack","description":"technology-stack","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"6db52629-b97d-4348-b8c2-0cc9e7f947ab","gmt_create":"2025-09-24T23:15:18.69251+02:00","gmt_modified":"2025-09-24T23:15:18.697981+02:00"},{"catalog_id":"122253df-01f0-4b8b-ae76-ca63f3b19694","content":"","title":"Installation and Setup","description":"installation-setup","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"f93a4982-3d9e-4a8c-8655-82cfdc0dfd9e","gmt_create":"2025-09-24T23:15:27.441974+02:00","gmt_modified":"2025-09-24T23:15:27.446114+02:00"},{"catalog_id":"ee934741-266d-4bd3-a076-2c6f6e54e5f1","content":"","title":"Trading Engine Architecture","description":"trading-engine-architecture","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"88eb773d-cf93-497f-99d1-38806717f0de","gmt_create":"2025-09-24T23:17:47.075384+02:00","gmt_modified":"2025-09-24T23:17:47.094445+02:00"},{"catalog_id":"fd8cd350-12f5-4055-8661-37912703238d","content":"","title":"System Overview","description":"system-overview","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"56720905-5665-4b9b-86ec-f496442d74b0","gmt_create":"2025-09-24T23:17:53.587105+02:00","gmt_modified":"2025-09-24T23:17:53.590525+02:00"},{"catalog_id":"84bea7c7-9ac7-4353-99d3-b94d4baab7c7","content":"","title":"Configuration System","description":"configuration-system","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"d94213e2-fafb-4867-96cf-e4f5022057db","gmt_create":"2025-09-24T23:18:41.928653+02:00","gmt_modified":"2025-09-24T23:18:41.957372+02:00"},{"catalog_id":"4f50d33b-6f52-4a5d-8adb-f9bb07e6bad6","content":"","title":"Market Scanning","description":"market-scanning","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"3de506b6-9d1a-4484-90e0-7723ab5068db","gmt_create":"2025-09-24T23:20:20.325426+02:00","gmt_modified":"2025-09-24T23:20:20.334285+02:00"},{"catalog_id":"cb6d2be0-33f0-4d9f-be7e-fb1a23b206c8","content":"","title":"Risk Management","description":"risk-management","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"89f5c83e-f865-4666-a4ec-f8af698ec609","gmt_create":"2025-09-24T23:20:40.575416+02:00","gmt_modified":"2025-09-24T23:20:40.578757+02:00"},{"catalog_id":"3876e3e4-d1fa-414f-9754-05db9bdc15bc","content":"","title":"Signal Generation","description":"signal-generation","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"375bd9c7-dd6f-4df7-b49f-dbed85741fcc","gmt_create":"2025-09-24T23:20:58.597075+02:00","gmt_modified":"2025-09-24T23:20:58.604509+02:00"},{"catalog_id":"a2d69972-9a3b-48a1-b635-9053f444d3e0","content":"","title":"Position Management","description":"position-management","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"d76f0102-e3c6-4ad5-9f65-62664e6090f6","gmt_create":"2025-09-24T23:23:14.383172+02:00","gmt_modified":"2025-09-24T23:23:14.390403+02:00"},{"catalog_id":"c98211d5-1629-4858-9acb-d98bfcc6bfdd","content":"","title":"WebSocket Interface","description":"websocket-interface","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"c67a2ea8-263c-4f47-81d0-edc541c7a890","gmt_create":"2025-09-24T23:23:46.239193+02:00","gmt_modified":"2025-09-24T23:23:46.244488+02:00"},{"catalog_id":"b7062f6d-b447-43b6-b46d-938166fcb0bc","content":"","title":"API Reference","description":"api-reference","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"aeb084c5-e20e-43cf-ac11-f94dadd6ad48","gmt_create":"2025-09-24T23:24:50.690689+02:00","gmt_modified":"2025-09-24T23:24:50.696821+02:00"},{"catalog_id":"a8672b15-afbe-4fe5-ab77-829c873c754e","content":"","title":"User Interface Guide","description":"user-interface-guide","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"cd8b0d1c-cca7-4a37-ae72-144bfb69a852","gmt_create":"2025-09-24T23:25:41.471499+02:00","gmt_modified":"2025-09-24T23:25:41.478281+02:00"},{"catalog_id":"f199b129-963f-4f69-8f08-1183ec20082a","content":"","title":"Monitoring and Diagnostics","description":"monitoring-diagnostics","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"74c5a544-7c60-4842-ac69-1ed72495b584","gmt_create":"2025-09-24T23:26:00.366917+02:00","gmt_modified":"2025-09-24T23:26:00.371747+02:00"},{"catalog_id":"7f23d147-00d2-4cd9-a0d4-ccf720739443","content":"","title":"Testing and Validation","description":"testing-validation","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"85076032-012f-422d-a936-87fd1157bfd7","gmt_create":"2025-09-24T23:27:59.298504+02:00","gmt_modified":"2025-09-24T23:27:59.305277+02:00"},{"catalog_id":"981b35ea-437c-4941-9f28-6f37f80aadb5","content":"","title":"Deployment and Operations","description":"deployment-operations","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"8fa24a4c-3cf2-4dcc-ae4b-8db0df66ae2f","gmt_create":"2025-09-24T23:28:42.585786+02:00","gmt_modified":"2025-09-24T23:28:42.590056+02:00"},{"catalog_id":"a41b008e-0998-4273-ac47-2ec70a727713","content":"","title":"Command Line Interface","description":"command-line-interface","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"e222e697-8c82-453e-9121-b4bfeb4992fd","gmt_create":"2025-09-24T23:28:51.755186+02:00","gmt_modified":"2025-09-24T23:28:51.758439+02:00"},{"catalog_id":"ac3f6191-01eb-4702-aa7e-344df40ee43e","content":"","title":"Troubleshooting Guide","description":"troubleshooting-guide","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"751982e6-48bf-4b23-aec8-cce22efa0d5f","gmt_create":"2025-09-24T23:30:41.220235+02:00","gmt_modified":"2025-09-24T23:30:41.226193+02:00"},{"catalog_id":"1048517e-b275-4438-9b98-251bdacf15de","content":"","title":"Advanced Topics","description":"advanced-topics","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"cce4a769-b3aa-4505-a0f1-db37c63db18d","gmt_create":"2025-09-24T23:32:48.402106+02:00","gmt_modified":"2025-09-24T23:32:48.410026+02:00"},{"catalog_id":"e739a6a7-d7d9-4f51-8808-983bd717f206","content":"","title":"Preset Management","description":"preset-management","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"5434facb-6f22-4480-86d3-1a4dd56c1b74","gmt_create":"2025-09-24T23:35:24.558806+02:00","gmt_modified":"2025-09-24T23:35:24.568735+02:00"},{"catalog_id":"eb968cb8-b1ff-4642-a9b6-ce5a49679db5","content":"","title":"Engine Control API","description":"engine-api","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"5643b7e4-1efc-4df5-94c3-621b4581a146","gmt_create":"2025-09-24T23:35:39.82001+02:00","gmt_modified":"2025-09-24T23:35:39.823732+02:00"},{"catalog_id":"fc7f31b5-449c-4fed-a00f-33f09a0171b4","content":"","title":"Engine Lifecycle Management","description":"engine-lifecycle-management","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"fc7c2373-c340-4572-b926-5ecfcf1bdb85","gmt_create":"2025-09-24T23:35:59.50876+02:00","gmt_modified":"2025-09-24T23:35:59.513917+02:00"},{"catalog_id":"63894fa8-5483-4453-b172-6aad55dfc747","content":"","title":"Dashboard Overview","description":"dashboard-overview","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"c8771381-ac36-49c4-8892-b069a3da61e1","gmt_create":"2025-09-24T23:37:08.099721+02:00","gmt_modified":"2025-09-24T23:37:08.105603+02:00"},{"catalog_id":"cacfc948-070a-4f11-a789-9258f9f85f2b","content":"","title":"Metric Collection","description":"metric-collection","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"c32cb05c-4921-4bfc-b474-948d5a740719","gmt_create":"2025-09-24T23:38:40.126332+02:00","gmt_modified":"2025-09-24T23:38:40.130803+02:00"},{"catalog_id":"78f57b7a-2ba7-45e4-b3f2-71fc07f31b69","content":"","title":"Containerization","description":"containerization","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"7c6d529d-6bec-4498-bcea-b3dd7d9d017e","gmt_create":"2025-09-24T23:40:00.452073+02:00","gmt_modified":"2025-09-24T23:40:00.458795+02:00"},{"catalog_id":"54fd6069-efa4-4d2c-b858-80e42288b380","content":"","title":"Unit Testing","description":"unit-testing","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"bffaea12-ca88-46a5-8fb7-cab91a9f0117","gmt_create":"2025-09-24T23:40:30.069427+02:00","gmt_modified":"2025-09-24T23:40:30.07345+02:00"},{"catalog_id":"97de2347-316b-40d5-b8a6-900cde606d94","content":"","title":"Custom Strategy Development","description":"custom-strategy-development","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"168920fb-3aa4-408b-bf01-9b09b5cd7000","gmt_create":"2025-09-24T23:42:28.636628+02:00","gmt_modified":"2025-09-24T23:42:28.651283+02:00"},{"catalog_id":"a06fee3c-1a05-4adc-b3b2-c1e37c51fb2b","content":"","title":"Startup Issues","description":"startup-issues","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"9b44961c-ec8a-49ce-9b4a-f3aef9a8e2b5","gmt_create":"2025-09-24T23:42:42.24331+02:00","gmt_modified":"2025-09-24T23:42:42.246895+02:00"},{"catalog_id":"94a961e5-7d47-410f-b2ab-283c35aea1ed","content":"","title":"State Machine Implementation","description":"state-machine-implementation","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"323473ec-5361-48ab-aae2-27e07d569e96","gmt_create":"2025-09-24T23:44:16.774827+02:00","gmt_modified":"2025-09-24T23:44:16.780483+02:00"},{"catalog_id":"f7c9ec69-a8f5-4200-8eb7-15ee8661cb08","content":"","title":"Risk Settings","description":"risk-settings","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"3595efba-f187-47f9-b480-37389742f16c","gmt_create":"2025-09-24T23:46:23.924143+02:00","gmt_modified":"2025-09-24T23:46:23.930515+02:00"},{"catalog_id":"d9dec941-9b63-4b3f-9bda-0c89bbd7cf64","content":"","title":"Trading Operations API","description":"trading-api","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"fb1ef920-2fe6-4da8-afe2-d06fdc1d8003","gmt_create":"2025-09-24T23:47:15.315554+02:00","gmt_modified":"2025-09-24T23:47:15.319609+02:00"},{"catalog_id":"eca7df92-f801-4d62-a6ab-ccf71dcc5c74","content":"","title":"Engine Control Interface","description":"engine-control-interface","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"77d61c06-dd21-48d5-9924-e133bff5946b","gmt_create":"2025-09-24T23:47:25.353508+02:00","gmt_modified":"2025-09-24T23:47:25.361533+02:00"},{"catalog_id":"17fc9c4a-fbde-4324-9920-3653b099e5cd","content":"","title":"Diagnostic Reporting","description":"diagnostic-reporting","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"f9fa69c8-e8ce-4599-b844-266f75ea4711","gmt_create":"2025-09-24T23:49:22.840361+02:00","gmt_modified":"2025-09-24T23:49:22.850396+02:00"},{"catalog_id":"1f523983-2a69-4104-8228-b2e9dbc17a46","content":"","title":"Integration Testing","description":"integration-testing","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"4d591d2c-1459-4ab3-a469-b83303daa1d2","gmt_create":"2025-09-24T23:50:29.360617+02:00","gmt_modified":"2025-09-24T23:50:29.366469+02:00"},{"catalog_id":"3e9e3a4c-9b62-4233-a712-0b54c3754867","content":"","title":"Service Orchestration","description":"orchestration","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"f8af43c0-7c5f-4de8-ab69-a20e9575c647","gmt_create":"2025-09-24T23:50:54.935186+02:00","gmt_modified":"2025-09-24T23:50:54.938831+02:00"},{"catalog_id":"254e30b9-f107-4801-9428-13c3fd4ce95b","content":"","title":"Strategy Performance Comparison","description":"strategy-performance-comparison","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"072853ad-b34b-40c6-b22c-7414549feb3b","gmt_create":"2025-09-24T23:54:07.927759+02:00","gmt_modified":"2025-09-24T23:54:07.943729+02:00"},{"catalog_id":"3e875483-46da-4fdf-9957-5251103619c5","content":"","title":"Trading Anomalies","description":"trading-anomalies","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"93ec3bd1-f899-4f5c-8fab-32eb69cc0bf5","gmt_create":"2025-09-24T23:54:34.226708+02:00","gmt_modified":"2025-09-24T23:54:34.230124+02:00"},{"catalog_id":"50220214-0974-4d53-bb45-12cf4c35be6c","content":"","title":"Strategy Parameters","description":"strategy-parameters","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"c004c7f2-a4d7-4723-94eb-73629736a9e0","gmt_create":"2025-09-24T23:58:38.722377+02:00","gmt_modified":"2025-09-24T23:58:38.728932+02:00"},{"catalog_id":"09ebf1af-9bd7-454b-9ce7-a93f2fef0c10","content":"","title":"Workflow Orchestration","description":"workflow-orchestration","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"957006ae-5bb5-4dcd-9fcb-6d3f3f1dd22c","gmt_create":"2025-09-24T23:58:55.613679+02:00","gmt_modified":"2025-09-24T23:58:55.618341+02:00"},{"catalog_id":"51d78211-8f86-4b31-9a4f-00a78afde1e9","content":"","title":"Market Scanner API","description":"scanner-api","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"d0dd7046-f814-4b9e-9d91-bb7c7a97603e","gmt_create":"2025-09-24T23:59:27.427609+02:00","gmt_modified":"2025-09-24T23:59:27.431977+02:00"},{"catalog_id":"9242803b-37f7-42f3-a588-434c5ee7f72f","content":"","title":"Scanner Results View","description":"scanner-results-view","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"4dedab63-db69-48ff-bbcc-6e4035d33900","gmt_create":"2025-09-25T00:01:12.816491+02:00","gmt_modified":"2025-09-25T00:01:12.82213+02:00"},{"catalog_id":"d07aa52e-20b3-470b-87d2-e8297c9515be","content":"","title":"Monitoring Visualization","description":"monitoring-visualization","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"bc10bdd3-1cce-4959-a2b5-d2e4307e0038","gmt_create":"2025-09-25T00:01:26.613907+02:00","gmt_modified":"2025-09-25T00:01:26.619262+02:00"},{"catalog_id":"1c3a663a-2e85-4f7e-981a-27e6bdec5bb9","content":"","title":"Backtesting Validation","description":"backtesting-validation","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"f3518117-b15c-448c-8aad-58fc063bcf44","gmt_create":"2025-09-25T00:03:28.337094+02:00","gmt_modified":"2025-09-25T00:03:28.341487+02:00"},{"catalog_id":"b0c6458d-d4d1-4911-a11c-7eff48ace096","content":"","title":"Production Deployment","description":"production-deployment","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"01262f80-b084-4cef-8d84-d6497a6ae235","gmt_create":"2025-09-25T00:04:07.695907+02:00","gmt_modified":"2025-09-25T00:04:07.700522+02:00"},{"catalog_id":"8a81f0e1-73e4-4b26-ab3d-1c45478561b9","content":"","title":"Performance Problems","description":"performance-problems","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"d1837874-60ab-4eda-9e28-11bce4506cbd","gmt_create":"2025-09-25T00:04:53.26057+02:00","gmt_modified":"2025-09-25T00:04:53.265445+02:00"},{"catalog_id":"b01c4803-2548-43e9-b426-19f709b2c5e4","content":"","title":"Trading Interface","description":"trading-interface","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"5f7f2388-f450-496d-988f-b322f1bd2cbb","gmt_create":"2025-09-25T00:07:25.976687+02:00","gmt_modified":"2025-09-25T00:07:25.981892+02:00"},{"catalog_id":"dad524b0-cd14-434e-9543-8ba032bae03d","content":"","title":"Configuration Presets API","description":"presets-api","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"f0a05da3-bdc6-4d6a-97c3-c1d2eafc1e15","gmt_create":"2025-09-25T00:09:56.366707+02:00","gmt_modified":"2025-09-25T00:09:56.371118+02:00"},{"catalog_id":"267f2470-b9ed-4695-b3c6-98a44c6e31b7","content":"","title":"Exchange Integration","description":"exchange-integration","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"368ad313-ee65-479c-8906-92399cdda758","gmt_create":"2025-09-25T00:10:22.237733+02:00","gmt_modified":"2025-09-25T00:10:22.242571+02:00"},{"catalog_id":"e377d44d-9db5-44b7-a1e2-31e0f373eefd","content":"","title":"Quick Trade Testing","description":"quick-trade-testing","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"2fc6d334-df92-4342-876f-2f91a281d629","gmt_create":"2025-09-25T00:11:32.281548+02:00","gmt_modified":"2025-09-25T00:11:32.2864+02:00"},{"catalog_id":"2d464378-198a-40ab-ac34-4c95418f57a5","content":"","title":"Operations and Maintenance","description":"operations-maintenance","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"a2c344bd-41dd-4205-a3ee-70c443330d29","gmt_create":"2025-09-25T00:12:23.88699+02:00","gmt_modified":"2025-09-25T00:12:23.892106+02:00"},{"catalog_id":"2bf42797-ef0a-4de1-8a87-eb1af1f8d3d2","content":"","title":"Configuration Errors","description":"configuration-errors","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"542490f5-add0-403d-9fb4-e7ed0ba9d3c9","gmt_create":"2025-09-25T00:12:47.38354+02:00","gmt_modified":"2025-09-25T00:12:47.38823+02:00"},{"catalog_id":"e852c4d1-42b1-4f9a-9a03-35d752ff7266","content":"","title":"Preset Management UI","description":"preset-management-ui","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"1cb5d1b0-9541-4592-93e7-79e44e557875","gmt_create":"2025-09-25T00:14:59.938534+02:00","gmt_modified":"2025-09-25T00:14:59.943102+02:00"},{"catalog_id":"b0e81ecf-51cc-4a0a-93d7-9ec3248b1079","content":"","title":"Logs API","description":"logs-api","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"b7c33d00-b858-4ab7-a003-03d019725d03","gmt_create":"2025-09-25T00:15:24.574513+02:00","gmt_modified":"2025-09-25T00:15:24.578609+02:00"},{"catalog_id":"e2a424ef-110d-4fec-af31-1681fea23a9c","content":"","title":"Performance Optimization","description":"performance-optimization","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"c29a6f18-0954-48e9-9a2c-e6cfb4d4c0a8","gmt_create":"2025-09-25T00:17:04.718626+02:00","gmt_modified":"2025-09-25T00:17:04.725985+02:00"},{"catalog_id":"e09bb4c0-a214-4ea2-92ed-0930113a65d4","content":"","title":"Metrics API","description":"metrics-api","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"30153a15-128e-47eb-9242-a11b4a0bff60","gmt_create":"2025-09-25T00:18:22.530963+02:00","gmt_modified":"2025-09-25T00:18:22.536385+02:00"},{"catalog_id":"fda9475b-3136-419c-8a26-8f881fbb5430","content":"","title":"Backtesting and Validation","description":"backtesting-validation","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"363bfc48-1eba-4de7-8c6e-14594c292d55","gmt_create":"2025-09-25T00:19:26.548629+02:00","gmt_modified":"2025-09-25T00:19:26.55378+02:00"},{"catalog_id":"628faf0f-a9ae-4973-a71a-396bd07ee787","content":"","title":"Custom Indicator Integration","description":"custom-indicator-integration","extend":"{}","progress_status":"completed","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","id":"300c4b82-62da-495e-8701-17391c3ec5e1","gmt_create":"2025-09-25T00:24:23.469516+02:00","gmt_modified":"2025-09-25T00:24:23.478054+02:00"}],"wiki_overview":{"content":"\u003cblog\u003e\n# Comprehensive Project Analysis: Breakout Bot Trading System\n\n## 1. Project Introduction\n\nThe Breakout Bot Trading System is a sophisticated algorithmic cryptocurrency trading platform designed to identify and execute breakout trading opportunities across multiple markets. The system combines technical analysis, risk management, and real-time market scanning to automate trading decisions with a focus on performance, reliability, and comprehensive monitoring.\n\n**Core Goals and Objectives:**\n- Implement a state-driven trading engine that systematically scans markets for breakout opportunities\n- Provide robust risk management with configurable presets and kill-switch mechanisms\n- Deliver real-time monitoring, diagnostics, and performance tracking\n- Support both paper (simulation) and live trading modes\n- Enable comprehensive configuration through JSON presets\n\n**Target Audience:**\n- Algorithmic traders specializing in cryptocurrency markets\n- Quantitative analysts developing trading strategies\n- Financial technology developers building automated trading systems\n- Risk managers overseeing automated trading operations\n\n## 2. Technical Architecture\n\n### Component Breakdown\n\nThe project follows a modular architecture with clear separation of concerns, organized into several key components:\n\n```mermaid\nflowchart TD\n    A[Frontend] --\u003e B[API Layer]\n    B --\u003e C[Trading Engine]\n    C --\u003e D[Market Scanning]\n    C --\u003e E[Signal Generation]\n    C --\u003e F[Risk Management]\n    C --\u003e G[Position Management]\n    C --\u003e H[Execution]\n    D --\u003e I[Technical Indicators]\n    E --\u003e I\n    C --\u003e J[State Machine]\n    C --\u003e K[Resource Monitoring]\n    L[Exchange API] --\u003e C\n    M[Database] --\u003e C\n    N[Diagnostics] --\u003e C\n```\n\n### Design Patterns\n\nThe system implements several key design patterns:\n\n- **State Machine Pattern**: Centralized state management controls the trading lifecycle with defined transitions between states like SCANNING, SIGNAL_WAIT, EXECUTION, and MANAGING.\n- **SOLID Principles**: The engine follows SOLID principles with specialized managers for scanning, signals, resources, and trading orchestration.\n- **Dependency Injection**: Components are injected into the main engine rather than being tightly coupled.\n- **Caching Strategy**: Extensive caching of indicators, positions, and system status for low-latency API responses.\n- **Event-Driven Architecture**: WebSocket notifications for state transitions and errors enable real-time frontend updates.\n\n### Data Flow\n\n```mermaid\nflowchart TD\n    A[Market Data] --\u003e B[Scanner]\n    B --\u003e C{Filter \u0026 Score}\n    C --\u003e|Pass| D[Signal Generator]\n    C --\u003e|Fail| E[Discard]\n    D --\u003e F[Risk Manager]\n    F --\u003e|Approved| G[Position Manager]\n    F --\u003e|Rejected| H[Discard]\n    G --\u003e I[Execution Manager]\n    I --\u003e J[Exchange API]\n    J --\u003e K[Order Confirmation]\n    K --\u003e L[Position Manager]\n    L --\u003e M[Performance Tracking]\n    M --\u003e N[Diagnostics]\n    N --\u003e O[Monitoring Dashboard]\n```\n\n## 3. Key Implementation\n\n### Main Entry Points\n- [main.py](breakout_bot/api/main.py): FastAPI application entry point\n- [App.tsx](frontend/src/App.tsx): React frontend entry point\n- [start.sh](start.sh): Deployment script\n\n### Core Modules\n- [engine.py](breakout_bot/core/engine.py): Main trading engine orchestrating all components\n- [state_machine.py](breakout_bot/core/state_machine.py): State management for the trading lifecycle\n- [market_scanner.py](breakout_bot/scanner/market_scanner.py): Market scanning and candidate selection\n- [technical.py](breakout_bot/indicators/technical.py): Technical indicator calculations\n\n### Configuration Approach\n- [settings.py](breakout_bot/config/settings.py): Pydantic-based configuration with environment variables\n- [presets/*.json](breakout_bot/config/presets/): Strategy-specific configuration presets\n- Environment variables for deployment settings\n\n### External Dependencies\n- [requirements.txt](requirements.txt): Python dependencies including FastAPI, ccxt, and pandas\n- [package.json](frontend/package.json): Frontend dependencies including React and TanStack Query\n\n### Integration Points\n- [exchange_client.py](breakout_bot/exchange/exchange_client.py): Exchange API integration (Bybit)\n- [websocket.py](breakout_bot/api/websocket.py): Real-time communication with frontend\n- [database.py](breakout_bot/storage/database.py): Data persistence layer\n\n### Component Relationships\n\n```mermaid\ngraph TD\n    A[OptimizedOrchestraEngine] --\u003e B[StateMachine]\n    A --\u003e C[ScanningManager]\n    A --\u003e D[SignalManager]\n    A --\u003e E[ResourceManager]\n    A --\u003e F[TradingOrchestrator]\n    A --\u003e G[ErrorHandler]\n    C --\u003e H[BreakoutScanner]\n    D --\u003e I[SignalGenerator]\n    F --\u003e J[PositionManager]\n    F --\u003e K[ExecutionManager]\n    F --\u003e L[RiskManager]\n    H --\u003e M[MarketDataProvider]\n    M --\u003e N[ExchangeClient]\n    A --\u003e O[DiagnosticsCollector]\n    P[FastAPI] --\u003e A\n    Q[Frontend] --\u003e P\n```\n\n## 4. Key Features\n\n### Functionality Overview\n\nThe Breakout Bot Trading System provides a comprehensive suite of features for algorithmic trading:\n\n- **Multi-stage Market Scanning**: Identifies potential breakout candidates through liquidity, volatility, and correlation filters\n- **Configurable Trading Presets**: Strategy-specific configurations stored as JSON files\n- **Real-time Monitoring**: Comprehensive health checks and resource monitoring\n- **Risk Management**: Position sizing, daily loss limits, and kill-switch mechanisms\n- **WebSocket Notifications**: Real-time updates for state changes and errors\n- **Diagnostics and Reporting**: Detailed logging and performance analysis\n\n### Implementation Highlights\n\n#### State-Driven Trading Workflow\n\nThe system implements a finite state machine that guides the trading process through distinct phases:\n\n```mermaid\nstateDiagram-v2\n    [*] --\u003e IDLE\n    IDLE --\u003e INITIALIZING : start()\n    INITIALIZING --\u003e SCANNING : complete\n    INITIALIZING --\u003e ERROR : fail\n    \n    SCANNING --\u003e LEVEL_BUILDING : opportunity found\n    SCANNING --\u003e MANAGING : positions active\n    SCANNING --\u003e PAUSED : pause()\n    \n    LEVEL_BUILDING --\u003e SIGNAL_WAIT : levels built\n    LEVEL_BUILDING --\u003e SCANNING : timeout\n    \n    SIGNAL_WAIT --\u003e SIZING : signal detected\n    SIGNAL_WAIT --\u003e SCANNING : timeout\n    \n    SIZING --\u003e EXECUTION : size calculated\n    SIZING --\u003e SCANNING : invalid size\n    \n    EXECUTION --\u003e MANAGING : order placed\n    EXECUTION --\u003e ERROR : execution failed\n    \n    MANAGING --\u003e SCANNING : position closed\n    MANAGING --\u003e EXECUTION : add-on signal\n    \n    PAUSED --\u003e SCANNING : resume()\n    PAUSED --\u003e STOPPED : stop()\n    \n    ERROR --\u003e SCANNING : retry\n    ERROR --\u003e EMERGENCY : critical\n    \n    EMERGENCY --\u003e STOPPED : manual recovery\n    STOPPED --\u003e IDLE : reset\n    \n    SCANNING --\u003e ERROR : health check fail\n    SCANNING --\u003e EMERGENCY : kill switch\n```\n\n#### Optimized Market Scanning\n\nThe market scanner implements a multi-stage filtering process with weighted scoring:\n\n```mermaid\ngraph TD\n    A[All Markets] --\u003e B[Liquidity Filters]\n    B --\u003e C[Volatility Filters]\n    C --\u003e D[Correlation Filter]\n    D --\u003e E[Data Health Check]\n    E --\u003e F[Score Candidates]\n    F --\u003e G[Rank Results]\n    G --\u003e H[Top N Symbols]\n```\n\n#### Risk Management Framework\n\nThe system incorporates comprehensive risk controls at multiple levels:\n\n```mermaid\ngraph TD\n    A[Trade Signal] --\u003e B[Risk Assessment]\n    B --\u003e C{Within Limits?}\n    C --\u003e|Yes| D[Execute Trade]\n    C --\u003e|No| E[Reject Trade]\n    \n    F[Daily P\u0026L] --\u003e G{Loss \u003e Limit?}\n    G --\u003e|Yes| H[Activate Kill Switch]\n    G --\u003e|No| I[Continue Trading]\n    \n    J[Concurrent Positions] --\u003e K{Max Reached?}\n    K --\u003e|Yes| L[Reject New Signals]\n    K --\u003e|No| M[Allow New Trades]\n    \n    N[Position Size] --\u003e O{Within R-Multiple?}\n    O --\u003e|Yes| P[Approve]\n    O --\u003e|No| Q[Reduce Size]\n```\n\nSources:\n- [main.py](breakout_bot/api/main.py)\n- [engine.py](breakout_bot/core/engine.py)\n- [state_machine.py](breakout_bot/core/state_machine.py)\n- [market_scanner.py](breakout_bot/scanner/market_scanner.py)\n- [technical.py](breakout_bot/indicators/technical.py)\n- [settings.py](breakout_bot/config/settings.py)\n- [requirements.txt](requirements.txt)\n- [package.json](frontend/package.json)\n- [exchange_client.py](breakout_bot/exchange/exchange_client.py)\n- [websocket.py](breakout_bot/api/websocket.py)\n- [database.py](breakout_bot/storage/database.py)\n\u003c/blog\u003e","gmt_create":"2025-09-24T23:05:22.631785+02:00","gmt_modified":"2025-09-24T23:05:22.631785+02:00","id":"0f1be740-126a-4345-bd49-e35e035e46e7","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":""},"wiki_readme":{"content":"No readme file","gmt_create":"2025-09-24T23:00:53.159657+02:00","gmt_modified":"2025-09-24T23:00:53.159657+02:00","id":"66357b74-5617-4f02-8a83-a8c7fb86ecf8","repo_id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":""},"wiki_repo":{"id":"af84ad1d-2de3-44b6-8207-2e8ac8d754c4","workspace_path":"","name":"experiments","progress_status":"completed","wiki_present_status":"COMPLETED","optimized_catalog":"\".\\n├── breakout_bot\\n│   ├── api\\n│   │   ├── routers\\n│   │   │   ├── __init__.py\\n│   │   │   ├── charts.py\\n│   │   │   ├── engine.py\\n│   │   │   ├── logs.py\\n│   │   │   ├── metrics.py\\n│   │   │   ├── monitoring.py\\n│   │   │   ├── performance.py\\n│   │   │   ├── presets.py\\n│   │   │   ├── scanner.py\\n│   │   │   └── trading.py\\n│   │   ├── __init__.py\\n│   │   ├── engine_manager.py\\n│   │   ├── main.py\\n│   │   ├── middleware.py\\n│   │   └── websocket.py\\n│   ├── backtesting\\n│   │   ├── __init__.py\\n│   │   └── backtester.py\\n│   ├── cli\\n│   │   ├── __init__.py\\n│   │   └── main.py\\n│   ├── config\\n│   │   ├── presets\\n│   │   │   ├── README.md\\n│   │   │   ├── breakout_v1.json\\n│   │   │   ├── breakout_v1_working.json\\n│   │   │   ├── high_liquidity_top30.json\\n│   │   │   ├── scalping_high_freq.json\\n│   │   │   ├── smallcap_top_gainers.json\\n│   │   │   ├── smallcap_top_losers.json\\n│   │   │   ├── swing_trading_pro.json\\n│   │   │   ├── top_gainers_momentum.json\\n│   │   │   └── top_losers_reversal.json\\n│   │   ├── __init__.py\\n│   │   └── settings.py\\n│   ├── core\\n│   │   ├── __init__.py\\n│   │   ├── engine.py\\n│   │   ├── engine_backup_20250922_001642.py\\n│   │   ├── engine_old.py\\n│   │   ├── error_handler.py\\n│   │   ├── resource_manager.py\\n│   │   ├── scanning_manager.py\\n│   │   ├── signal_manager.py\\n│   │   ├── state_machine.py\\n│   │   └── trading_orchestrator.py\\n│   ├── diagnostics\\n│   │   ├── __init__.py\\n│   │   ├── collector.py\\n│   │   ├── reporting.py\\n│   │   └── runner.py\\n│   ├── exchange\\n│   │   ├── __init__.py\\n│   │   ├── bybit_rate_limiter.py\\n│   │   ├── exchange_client.py\\n│   │   ├── market_stream.py\\n│   │   └── rate_limiter.py\\n│   ├── execution\\n│   │   ├── __init__.py\\n│   │   └── manager.py\\n│   ├── indicators\\n│   │   ├── __init__.py\\n│   │   ├── levels.py\\n│   │   └── technical.py\\n│   ├── position\\n│   │   ├── __init__.py\\n│   │   └── position_manager.py\\n│   ├── risk\\n│   │   ├── __init__.py\\n│   │   └── risk_manager.py\\n│   ├── scanner\\n│   │   ├── __init__.py\\n│   │   ├── market_scanner.py\\n│   │   └── optimized_scanner.py\\n│   ├── signals\\n│   │   ├── __init__.py\\n│   │   └── signal_generator.py\\n│   ├── storage\\n│   │   ├── __init__.py\\n│   │   ├── analytics.py\\n│   │   ├── database.py\\n│   │   └── reports.py\\n│   ├── tests\\n│   │   ├── __init__.py\\n│   │   ├── test_data_models.py\\n│   │   ├── test_engine.py\\n│   │   ├── test_enhanced_states.py\\n│   │   ├── test_indicators.py\\n│   │   ├── test_integration.py\\n│   │   ├── test_positions.py\\n│   │   ├── test_real_scanner.py\\n│   │   ├── test_resource_optimization.py\\n│   │   ├── test_risk.py\\n│   │   ├── test_scanner.py\\n│   │   └── test_signals.py\\n│   ├── utils\\n│   │   ├── cache_manager.py\\n│   │   ├── enhanced_error_handler.py\\n│   │   ├── enhanced_logger.py\\n│   │   ├── log_config.py\\n│   │   ├── metrics_logger.py\\n│   │   ├── monitoring_manager.py\\n│   │   ├── performance_monitor.py\\n│   │   ├── resource_monitor.py\\n│   │   └── safe_math.py\\n│   └── __init__.py\\n├── frontend\\n│   ├── src\\n│   │   ├── api\\n│   │   │   ├── client.ts\\n│   │   │   └── endpoints.ts\\n│   │   ├── components\\n│   │   │   ├── layout\\n│   │   │   │   ├── Header.css\\n│   │   │   │   ├── Header.tsx\\n│   │   │   │   ├── Layout.css\\n│   │   │   │   ├── Layout.tsx\\n│   │   │   │   └── index.ts\\n│   │   │   ├── ui\\n│   │   │   │   ├── Button.tsx\\n│   │   │   │   ├── Card.tsx\\n│   │   │   │   ├── EmptyState.tsx\\n│   │   │   │   ├── LoadingSpinner.tsx\\n│   │   │   │   ├── MetricCard.tsx\\n│   │   │   │   ├── Modal.tsx\\n│   │   │   │   ├── ProcessProgress.tsx\\n│   │   │   │   ├── SmartNotifications.tsx\\n│   │   │   │   ├── StateMachineVisualizer.tsx\\n│   │   │   │   ├── StatusBadge.tsx\\n│   │   │   │   ├── Table.tsx\\n│   │   │   │   └── index.ts\\n│   │   │   ├── EventFeed.tsx\\n│   │   │   └── PresetEditForm.tsx\\n│   │   ├── hooks\\n│   │   │   ├── index.ts\\n│   │   │   ├── useCharts.ts\\n│   │   │   ├── useEngine.ts\\n│   │   │   ├── useLogs.ts\\n│   │   │   ├── usePerformance.ts\\n│   │   │   ├── usePresets.ts\\n│   │   │   ├── useScanner.ts\\n│   │   │   └── useTrading.ts\\n│   │   ├── pages\\n│   │   │   ├── Dashboard.tsx\\n│   │   │   ├── EngineControl.tsx\\n│   │   │   ├── Logs.tsx\\n│   │   │   ├── Monitoring.tsx\\n│   │   │   ├── NotFound.tsx\\n│   │   │   ├── Performance.tsx\\n│   │   │   ├── Presets.tsx\\n│   │   │   ├── Scanner.tsx\\n│   │   │   └── Trading.tsx\\n│   │   ├── router\\n│   │   │   ├── index.ts\\n│   │   │   └── routes.tsx\\n│   │   ├── store\\n│   │   │   ├── index.ts\\n│   │   │   ├── useAppStore.ts\\n│   │   │   └── useWebSocketStore.ts\\n│   │   ├── types\\n│   │   │   ├── api.ts\\n│   │   │   └── index.ts\\n│   │   ├── App.css\\n│   │   ├── App.tsx\\n│   │   ├── index.css\\n│   │   ├── main.tsx\\n│   │   └── vite-env.d.ts\\n│   ├── Dockerfile\\n│   ├── README.md\\n│   ├── eslint.config.js\\n│   ├── index.html\\n│   ├── nginx.conf\\n│   ├── package-lock.json\\n│   ├── package.json\\n│   ├── tsconfig.app.json\\n│   ├── tsconfig.json\\n│   ├── tsconfig.node.json\\n│   └── vite.config.ts\\n├── monitoring\\n│   ├── grafana/datasources\\n│   │   └── prometheus.yml\\n│   └── prometheus.yml\\n├── reports\\n│   └── diag_summary.md\\n├── scripts\\n│   └── log_rotation.sh\\n├── API_DOCUMENTATION.md\\n├── CONCRETE_FIX_PLAN.md\\n├── Dockerfile\\n├── FILTER_OPTIMIZATION_RESULTS.md\\n├── FINAL_FILTER_OPTIMIZATION_REPORT.md\\n├── FINAL_KILL_SWITCH_ANALYSIS.md\\n├── FINAL_TRADE_TESTING_REPORT.md\\n├── LAUNCH_GUIDE.md\\n├── PRODUCTION_DEPLOYMENT.md\\n├── READINESS_REPORT.md\\n├── README.md\\n├── TRADE_TESTING_GUIDE.md\\n├── TRADE_TESTING_RESULTS.md\\n├── TRADING_ANALYSIS_REPORT.md\\n├── TRADING_LOGIC_ANALYSIS_REPORT.md\\n├── analyze_trading_issues.py\\n├── backtest_validation.py\\n├── check_api_endpoints.py\\n├── cleanup_logs.py\\n├── compare_presets.py\\n├── debug_engine.py\\n├── debug_engine_kill_switch.py\\n├── debug_engine_sizing.py\\n├── debug_kill_switch.py\\n├── debug_kill_switch_trigger.py\\n├── debug_real_kill_switch.py\\n├── debug_signal_filters.py\\n├── debug_signal_generation.py\\n├── debug_sizing_issue.py\\n├── deploy.sh\\n├── docker-compose.yml\\n├── force_signal_generation.py\\n├── memory_monitor.py\\n├── memory_snapshot_20250922_233838.json\\n├── memory_snapshot_20250922_234013.json\\n├── package-lock.json\\n├── pyproject.toml\\n├── pytest.ini\\n├── quick_trade_test.py\\n├── real_exchange_test_report.json\\n├── requirements.txt\\n├── simple_test.py\\n├── simulate_breakout.py\\n├── simulate_price_movement.py\\n├── start.sh\\n├── status.sh\\n├── stop.sh\\n├── test_all_fixes_final.py\\n├── test_bybit_rate_limiter.py\\n├── test_engine_debug.py\\n├── test_error_handling_fix.py\\n├── test_full_system.py\\n├── test_full_trade_cycle.py\\n├── test_full_trading_cycle.py\\n├── test_kill_switch_fix.py\\n├── test_paper_trading.py\\n├── test_rate_limiter.py\\n├── test_real_exchange.py\\n├── test_refactoring.py\\n├── test_relaxed_preset.py\\n├── test_report.json\\n├── test_simple_rate_limiter.py\\n└── update.sh\\n\"","current_document_structure":"WikiEncrypted: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","catalogue_think_content":"WikiEncrypted:","recovery_checkpoint":"wiki_generation_completed","last_commit_id":"ca42ca3b5203f0a20a9a0303b9511e60610d7060","last_commit_update":"2025-09-16T01:10:15+02:00","gmt_create":"2025-09-24T23:00:49.113065+02:00","gmt_modified":"2025-09-25T00:24:23.612895+02:00","extend_info":"{\"language\":\"en\",\"active\":true,\"branch\":\"main\",\"shareStatus\":\"\",\"server_error_code\":\"\",\"cosy_version\":\"\"}"}}