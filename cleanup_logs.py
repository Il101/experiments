#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∏ —Ä–æ—Ç–∞—Ü–∏–∏ –ª–æ–≥–æ–≤ Breakout Bot Trading System.
"""

import argparse
import sys
from pathlib import Path

# –î–æ–±–∞–≤–∏—Ç—å –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append('.')

from breakout_bot.utils.log_config import cleanup_old_logs, get_log_stats, setup_logging


def main():
    parser = argparse.ArgumentParser(description='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–æ–≥–∞–º–∏ Breakout Bot')
    parser.add_argument('--cleanup', action='store_true', help='–û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –ª–æ–≥–∏')
    parser.add_argument('--stats', action='store_true', help='–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ª–æ–≥–æ–≤')
    parser.add_argument('--setup', action='store_true', help='–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ')
    parser.add_argument('--days', type=int, default=7, help='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ª–æ–≥–æ–≤')
    parser.add_argument('--log-dir', default='logs', help='–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å –ª–æ–≥–∞–º–∏')
    
    args = parser.parse_args()
    
    if args.setup:
        print("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è...")
        setup_logging(log_dir=args.log_dir)
        print("‚úÖ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ")
    
    if args.stats:
        print("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ª–æ–≥–æ–≤:")
        stats = get_log_stats(args.log_dir)
        if "error" in stats:
            print(f"‚ùå {stats['error']}")
        else:
            print(f"üìä –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: {stats['total_files']}")
            print(f"üìä –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: {stats['total_size_mb']} MB")
            print("\nüìÅ –§–∞–π–ª—ã:")
            for filename, info in stats['files'].items():
                print(f"   {filename}: {info['size_mb']} MB")
    
    if args.cleanup:
        print(f"–û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤ —Å—Ç–∞—Ä—à–µ {args.days} –¥–Ω–µ–π...")
        cleanup_old_logs(args.log_dir, args.days)
        print("‚úÖ –°—Ç–∞—Ä—ã–µ –ª–æ–≥–∏ –æ—á–∏—â–µ–Ω—ã")
    
    if not any([args.setup, args.stats, args.cleanup]):
        parser.print_help()


if __name__ == "__main__":
    main()
