version: '3.8'

services:
  breakout-bot-api:
    build: .
    container_name: breakout-bot-api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=sqlite:///app/data/breakout_bot.db
      - LOG_LEVEL=INFO
      - TRADING_MODE=paper
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./reports:/app/reports
      - ./.env:/app/.env:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/api/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - breakout-network

  breakout-bot-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: breakout-bot-frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8000
    depends_on:
      - breakout-bot-api
    restart: unless-stopped
    networks:
      - breakout-network

  redis:
    image: redis:7-alpine
    container_name: breakout-bot-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - breakout-network

  prometheus:
    image: prom/prometheus:latest
    container_name: breakout-bot-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - breakout-network

  grafana:
    image: grafana/grafana:latest
    container_name: breakout-bot-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    restart: unless-stopped
    networks:
      - breakout-network

volumes:
  redis-data:
  prometheus-data:
  grafana-data:

networks:
  breakout-network:
    driver: bridge
