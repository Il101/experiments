/**
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–≤–∏–∂–∫–æ–º
 * –í–∫–ª—é—á–∞–µ—Ç –∏–∫–æ–Ω–∫–∏, –æ–ø–∏—Å–∞–Ω–∏—è, tooltips –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
 */

import { TOOLTIPS } from './tooltips';

export interface CommandConfig {
  id: string;
  label: string;
  icon: string;
  tooltip: string;
  variant: 'success' | 'danger' | 'warning' | 'secondary' | 'primary' | 'info';
  requireConfirm: boolean;
  confirmDialog?: {
    title: string;
    message: string;
    confirmText?: string;
    cancelText?: string;
    danger?: boolean;
  };
}

export const COMMAND_CONFIGS: Record<string, CommandConfig> = {
  start: {
    id: 'start',
    label: 'Start',
    icon: '‚ñ∂Ô∏è',
    tooltip: TOOLTIPS.CMD_START,
    variant: 'success',
    requireConfirm: false,
  },
  
  stop: {
    id: 'stop',
    label: 'Stop',
    icon: '‚èπÔ∏è',
    tooltip: TOOLTIPS.CMD_STOP,
    variant: 'danger',
    requireConfirm: true,
    confirmDialog: {
      title: '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞?',
      message: '–ë–æ—Ç –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç —Ä–∞–±–æ—Ç—É, –Ω–æ –ù–ï –∑–∞–∫—Ä–æ–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ–∑–∏—Ü–∏–∏. –î–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –≤—Å–µ—Ö –ø–æ–∑–∏—Ü–∏–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ "Panic Exit".',
      confirmText: '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å',
      cancelText: '–û—Ç–º–µ–Ω–∞',
      danger: false,
    },
  },
  
  pause: {
    id: 'pause',
    label: 'Pause',
    icon: '‚è∏Ô∏è',
    tooltip: TOOLTIPS.CMD_PAUSE,
    variant: 'warning',
    requireConfirm: false,
  },
  
  resume: {
    id: 'resume',
    label: 'Resume',
    icon: '‚ñ∂Ô∏è',
    tooltip: TOOLTIPS.CMD_RESUME,
    variant: 'success',
    requireConfirm: false,
  },
  
  reload: {
    id: 'reload',
    label: 'Reload',
    icon: 'üîÑ',
    tooltip: TOOLTIPS.CMD_RELOAD,
    variant: 'info',
    requireConfirm: false,
  },
  
  time_stop: {
    id: 'time_stop',
    label: 'Time Stop',
    icon: '‚è±Ô∏è',
    tooltip: TOOLTIPS.CMD_TIME_STOP,
    variant: 'warning',
    requireConfirm: true,
    confirmDialog: {
      title: '–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏',
      message: '–ó–∞–∫—Ä—ã—Ç—å –≤—Å–µ –ø–æ–∑–∏—Ü–∏–∏ –≤ –∫–æ–Ω—Ü–µ —Ç–æ—Ä–≥–æ–≤–æ–π —Å–µ—Å—Å–∏–∏?',
      confirmText: '–î–∞, –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å',
      cancelText: '–û—Ç–º–µ–Ω–∞',
      danger: false,
    },
  },
  
  panic_exit: {
    id: 'panic_exit',
    label: 'Panic Exit',
    icon: 'üö®',
    tooltip: TOOLTIPS.CMD_PANIC_EXIT,
    variant: 'danger',
    requireConfirm: true,
    confirmDialog: {
      title: '‚ö†Ô∏è –ê–í–ê–†–ò–ô–ù–´–ô –í–´–•–û–î',
      message: '–í—Å–µ –ø–æ–∑–∏—Ü–∏–∏ –±—É–¥—É—Ç –∑–∞–∫—Ä—ã—Ç—ã –ù–ï–ú–ï–î–õ–ï–ù–ù–û –ü–û –†–´–ù–û–ß–ù–û–ô –¶–ï–ù–ï!\n\n' +
               '‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ—Å–∫–∞–ª—å–∑—ã–≤–∞–Ω–∏–µ –∏ –Ω–µ–∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Ç–µ—Ä–∏.\n\n' +
               '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö!\n\n' +
               '–í—ã —É–≤–µ—Ä–µ–Ω—ã?',
      confirmText: '–î–∞, –∑–∞–∫—Ä—ã—Ç—å –í–°–Å',
      cancelText: '–û—Ç–º–µ–Ω–∞',
      danger: true,
    },
  },
  
  kill_switch: {
    id: 'kill_switch',
    label: 'Kill Switch',
    icon: 'üî¥',
    tooltip: TOOLTIPS.CMD_KILL_SWITCH,
    variant: 'danger',
    requireConfirm: true,
    confirmDialog: {
      title: 'üö® –ê–ö–¢–ò–í–ò–†–û–í–ê–¢–¨ KILL SWITCH?',
      message: 'Kill Switch:\n\n' +
               '1. –ó–∞–∫—Ä–æ–µ—Ç –í–°–ï –æ—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ–∑–∏—Ü–∏–∏\n' +
               '2. –ó–∞–±–ª–æ–∫–∏—Ä—É–µ—Ç –æ—Ç–∫—Ä—ã—Ç–∏–µ –Ω–æ–≤—ã—Ö —Å–¥–µ–ª–æ–∫\n' +
               '3. –ü–æ—Ç—Ä–µ–±—É–µ—Ç —Ä—É—á–Ω–æ–π –æ—Ç–º–µ–Ω—ã –¥–ª—è –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã\n\n' +
               '–û–±—ã—á–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–∞ –ø—Ä–æ—Å–∞–¥–∫–∏.\n\n' +
               '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –≤—Ä—É—á–Ω—É—é?',
      confirmText: '–î–∞, –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å Kill Switch',
      cancelText: '–û—Ç–º–µ–Ω–∞',
      danger: true,
    },
  },
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∫–æ–º–∞–Ω–¥—ã –ø–æ ID
 */
export function getCommandConfig(commandId: string): CommandConfig | undefined {
  return COMMAND_CONFIGS[commandId.toLowerCase()];
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –¥–æ—Å—Ç—É–ø–Ω–∞ –ª–∏ –∫–æ–º–∞–Ω–¥–∞ –≤ —Ç–µ–∫—É—â–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
 */
export function isCommandAvailable(commandId: string, availableCommands: string[]): boolean {
  return availableCommands.map(cmd => cmd.toLowerCase()).includes(commandId.toLowerCase());
}
